(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{187:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return r})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(1),i=n(11),o=(n(0),n(224)),c={title:"Application Identification",sidebar_label:"Application Identification"},r={id:"concepts_appid",title:"Application Identification",description:"## Identifying Applications by Name",source:"@site/docs/concepts_appid.md",permalink:"/docs/concepts_appid",lastUpdatedAt:1586892678,sidebar_label:"Application Identification",sidebar:"docs",previous:{title:"Application Discovery",permalink:"/docs/concepts_application_discovery"},next:{title:"High Availability - Theory of Operation",permalink:"/docs/concepts_ha_theoryofoperation"}},s=[{value:"Identifying Applications by Name",id:"identifying-applications-by-name",children:[{value:"DNS-based Services",id:"dns-based-services",children:[]},{value:"AppID based on TLS",id:"appid-based-on-tls",children:[]},{value:"AppID using Modules",id:"appid-using-modules",children:[]}]}],l={rightToc:s};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"identifying-applications-by-name"},"Identifying Applications by Name"),Object(o.b)("p",null,'The 128T Session Smart routing platform has several techniques by which it can associate inbound traffic to named applications. This is sometimes referred to as "Application Identification" (or "appID"), and the feature that allows administrators to define network policies using Fully Qualified Domain Names (FQDNs) instead of IP addresses.'),Object(o.b)("p",null,"The 128T router has three built-in techniques for affiliating named applications to services, all of which will be described in this document. (A fourth technique, involving service function chaining third party software is not covered here.) The three techniques are:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Using DNS to resolve FQDNs to IP addresses"),Object(o.b)("li",{parentName:"ol"},"Using the ",Object(o.b)("inlineCode",{parentName:"li"},"application-identification")," mode ",Object(o.b)("inlineCode",{parentName:"li"},"tls")),Object(o.b)("li",{parentName:"ol"},"Using the ",Object(o.b)("inlineCode",{parentName:"li"},"application-identification")," mode ",Object(o.b)("inlineCode",{parentName:"li"},"module"))),Object(o.b)("h3",{id:"dns-based-services"},"DNS-based Services"),Object(o.b)("p",null,"Generally, when configuring a ",Object(o.b)("inlineCode",{parentName:"p"},"service")," on a 128T router, administrators use the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," field to identify the IP address(es)/CIDR block(s) that the 128T should use to match to inbound traffic. However, the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," field will also accept hostnames, such as ",Object(o.b)("inlineCode",{parentName:"p"},"www.128technology.com"),". When a service uses a hostname in the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," field, it is referred to as a ",Object(o.b)("em",{parentName:"p"},"DNS-based service"),"."),Object(o.b)("p",null,"For every DNS-based service, the 128T will use its local DNS to resolve the hostnames; for every IP address that is returned the 128T will treat that as though it were configured in the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," field, and install FIB entries accordingly. It will also refresh these FIB entries based on the time-to-live (TTL) returned by the DNS server. Here is a sample configuration for reference:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"admin@labsystem1.fiedler# show config running authority service interchange\n\nconfig\n\n    authority\n\n        service  interchange\n            name                  interchange\n\n            scope                 private\n            security              internal\n            address               community.128technology.com\n\n            access-policy         trusted\n                source      trusted\n                permission  allow\n            exit\n            share-service-routes  false\n        exit\n    exit\nexit\n")),Object(o.b)("p",null,"In this configuration, the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," is configured as ",Object(o.b)("inlineCode",{parentName:"p"},"community.128technology.com"),". This will be resolved once the configuration is committed, and the 128T will resolve that hostname and install FIB entries. The 128T will periodically re-resolve those hostnames to ensure that the FIB entries are kept up-to-date."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The names used in the ",Object(o.b)("inlineCode",{parentName:"p"},"address")," field must be DNS-resolvable names. You cannot use wildcards such as ",Object(o.b)("inlineCode",{parentName:"p"},"*.128technology.com"),"."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Advantages"),":"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"This is a very easy and intuitive way to associate traffic to services, without having to define a long list of IP addresses. When upstream devices change their IP address, there's no need to reconfigure the 128T to keep it up-to-date, as this is handled by DNS."),Object(o.b)("li",{parentName:"ol"},'Unlike AppID based on TLS, there is no "chicken and egg issue;" i.e., no prerequisite to have the destination be reachable in order to learn the destination\'s name.')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Disadvangates"),":"),Object(o.b)("p",null,"This technique relies on your 128T getting the same answers from DNS that your clients get. Take for example a massive SaaS provider such as ",Object(o.b)("inlineCode",{parentName:"p"},"www.salesforce.com"),". Their web site resolves to hundreds or thousands of IP addresses distributed across the globe. When the 128T resolves that hostname, it will get a handful of answers; if a client does the same DNS query and gets a different set of answers, then the traffic the client sends will not match the FIB entries that the 128T has created."),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Key to success")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Use DNS-based services when your destination uses a small set of nonvolatile IP addresses. This technique is perfect for small, hosted services. The effectiveness of using DNS-based services diminishes rapidly when referencing names that resolve to dozens of address or more."))),Object(o.b)("h3",{id:"appid-based-on-tls"},"AppID based on TLS"),Object(o.b)("p",null,"The 128T router can also ",Object(o.b)("em",{parentName:"p"},"learn about named destinations")," by inspecting the traffic that traverses it. This is done by inspecting the X.509 certificate sent by a server during the TLS handshake process. Importantly: ",Object(o.b)("em",{parentName:"p"},"this presupposes that the 128T can route packets to that destination for the purposes of retrieving the server's certificate"),". Thus, when using AppID based on TLS, it is important to ensure that there is a ",Object(o.b)("inlineCode",{parentName:"p"},"service")," and ",Object(o.b)("inlineCode",{parentName:"p"},"service-route")," capable of reaching that server in addition to the one you'll configure for the named application."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},'Normally this is done by having a "catch-all" service for ',Object(o.b)("inlineCode",{parentName:"p"},"0.0.0.0/0")," to route traffic out to the internet, but it does not need to be."))),Object(o.b)("p",null,"Within the ",Object(o.b)("inlineCode",{parentName:"p"},"Server Hello")," message sent by a server will include its X.509 certificate, which is decipherable by the client to include information about the server. One such example is here:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"[ptimmons@labsystem1 ~]$ openssl x509 -in /tmp/512b-rsa-example-cert.pem -text -noout\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number: 3578 (0xdfa)\n    Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=JP, ST=Tokyo, L=Chuo-ku, O=Frank4DD, OU=WebCert Support, CN=Frank4DD Web CA/emailAddress=support@frank4dd.com\n        Validity\n            Not Before: Aug 22 05:26:54 2012 GMT\n            Not After : Aug 21 05:26:54 2017 GMT\n        Subject: C=JP, ST=Tokyo, O=Frank4DD, CN=www.example.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (512 bit)\n                Modulus:\n                    00:9b:fc:66:90:79:84:42:bb:ab:13:fd:2b:7b:f8:\n                    de:15:12:e5:f1:93:e3:06:8a:7b:b8:b1:e1:9e:26:\n                    bb:95:01:bf:e7:30:ed:64:85:02:dd:15:69:a8:34:\n                    b0:06:ec:3f:35:3c:1e:1b:2b:8f:fa:8f:00:1b:df:\n                    07:c6:ac:53:07\n                Exponent: 65537 (0x10001)\n    Signature Algorithm: sha1WithRSAEncryption\n         14:b6:4c:bb:81:79:33:e6:71:a4:da:51:6f:cb:08:1d:8d:60:\n         ec:bc:18:c7:73:47:59:b1:f2:20:48:bb:61:fa:fc:4d:ad:89:\n         8d:d1:21:eb:d5:d8:e5:ba:d6:a6:36:fd:74:50:83:b6:0f:c7:\n         1d:df:7d:e5:2e:81:7f:45:e0:9f:e2:3e:79:ee:d7:30:31:c7:\n         20:72:d9:58:2e:2a:fe:12:5a:34:45:a1:19:08:7c:89:47:5f:\n         4a:95:be:23:21:4a:53:72:da:2a:05:2f:2e:c9:70:f6:5b:fa:\n         fd:df:b4:31:b2:c1:4a:9c:06:25:43:a1:e6:b4:1e:7f:86:9b:\n         16:40\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"This sample certificate was supplied by ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.fm4dd.com/openssl/certexamples.htm"}),"FM4DD"),"."))),Object(o.b)("p",null,"About a third of the way through the output you can see that the ",Object(o.b)("em",{parentName:"p"},"Common Name")," (listed as ",Object(o.b)("inlineCode",{parentName:"p"},"CN")," in the ",Object(o.b)("inlineCode",{parentName:"p"},"Subject")," line) is ",Object(o.b)("inlineCode",{parentName:"p"},"www.example.com"),'. This is what 128T will parse and subsequently retain as the "application name" for this destination. Assuming this matches a configured ',Object(o.b)("inlineCode",{parentName:"p"},"application-name")," within a ",Object(o.b)("inlineCode",{parentName:"p"},"service"),", a FIB entry is installed with this server's IP address and associated with the ",Object(o.b)("inlineCode",{parentName:"p"},"service"),"."),Object(o.b)("p",null,"To enable application identification based on TLS, configure the ",Object(o.b)("inlineCode",{parentName:"p"},"application-identification")," element within the ",Object(o.b)("inlineCode",{parentName:"p"},"router")," context as seen here:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"admin@labsystem1.fiedler# show config running authority router burlington application-identification\n\nconfig\n\n    authority\n\n        router  burlington\n            name                        burlington\n\n            application-identification\n                mode  tls\n            exit\n        exit\n    exit\nexit\n")),Object(o.b)("p",null,"For reference, here's a ",Object(o.b)("inlineCode",{parentName:"p"},"service")," that would leverage the X.509 certificate shown above:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'admin@labsystem1.fiedler# show config running authority service example\n\nconfig\n\n    authority\n\n        service  example\n            name                  example\n            description           "www.example.com website"\n            application-name      www.example.com\n\n            access-policy         trusted\n                source      trusted\n                permission  allow\n            exit\n            service-policy        NO-LTE\n            share-service-routes  false\n        exit\n    exit\nexit\n')),Object(o.b)("p",null,"Here we can see the ",Object(o.b)("inlineCode",{parentName:"p"},"application-name")," set to ",Object(o.b)("inlineCode",{parentName:"p"},"www.example.com"),", which matches the Common Name from the X.509 certificate in our example. Assuming we had a ",Object(o.b)("inlineCode",{parentName:"p"},"service"),"/",Object(o.b)("inlineCode",{parentName:"p"},"service-route")," capable of reaching ",Object(o.b)("inlineCode",{parentName:"p"},"www.example.com")," to begin with, the TLS handshake would see the server's X.509 certificate returned back to the client through the 128T. The 128T parses the certificate, recognizes ",Object(o.b)("inlineCode",{parentName:"p"},"www.example.com")," as belonging to the service named ",Object(o.b)("inlineCode",{parentName:"p"},"example")," and installs a FIB entry for it with the server's IP address."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"example")," service needs to have its own ",Object(o.b)("inlineCode",{parentName:"p"},"service-route")," in order for traffic to be forwarded."))),Object(o.b)("p",null,"With the TLS-based application identification technique, the ",Object(o.b)("inlineCode",{parentName:"p"},"application-name")," can include a wildcard such as ",Object(o.b)("inlineCode",{parentName:"p"},"*.example.com"),", which is not possible with the DNS-based approach. This gives administrators a bit more flexibility in defining which traffic to match to services when parsing the X.509 certificates."),Object(o.b)("h3",{id:"appid-using-modules"},"AppID using Modules"),Object(o.b)("p",null,"The last, and arguably most powerful built-in technique for performing application identification is to use a ",Object(o.b)("em",{parentName:"p"},"module")," \u2013 effectively, a script that is resident on the 128T router's host operating system that will generate a JSON file that contains dynamic, ingestible routes. This is extremely flexible, but requires some programming expertise."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"It is also possible to simply place a static JSON document on the 128T's filesystem (i.e., one that is not generated by a local script) as a means of feeding an application identification module into the 128T)."))),Object(o.b)("p",null,"Configuring application identification based on modules first requires that a router have the feature enabled:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"admin@labsystem1.fiedler# show config running authority router becket application-identification\n\nconfig\n\n    authority\n\n        router  becket\n            name                        becket\n\n            application-identification\n                mode  module\n            exit\n        exit\n    exit\nexit\n")),Object(o.b)("p",null,"Next, scripts are placed on the router's filesystem at ",Object(o.b)("inlineCode",{parentName:"p"},"/etc/128technology/application-modules/"),". These scripts must produce JSON output stored at ",Object(o.b)("inlineCode",{parentName:"p"},"/var/run/128technology/application-modules/"),", which in turn will be consumed by the 128T router and installed as FIB entries."),Object(o.b)("p",null,"Each module has a name that is used to reference it in the configuration. For example, an application identification module named ",Object(o.b)("inlineCode",{parentName:"p"},"ZOOM")," will retrieve and process all of the IP addresses used for the Zoom videoconferencing service. The corresponding service looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'admin@labsystem1.fiedler# show config running authority service ZOOM\n\nconfig\n\n    authority\n\n        service  ZOOM\n            name                  ZOOM\n\n            description           "Zoom meetings"\n            scope                 private\n            application-name      ZOOM\n\n            access-policy         trusted\n                source      trusted\n                permission  allow\n            exit\n            share-service-routes  false\n        exit\n    exit\nexit\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"application-name")," is configured as it is with the ",Object(o.b)("inlineCode",{parentName:"p"},"tls")," variant of ",Object(o.b)("inlineCode",{parentName:"p"},"application-identification"),". In this case, however, it will read the contents of a JSON file to produce the FIB entries. An excerpt from the ",Object(o.b)("inlineCode",{parentName:"p"},"ZOOM")," module's output is here:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n  "duration": 86400,\n  "services": {\n    "ZOOM": [\n      {\n        "ip-prefix": "3.7.35.0/25"\n      },\n      {\n        "ip-prefix": "3.21.137.128/25"\n      },\n      {\n        "ip-prefix": "3.22.11.0/24"\n      },\n      ...\n    ]\n  },\n  "module-name": "zoom"\n}\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("div",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"In the case of this module, the script that generates the JSON is ",Object(o.b)("inlineCode",{parentName:"p"},"/etc/128technology/application-modules/zoom.py"),", the output is stored as ",Object(o.b)("inlineCode",{parentName:"p"},"/var/run/128technology/application-modules/zoom.json"),". A copy of the ",Object(o.b)("inlineCode",{parentName:"p"},"zoom.py")," script is available on our user community, ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://community.128technology.com"}),"Interchange"),"."))),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"services")," tag of ",Object(o.b)("inlineCode",{parentName:"p"},"ZOOM")," is what associates these IP prefixes to the service we've shown above. Each of these IP prefixes (which could have also included port ranges, but don't in this example) will create a FIB entry for the ",Object(o.b)("inlineCode",{parentName:"p"},"ZOOM")," service, and be given access and policy determinations based on the configuration we've set in our 128T."),Object(o.b)("p",null,"The 128T product ships with an Office365 module, and other modules can be found on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://community.128technology.com"}),"Interchange"),", our user community, as well as on Github. For more information on writing your own application identification module, refer to our developer documentation or our sample code."))}d.isMDXComponent=!0},224:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),d=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r({},t,{},e)),n},b=function(e){var t=d(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=d(n),m=a,h=b["".concat(c,".").concat(m)]||b[m]||p[m]||o;return n?i.a.createElement(h,r({ref:t},l,{components:n})):i.a.createElement(h,r({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var l=2;l<o;l++)c[l]=n[l];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);