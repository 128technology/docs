(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{231:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(9),i=(n(0),n(256)),c={title:"DNS Cache Plugin",sidebar_label:"DNS Cache"},s={id:"plugin_dns_cache",title:"DNS Cache Plugin",description:"The 128T-dns-cache plugin provides a DNS caching service on your 128T router by forwarding all traffic on a configured ingress-service and tenant to dnsmasq. By default it uses existing system configuration for nameserver resolution, but supports optionally configuring custom server addresses. The plugin is implemented as a service function chain (SFC) where the DNS traffic received on an ingress interface is detoured through a Kernel Network Interface (KNI) to be cached by dnsmasq. A typical flow of the packets for the plugin is illustrated below:",source:"@site/docs/plugin_dns_cache.md",permalink:"/docs/plugin_dns_cache",lastUpdatedAt:1595517202,sidebar_label:"DNS Cache",sidebar:"docs",previous:{title:"DNS App Id Plugin",permalink:"/docs/plugin_dns_app_id"},next:{title:"GRE Plugin",permalink:"/docs/plugin_gre"}},l=[{value:"Configuration",id:"configuration",children:[{value:"Notes about the Sample Configuration",id:"notes-about-the-sample-configuration",children:[]},{value:"Custom DNS Servers",id:"custom-dns-servers",children:[]}]},{value:"Third Party Software and Licenses",id:"third-party-software-and-licenses",children:[]},{value:"Troubleshooting",id:"troubleshooting",children:[]},{value:"Release Notes",id:"release-notes",children:[{value:"Release 1.0.1",id:"release-101",children:[]},{value:"Release 2.0.1",id:"release-201",children:[]}]}],o={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The 128T-dns-cache plugin provides a DNS caching service on your 128T router by forwarding all traffic on a configured ",Object(i.b)("inlineCode",{parentName:"p"},"ingress-service")," and ",Object(i.b)("inlineCode",{parentName:"p"},"tenant")," to ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://www.thekelleys.org.uk/dnsmasq/doc.html"}),"dnsmasq"),". By default it uses existing system configuration for nameserver resolution, but supports optionally configuring custom server addresses. The plugin is implemented as a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/plugin_intro#service-function-chaining"}),"service function chain")," (SFC) where the DNS traffic received on an ingress interface is detoured through a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/concepts_kni"}),"Kernel Network Interface")," (KNI) to be cached by ",Object(i.b)("inlineCode",{parentName:"p"},"dnsmasq"),". A typical flow of the packets for the plugin is illustrated below:"),Object(i.b)("p",null,"lan-intf (lan-tenant) > ",Object(i.b)("inlineCode",{parentName:"p"},"ingress-service")," > ",Object(i.b)("inlineCode",{parentName:"p"},"dnsmasq")," > dns-kni (",Object(i.b)("inlineCode",{parentName:"p"},"tenant"),") > egress-service > wan-intf"),Object(i.b)("p",null,"By enabling this plugin, you can provide DNS caching with fast resolution times to your network."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The instructions for installing and managing the plugin can be found ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/plugin_intro#installation-and-management"}),"here"),"."))),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"Assuming the below 128T configuration:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"config\n    authority\n        name Authority128\n        conductor-address labconductor.acme.com\n        tenant dns-cache-plugin\n            name dns-cache-plugin\n        exit\n        tenant lan-clients\n            name lan-clients\n            security aes1\n        exit\n        service internet\n            name internet\n            security internal\n            address 0.0.0.0/0\n            access-policy lan-clients\n                source lan-clients\n                permission allow\n            exit\n            access-policy dns-cache-plugin\n                source dns-cache-plugin\n                permission allow\n            exit\n            share-service-routes false\n        exit\n        service dns-catcher\n            name dns-catcher\n            transport udp\n                protocol udp\n                port-range 53\n                    start-port 53\n                exit\n            exit\n            address 0.0.0.0/0\n            access-policy lan-clients\n                source lan-clients\n                permission allow\n            exit\n        exit\n        router labrouter\n            name labrouter\n            node node1\n                name node1\n                role combo\n                device-interface LAN\n                    name LAN\n                    network-interface vlan0\n                        name vlan0\n                        tenant lan-clients\n                        dhcp v4\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n")),Object(i.b)("p",null,"We can apply the following DNS cache plugin configuration:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"config\n    authority\n        router lab-router\n            name lab-router\n            dns-cache\n                enabled true\n                tenant dns-cache-plugin\n                ingress-service dns-catcher\n            exit\n        exit\n    exit\nexit\n")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Element"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"enabled"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Default value: true. Governs whether the DNS cache is operationally enabled or not.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"name"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"128T device name"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Default value: ",Object(i.b)("inlineCode",{parentName:"td"},"dns-cache"),". This controls the name of the service function chain interface.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"addresses"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"IPv4 address"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Multiple instance object. This will specify the upstream DNS resolvers to use, overriding the ones normally used by the Linux host operating system on the machine.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ingress-service"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"reference"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This refers to a configured ",Object(i.b)("inlineCode",{parentName:"td"},"service"),' within the authority that will be used to "trap" inbound DNS requests, to divert them to dnsmasq. Generally, this is a service that has an address of 0.0.0.0/0 and restricted to UDP/53.')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"plugin-network"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"CIDR"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Default value: 169.254.141.128/30. This controls the IP addresses used for the internal SFC network to detour packets to and from the on-board DNS cache. This should only be changed if there is a conflict with another IP block in use on this same host system.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"tenant"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"reference"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This is the tenant that will be assigned to the SFC interface (of type KNI). All packets leaving the DNS cache and heading toward an upstream DNS resolver will be associated with this tenant. For this reason, it is important that your 128T configuration also includes a ",Object(i.b)("inlineCode",{parentName:"td"},"service")," that allows this ",Object(i.b)("inlineCode",{parentName:"td"},"tenant")," to reach the upstream resolvers. Typically, this is an ",Object(i.b)("inlineCode",{parentName:"td"},"internet")," service (0.0.0.0/0).")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ingress-source-nat-pool"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"reference"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This refers to a configured ",Object(i.b)("inlineCode",{parentName:"td"},"source-nat-pool"),", and will be used when forwarding the traffic through the DNS cache/service function chain.")))),Object(i.b)("h3",{id:"notes-about-the-sample-configuration"},"Notes about the Sample Configuration"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"ingress-service")," we have configured is ",Object(i.b)("inlineCode",{parentName:"p"},"dns-catcher"),". This is a simple service that matches any IP address (0.0.0.0/0) and has a destination protocol and port of UDP/53. Our ",Object(i.b)("inlineCode",{parentName:"p"},"dns-catcher")," service is set to allow the ",Object(i.b)("inlineCode",{parentName:"p"},"lan-clients")," tenant (which is assigned to the LAN ",Object(i.b)("inlineCode",{parentName:"p"},"network-interface"),"), so any traffic arriving on this interface destined for UDP/53 will be detoured to the DNS cache."),Object(i.b)("p",null,"The DNS cache will either respond locally (if there's an existing cache entry), or will forward the request to an upstream resolver. For the latter case, it will reenter the 128T's forwarding plane via the KNI interface (a.k.a. the \"service function chain\" interface) and be affiliated with the ",Object(i.b)("inlineCode",{parentName:"p"},"tenant")," named ",Object(i.b)("inlineCode",{parentName:"p"},"dns-cache-plugin"),"."),Object(i.b)("p",null,"Once in the 128T's data plane, this traffic will match the ",Object(i.b)("inlineCode",{parentName:"p"},"internet")," service (we've added an ",Object(i.b)("inlineCode",{parentName:"p"},"allow")," statement for the ",Object(i.b)("inlineCode",{parentName:"p"},"dns-cache-plugin")," tenant), and be forwarded out to the upstream server(s)."),Object(i.b)("h3",{id:"custom-dns-servers"},"Custom DNS Servers"),Object(i.b)("p",null,"To configure custom server addresses for dnsmasq instead of the ones affiliated with the host machine that the plugin is running on, add the ",Object(i.b)("inlineCode",{parentName:"p"},"addresses")," field:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"dns-cache\n    enabled          true\n    addresses        1.1.1.1\n    addresses        2.2.2.2\n    tenant           dns-cache-plugin\n    ingress-service  dns-catcher\nexit\n")),Object(i.b)("h2",{id:"third-party-software-and-licenses"},"Third Party Software and Licenses"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"dnsmasq (GNU GPL v2, v3)")),Object(i.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(i.b)("p",null,"To verify that the services are running properly on the 128T router:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"systemctl status 128T-dns-cache-forwarder.service")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"systemctl status 128T-dns-cache-matcher.service"))),Object(i.b)("p",null,"Verify that the dns-cache network interface (default ",Object(i.b)("inlineCode",{parentName:"p"},"dns-cache-intf"),") is UP."),Object(i.b)("h2",{id:"release-notes"},"Release Notes"),Object(i.b)("h3",{id:"release-101"},"Release 1.0.1"),Object(i.b)("h4",{id:"issues-fixed"},"Issues Fixed"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"PLUGIN-402")," Ensure the application restarts with 128T")),Object(i.b)("h3",{id:"release-201"},"Release 2.0.1"),Object(i.b)("h4",{id:"issues-fixed-1"},"Issues Fixed"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"PLUGIN-402")," Ensure the application restarts with 128T")))}b.isMDXComponent=!0},256:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),b=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=b(n),p=a,h=d["".concat(c,".").concat(p)]||d[p]||u[p]||i;return n?r.a.createElement(h,s(s({ref:t},o),{},{components:n})):r.a.createElement(h,s({ref:t},o))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var o=2;o<i;o++)c[o]=n[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);