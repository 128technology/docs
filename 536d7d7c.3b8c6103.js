(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{105:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(6),r=(n(0),n(215)),c={title:"VRF Learning via BGP",sidebar_label:"VRF Learning via BGP"},o={unversionedId:"config_vrf_learning",id:"config_vrf_learning",isDocsHomePage:!1,title:"VRF Learning via BGP",description:"The following configuration procedures can be used to initiate VRF learning using BGP.",source:"@site/docs/config_vrf_learning.md",slug:"/config_vrf_learning",permalink:"/docs/config_vrf_learning",version:"current",lastUpdatedAt:1617980429,sidebar_label:"VRF Learning via BGP",sidebar:"docs",previous:{title:"Configuring BGP",permalink:"/docs/config_bgp"},next:{title:"Configuration Element Reference",permalink:"/docs/config_reference_guide"}},s=[{value:"Add VRF Objects",id:"add-vrf-objects",children:[{value:"VRF Support for Static Routes",id:"vrf-support-for-static-routes",children:[]},{value:"Redistributing Static Routes",id:"redistributing-static-routes",children:[]},{value:"Tenant to VRF Mapping",id:"tenant-to-vrf-mapping",children:[]}]},{value:"Service Mapping",id:"service-mapping",children:[{value:"Services with Different Tenants",id:"services-with-different-tenants",children:[]},{value:"Single Service with Multiple Tenants Associated with Different VRFs",id:"single-service-with-multiple-tenants-associated-with-different-vrfs",children:[]},{value:"Service with no Tenant VRF Association",id:"service-with-no-tenant-vrf-association",children:[]}]},{value:"Show Commands",id:"show-commands",children:[]}],l={rightToc:s};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The following configuration procedures can be used to initiate VRF learning using BGP. "),Object(r.b)("h2",{id:"add-vrf-objects"},"Add VRF Objects"),Object(r.b)("p",null,"To add VRF learning using BGP, add VRF objects to the ",Object(r.b)("inlineCode",{parentName:"p"},"routing default-instance"),", and configure BGP as the routing protocol. This allows the 128T BGP instance to peer with a remote peer and learn routes for the VRF."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"router         Test\n    routing    default-instance\n        vrf    red\n            name    red\n            routing-protocol        bgp\n                type                bgp\n                local-as            1\n                router-id 10.1.1.1\n                neighbor\n                    neighbor-address  10.1.1.2\n                    neighbor-as       3000\n")),Object(r.b)("p",null,"In the example above, all routes learned via BGP will be installed within the VRF table Red. "),Object(r.b)("h3",{id:"vrf-support-for-static-routes"},"VRF Support for Static Routes"),Object(r.b)("p",null,"Static route configuration is configured in the respective VRF instance."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"router         Test\n    routing               default-instance\n        vrf               red\n            static-route      11.1.1.1/32 10\n                next-hop-interface  node1 wan5          \n")),Object(r.b)("h3",{id:"redistributing-static-routes"},"Redistributing Static Routes"),Object(r.b)("p",null,"When VRF static routes are redistributed into BGP (using ",Object(r.b)("inlineCode",{parentName:"p"},"redistribute-static"),"), only the static routes within that VRF are redistributed into BGP. When BGP is configured outside a VRF directly under ",Object(r.b)("inlineCode",{parentName:"p"},"routing default-instance"),", the static routes from the global (default) route table are distributed. The ",Object(r.b)("inlineCode",{parentName:"p"},"static-route")," command is used to populate static routes in the respective VRF table."),Object(r.b)("h3",{id:"tenant-to-vrf-mapping"},"Tenant to VRF Mapping"),Object(r.b)("p",null,"128T routers use Tenants to segment L3 traffic in the forwarding plane. VRF provides L3 segmentation at the routing layer. A 128T router does not have any VRF definitions associated with an interface. Instead, an interface can be assigned a tenant to denote all traffic coming from that interface to be classified as that tenant. The VRF-Tenant mapping is used for redistributing connected routes and for mapping services."),Object(r.b)("p",null,"Use the following example to create a basic configuration for mapping a tenant to a VRF:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"    router Test\n        routing default-instance\n            vrf red\n                tenant-name finance\n")),Object(r.b)("p",null,"A tenant can only be mapped to one VRF."),Object(r.b)("h2",{id:"service-mapping"},"Service Mapping"),Object(r.b)("p",null,"Each Service prefix is matched against the routing table that corresponds to the tenant (using the VRF ",Object(r.b)("inlineCode",{parentName:"p"},"tenant-name")," mapping configuration). If no VRF tenant mapping exists for the tenant, the service prefix is matched against the global routing table. If no match is found, no FIB entries are installed for that service and tenant."),Object(r.b)("h3",{id:"services-with-different-tenants"},"Services with Different Tenants"),Object(r.b)("p",null,"The VRF mapping below has a tenant per VRF, and there are 2 services; each with a different tenant access policy."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"router         Test\n    routing     default-instance\n        vrf         red\n            tenant-name     finance\n        vrf                 blue\n            tenant-name     eng\n    \nService  web\n    address 10.1.1.0/24\n    access-policy tenant finance\n\nService  database\n    address 10.1.1.0/24\n    access-policy tenant eng\n")),Object(r.b)("p",null,"The prefix is the same for both the services, but the service ",Object(r.b)("inlineCode",{parentName:"p"},"web")," is matched against the routes in VRF ",Object(r.b)("inlineCode",{parentName:"p"},"red"),", while the service database is matched against routes in VRF ",Object(r.b)("inlineCode",{parentName:"p"},"blue"),".\nFIB entries are installed for each tenant based on where the best matched route is in the respective VRF route table."),Object(r.b)("h3",{id:"single-service-with-multiple-tenants-associated-with-different-vrfs"},"Single Service with Multiple Tenants Associated with Different VRFs"),Object(r.b)("p",null,"In this example the VRF mapping has a tenant per VRF, but only one service with access to both tenants."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"router         Test\n    routing               default-instance\n        vrf               red\n            tenant-name       finance\n        vrf               blue\n            tenant-name       eng\nService  web\n    address 10.1.1.0/24\n    access-policy tenant finance\n    access-policy tenant eng\n")),Object(r.b)("p",null,"With the VRF associations to a single service, the tenants (",Object(r.b)("inlineCode",{parentName:"p"},"finance")," and ",Object(r.b)("inlineCode",{parentName:"p"},"eng"),") use the same prefix (",Object(r.b)("inlineCode",{parentName:"p"},"10.1.1.0/24"),") but are located in different VRFs (red/finance, blue/eng). In this configuration the same service can lead to 2 different next hops for different tenants. "),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In the following cases, a single service with multiple tenants associated with different VRFs is not currently supported. "),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"If the service has a service-route with a NAT target not bound to a specific next-hop."),Object(r.b)("li",{parentName:"ul"},"If the service is a multicast service.")),Object(r.b)("p",{parentName:"div"},"In these cases, validation will ensure that all access-policy tenants are associated with ",Object(r.b)("strong",{parentName:"p"},"the same, or no VRF.")))),Object(r.b)("h3",{id:"service-with-no-tenant-vrf-association"},"Service with no Tenant VRF Association"),Object(r.b)("p",null,"A service with access to tenants that have no VRF association will default to the global routing table for route matches.\nVRF serves as a routing table for each tenant to ensure that there is a route to the destination. Multiple tenants can have access to this VRF table via Services. If a service is not defined with a prefix that matches the routing table, no FIB entries are installed. "),Object(r.b)("h2",{id:"show-commands"},"Show Commands"),Object(r.b)("p",null,"The following show commands have been extended to specify ",Object(r.b)("inlineCode",{parentName:"p"},"vrf"),". For specific use examples, refer to the linked section in the Command Line Reference guide."),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-bgp"}),Object(r.b)("inlineCode",{parentName:"a"},"show bgp"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-bgp-neighbors"}),Object(r.b)("inlineCode",{parentName:"a"},"show bgp neighbors"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-bgp-summary"}),Object(r.b)("inlineCode",{parentName:"a"},"show bgp summary"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-fib"}),Object(r.b)("inlineCode",{parentName:"a"},"show fib"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-rib"}),Object(r.b)("inlineCode",{parentName:"a"},"show rib"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#show-vrf"}),Object(r.b)("inlineCode",{parentName:"a"},"show vrf"))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli_reference#clear-bgp"}),Object(r.b)("inlineCode",{parentName:"a"},"clear bgp vrf"))))}b.isMDXComponent=!0},215:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),b=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=b(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,f=p["".concat(c,".").concat(u)]||p[u]||d[u]||r;return n?i.a.createElement(f,o(o({ref:t},l),{},{components:n})):i.a.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var l=2;l<r;l++)c[l]=n[l];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);