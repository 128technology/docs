(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{149:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(204)),o={title:"Programmable Command Line Interface (PCLI)",sidebar_label:"PCLI"},c={unversionedId:"concepts_pcli",id:"concepts_pcli",isDocsHomePage:!1,title:"Programmable Command Line Interface (PCLI)",description:"About the PCLI",source:"@site/docs/concepts_pcli.md",slug:"/concepts_pcli",permalink:"/docs/concepts_pcli",version:"current",lastUpdatedAt:1615832254,sidebar_label:"PCLI",sidebar:"docs",previous:{title:"Intra- and Inter-System Communication",permalink:"/docs/concepts_machine_communication"},next:{title:"Session Timers",permalink:"/docs/concepts_session_timer"}},s=[{value:"About the PCLI",id:"about-the-pcli",children:[]},{value:"The PCLI Prompt",id:"the-pcli-prompt",children:[]},{value:"Shortcuts",id:"shortcuts",children:[{value:"&lt;ctrl&gt;+z",id:"ctrlz",children:[]},{value:"<code>!</code> (run previous command)",id:"-run-previous-command",children:[]}]},{value:"Features",id:"features",children:[{value:"Paste Config",id:"paste-config",children:[]}]}],l={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"about-the-pcli"},"About the PCLI"),Object(i.b)("p",null,"The PCLI (an acronym for ",Object(i.b)("em",{parentName:"p"},"Programmable Command Line Interface"),") is one of the two primary human interfaces on the 128T router; this document will use the terms PCLI and CLI interchangeably. This document describes the set of PCLI commands supported by the 128T router. Each command listed below will show all mandatory and optional arguments, representative output from the PCLI where applicable, and version history."),Object(i.b)("p",null,"Note that all of the examples in this document will be run as the ",Object(i.b)("em",{parentName:"p"},"admin")," role (as denoted by the prompt in this and other examples); however, each command will also indicate which user roles \u2013 either ",Object(i.b)("em",{parentName:"p"},"user")," or ",Object(i.b)("em",{parentName:"p"},"admin")," at the time of this writing \u2013 are eligible to run the command based upon that command","'","s privileges. Note that unprivileged ",Object(i.b)("em",{parentName:"p"},"user"),' accounts will not only be unable to execute these commands, they will not "see" them in the PCLI as part of the help text, etc.'),Object(i.b)("p",null,"Optional arguments are written in brackets (",Object(i.b)("inlineCode",{parentName:"p"},"[")," ",Object(i.b)("inlineCode",{parentName:"p"},"]"),"), and users may include or omit them as needed. Variable arguments (where users need to supply a value, rather than entering in the literal string shown in the syntax) are written in angle brackets (",Object(i.b)("inlineCode",{parentName:"p"},"<")," ",Object(i.b)("inlineCode",{parentName:"p"},">"),")."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"show stats packet-processing action failure [core <core>]\n")),Object(i.b)("p",null,"In this example, a user may include core information",Object(i.b)("sup",Object(r.a)({parentName:"p"},{id:"fnref-1"}),Object(i.b)("a",Object(r.a)({parentName:"sup"},{href:"#fn-1",className:"footnote-ref"}),"1")),'. If including core, the user must supply the literal string "core" and a value for the core, such as "0".'),Object(i.b)("p",null,"Braces, brackets, and pipes are often combined and nested to describe the complete grammar of the command line syntax for any given command."),Object(i.b)("h2",{id:"the-pcli-prompt"},"The PCLI Prompt"),Object(i.b)("p",null,'The PCLI will indicate that there are uncommitted configuration changes via a change to the prompt. When uncommitted changes exist, the prompt is prefixed with an asterisk ("',"*",'"):'),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"*admin@labsystem1.fiedler#\n*admin@labsystem1.fiedler# validate\nCandidate configuration is valid\n*admin@labsystem1.fiedler# commit\nAre you sure you want to commit the candidate config? [y/N]: y\nConfiguration committed\nadmin@labsystem1.fiedler#\n")),Object(i.b)("h2",{id:"shortcuts"},"Shortcuts"),Object(i.b)("h3",{id:"ctrlz"},"<","ctrl",">","+z"),Object(i.b)("p",null,"Cisco CLI implements ",Object(i.b)("inlineCode",{parentName:"p"},"<ctrl>+z"),", which is a shortcut for ",Object(i.b)("inlineCode",{parentName:"p"},"enter")," + ",Object(i.b)("inlineCode",{parentName:"p"},"top")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<ctrl>+z")," on the 128T is an improvement over Cisco's CLI and is the equivalent to the following two actions:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"<enter>")," execute whatever is currently on the prompt line (if any)"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"top<enter>")," exit the current menu and go to the root of the PCLI tree")),Object(i.b)("p",null,"When the buffer is empty:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"admin@node1.router1# configure authority router router1 <enter>\nadmin@node1.router1 (router[name=router1])# <ctrl-z>\nadmin@node1.router1#\n")),Object(i.b)("p",null,"With a valid command"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"admin@node1.router1# configure authority router router1 <enter>\nadmin@node1.router1 (router[name=Fabric128])# validate <ctrl-z>\n\u2714 Validating...\nCandidate configuration is valid\nadmin@node1.router1#\n")),Object(i.b)("p",null,"With an invalid command"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"admin@node1.router1 (router[name=router1])# bad <ctrl-z>\nCommand 'bad' not found (use '?' for help)\nadmin@node1.router1#\n")),Object(i.b)("h3",{id:"-run-previous-command"},Object(i.b)("inlineCode",{parentName:"h3"},"!")," (run previous command)"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"!")," can be used to execute a previously executed command from the PCLI's history."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"PCLI history can be seen by running ",Object(i.b)("inlineCode",{parentName:"p"},"show history"),"."))),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"!")," command offers three options:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"!! to re-run the last command run"),Object(i.b)("li",{parentName:"ol"},"!","<","number",">"," to re-run a specific command from the PCLI history. Negative numbers are supported to perform a reverse search of the history. (i.e., ",Object(i.b)("inlineCode",{parentName:"li"},"!-1")," = ",Object(i.b)("inlineCode",{parentName:"li"},"!!"),")"),Object(i.b)("li",{parentName:"ol"},"!","<","string",">"," to re-run the most recent substring match from the PCLI history (reverse search of history).")),Object(i.b)("h2",{id:"features"},"Features"),Object(i.b)("h3",{id:"paste-config"},"Paste Config"),Object(i.b)("p",null,"When working across multiple systems, it is convenient to cut-and-paste snippets of one configuration and paste it directly into another 128T router. The PCLI detects configuration entered in bulk and accepts input in either ",Object(i.b)("inlineCode",{parentName:"p"},"show config")," native format or flat format. Invalid configuration is handled in the same fashion as it would be as if it were entered line by line."),Object(i.b)("p",null,"An example of copying a service from one system and pasting it to another can be seen below."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-config"}),"admin@tp-colo-primary.tp-colo# show config running authority service internet_service\n\nconfig\n\n    authority\n\n        service  internet_service\n            name                  internet_service\n            enabled               true\n            scope                 private\n            security              no_encryption\n            address               0.0.0.0/0\n\n            access-policy         _internal_\n                source      _internal_\n                permission  allow\n            exit\n\n            access-policy         t128\n                source      t128\n                permission  allow\n            exit\n            service-policy        data-best-effort\n            share-service-routes  true\n        exit\n    exit\nexit\n\n...\n\nadmin@tp-colo-secondary.tp-colo# config\n(config)> authority\n(authority)> service internet_service\n(service)> name internet_service\n(service)> enabled true\n(service)> scope private\n(service)> security no_encryption\n(service)> address 0.0.0.0/0\n(service)> access-policy linux\n(access-policy)> source linux\n(access-policy)> permission allow\n(access-policy)> exit\n(service)> access-policy t128\n(access-policy)> source t128\n(access-policy)> permission allow\n(access-policy)> exit\n(service)> service-policy data-best-effort\n(service)> share-service-routes true\n(service)> exit\n(authority)> exit\n(config)> exit\n")),Object(i.b)("div",{className:"footnotes"},Object(i.b)("hr",{parentName:"div"}),Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",Object(r.a)({parentName:"ol"},{id:"fn-1"}),"forwarding plan metrics are stored uniquely per worker ",Object(i.b)("inlineCode",{parentName:"li"},"forwarding-core-count"),".",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#fnref-1",className:"footnote-backref"}),"\u21a9")))))}p.isMDXComponent=!0},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=p(n),u=r,d=b["".concat(o,".").concat(u)]||b[u]||m[u]||i;return n?a.a.createElement(d,c(c({ref:t},l),{},{components:n})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);