(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{121:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return s})),a.d(e,"metadata",(function(){return l})),a.d(e,"rightToc",(function(){return c})),a.d(e,"default",(function(){return p}));var n=a(2),i=a(6),o=(a(0),a(188)),r=a(261),s={title:"Installing From OTP ISO"},l={unversionedId:"intro_installation_otp_iso",id:"intro_installation_otp_iso",isDocsHomePage:!1,title:"Installing From OTP ISO",description:"One Touch Provisioning (OTP)",source:"@site/docs/intro_installation_otp_iso.mdx",slug:"/intro_installation_otp_iso",permalink:"/docs/intro_installation_otp_iso",version:"current",lastUpdatedAt:1593462634,sidebar:"docs",previous:{title:"Creating a Bootable USB from ISO",permalink:"/docs/intro_creating_bootable_usb"},next:{title:"Quick Start from a Bootable ISO",permalink:"/docs/intro_ztp"}},c=[{value:"One Touch Provisioning (OTP)",id:"one-touch-provisioning-otp",children:[]},{value:"Installing 128T with the ISO",id:"installing-128t-with-the-iso",children:[{value:"Bootable USB",id:"bootable-usb",children:[]}]},{value:"Bootstrapping",id:"bootstrapping",children:[{value:"Hostname and Salt Minion Identifier",id:"hostname-and-salt-minion-identifier",children:[]},{value:"QuickStart Location",id:"quickstart-location",children:[]},{value:"Image Validation",id:"image-validation",children:[]},{value:"Scriptlets",id:"scriptlets",children:[]},{value:"Bootstrapping Flow Chart",id:"bootstrapping-flow-chart",children:[]}]},{value:"QuickStart file via REST",id:"quickstart-file-via-rest",children:[{value:"Testing",id:"testing",children:[]}]}],b={rightToc:c};function p(t){var e=t.components,a=Object(i.a)(t,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,a,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"one-touch-provisioning-otp"},"One Touch Provisioning (OTP)"),Object(o.b)("p",null,"The OTP installation process produces a system installed with 128T software set to its factory defaults. Upon completion of the OTP installation process, the default behavior is to provision the device to be configured with a DHCP client on the first ethernet port and DHCP server listening on all other ports. A user would then connect to the 128T via ethernet cable and use the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/intro_ztp"}),"QuickStart")," file generated by the Conductor to finalize the 128T configuration. After performing the QuickStart operation, the 128T will have connectivity to its Conductor and can download the latest configuration (if necessary) and begin operation. These defaults ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"#quickstart-location"}),"can be changed")," to suit your needs."),Object(o.b)("h2",{id:"installing-128t-with-the-iso"},"Installing 128T with the ISO"),Object(o.b)("h3",{id:"bootable-usb"},"Bootable USB"),Object(o.b)("p",null,"For smaller deployments or proof of concepts each image can be loaded on to a bootable USB for installing the operating system and 128T software. Follow the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/intro_installation_bootable_media"}),"instructions")," for installing from bootable media. After installation, the platform will power off."),Object(o.b)("h4",{id:"disk-cloning"},"Disk Cloning"),Object(o.b)("p",null,"Disk cloning will allow large distributors to take an ISO image, install it on to a platform, and create a master disk copy of the platform."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"When using cloned images, the same exact hardware platform must be used.  Create a new master disk image for each hardware variation."))),Object(o.b)("p",null,"This disk copy can then be used to quickly install platforms by copying the filesystem and 128T software from one platform to another. After the initial installation the platform will be powered off. At this point in time the platform is generic and not unique -- which is the proper time to create a disk clone of the hard drive."),Object(o.b)("p",null,"The following procedure must be followed:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Platform is installed using ISO image which powers down on success"),Object(o.b)("li",{parentName:"ol"},"Use Clonezilla or other Live USB to take a disk copy of the platform"),Object(o.b)("li",{parentName:"ol"},"Distribute disk clone using USB, multicast, or other technique"),Object(o.b)("li",{parentName:"ol"},"Start each platform after installation"),Object(o.b)("li",{parentName:"ol"},"Allow platform to bootstrap and then reboot"),Object(o.b)("li",{parentName:"ol"},"Verify platform validation report")),Object(o.b)("h2",{id:"bootstrapping"},"Bootstrapping"),Object(o.b)("p",null,"As mentioned above, the platform is generic after the initial installation and poweroff. However, once the platform is started again there is an automated script that does bootstrapping of the platform. This script is a one-shot service unit that only executes ",Object(o.b)("strong",{parentName:"p"},"once")," during the first bootup. It will perform the following steps:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Configure Hostname and Salt Minion Identifier"),Object(o.b)("li",{parentName:"ol"},"Configure 128T and network interfaces"),Object(o.b)("li",{parentName:"ol"},"Enable 128T and salt-minion service"),Object(o.b)("li",{parentName:"ol"},"Write a Result Report"),Object(o.b)("li",{parentName:"ol"},"Reboot")),Object(o.b)("p",null,"After rebooting the 128T service will be running with configuration."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"It is worth noting that after the OS installation -- dhclient is configured across all network interfaces until the platform has completed Bootstrapping."))),Object(o.b)("h3",{id:"hostname-and-salt-minion-identifier"},"Hostname and Salt Minion Identifier"),Object(o.b)("p",null,"The hostname and salt minion identifier are set to the same value during the bootstrapping process."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"If the system serial number provisioned (which can be seen by ",Object(o.b)("inlineCode",{parentName:"li"},"dmidecode --string system-serial-number"),") this value will be used."),Object(o.b)("li",{parentName:"ol"},"Otherwise use the first MAC address found in the format of: ",Object(o.b)("inlineCode",{parentName:"li"},"mac-<address>"))),Object(o.b)("h3",{id:"quickstart-location"},"QuickStart Location"),Object(o.b)("p",null,"The Bootstrapper will set 128T configuration via a QuickStart file that can be present in a number of locations:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"The QuickStart file can be placed in the root of an attached USB drive. i.e. ",Object(o.b)("inlineCode",{parentName:"p"},"/bootstrap.quickstart"),Object(o.b)("br",null),'The USB drive MUST be named "BOOTSTRAP" in all caps.')),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"If an attached USB drive is not found with the file in root, then the one-shot process will look for the QuickStart file ",Object(o.b)("inlineCode",{parentName:"p"},"/etc/128technology/bootstrap.quickstart"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"If no file source is present, the Bootstrapper will execute HTTP GET requests to the following endpoints in an attempt to download the QuickStart File from a server. The REST response is explained in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"#quickstart-file-via-rest"}),"REST details"),"."),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"http://quickstart.128t-bootstrap.local/quickstart/<identifier>")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"http://192.168.128.128/quickstart/<identifier>"),Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Where ",Object(o.b)("inlineCode",{parentName:"p"},"<identifier>")," will be the minion-id as determined by the algorithm discussed in the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"#hostname-and-salt-minion-identifier"}),"above")," section. It will most likely be the system serial number."))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Else use OTP defaults, which sets up DHCP client on the first ethernet port and a DHCP server listening on all other ports."))),Object(o.b)("h3",{id:"image-validation"},"Image Validation"),Object(o.b)("p",null,"Once the platform has been rebooted after bootstrapping has completed, there will be a bootstrap validation report that is located at the root filesystem (",Object(o.b)("inlineCode",{parentName:"p"},"/root/128T-bootstrap.txt"),") that contains details about the steps taken. There is also the file ",Object(o.b)("inlineCode",{parentName:"p"},"/root/128T-bootstrap.json")," that contains the same information in JSON format. The report will contain a message that includes additional details for each step."),Object(o.b)("p",null,"Shown below is the location of the bootstrap report as well as an example of the contents"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"[root@sn123456789 ~]# cat /root/128T-bootstrap.txt\n+--------------------+--------+---------------------------------+\n| Label              | Result | Message                         |\n+--------------------+--------+---------------------------------+\n| Minion ID          | True   | mac-000000                      |\n| Hostname           | True   | mac-000000                      |\n| Clock Sync         | True   |                                 |\n| Initialize 128T    | True   | node.Router                     |\n| Enable 128T        | True   |                                 |\n| Enable salt-minion | True   |                                 |\n| Factory Defaults   | True   | http://192.168.0.100/quickstart |\n| Ifgcfg files       | True   |                                 |\n+--------------------+--------+---------------------------------+\n")),Object(o.b)("h3",{id:"scriptlets"},"Scriptlets"),Object(o.b)("p",null,"In addition to the above steps, the Bootstrap utility supports executing pre- and post- scriptlets on a USB drive for further customisation of the platform.  The scriptlets will be executed as the first step in the bootstrap process and as the last step."),Object(o.b)("p",null,"The locations for the scriptlets are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If scriptlet exists at the root of USB drive and is called \u201c/pre-bootstrap\u201d",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Otherwise, try to use /etc/128technology/pre-bootstrap"))),Object(o.b)("li",{parentName:"ul"},"If scriptlet exists at the root of USB drive and is called \u201c/post-bootstrap\u201d",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Otherwise, try to use /etc/128technology/post-bootstrap")))),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The scriptlets must have executable permissions to be executed properly."))),Object(o.b)("p",null,"Any stdout/stderr output generated from the scriptlets will be logged for you in ",Object(o.b)("inlineCode",{parentName:"p"},"/var/log/128T-bootstrap/<scriptlet-name>-scriptlet.log"),"."),Object(o.b)("h3",{id:"bootstrapping-flow-chart"},"Bootstrapping Flow Chart"),Object(o.b)("p",null,"Below is a diagram of the procedure followed by the Bootstrapper software during first bootup of the platform. This occurs after the ISO installation when powered on for the first time."),Object(o.b)(r.a,{chartCode:"\n    st=>start: Start\n      bs=>operation: Check for Pre-Bootstrap Scriptlet\n      usb1=>condition: On USB?\n      def1=>condition: Default?\n      es=>inputoutput: Execute Pre-Bootstrap Scriptlet\n      smh=>operation: Set Minion ID\nSet Hostname\nSynchronize Clock\n      sfd=>operation: Set 128T Factory Defaults\n      usb2=>condition: On USB?\n      def2=>condition: Default?\n      rest=>condition: REST get?\n      aq=>inputoutput: Apply quickstart.txt\n      aotpd=>inputoutput: Apply OTP Defaults\n      ist=>operation: Setup IFCFG\nEnable salt-minion\nEnable 128T\n      pbs=>operation: Check for Post-Bootstrap Scriptlet\n      usb3=>condition: On USB?\n      def3=>condition: Default?\n      es2=>inputoutput: Execute Post-Bootstrap Scriptlet\n      fin=>operation: Finalize\n      wbr=>subroutine: Write Bootstrap Report\n      reb=>operation: Reboot\n      e=>end: End\n    st->bs->usb1\n    usb1(no)->def1\n    usb1(yes)->es\n    def1(yes)->es\n    def1(no)->smh\n    es->smh\n    smh->sfd->usb2\n    usb2(no, right)->def2\n    usb2(yes, right)->aq\n    def2(yes)->aq\n    def2(no)->rest\n    rest(no)->aotpd\n    rest(yes)->aq->ist\n    aotpd->ist->pbs->usb3\n    usb3(yes)->es2\n    usb3(no)->def3\n    def3(yes)->es2->fin\n    def3(no)->fin\n    fin->wbr->reb->e\n  ",mdxType:"Flowchart"}),Object(o.b)("h2",{id:"quickstart-file-via-rest"},"QuickStart file via REST"),Object(o.b)("p",null,"If no bootstrap file is present on USB device or disk, the Bootstrapper will execute HTTP GET requests in an attempt to download the QuickStart file from a server."),Object(o.b)("p",null,"The server must respond to the HTTP GET request with valid JSON data that is of format:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"{\n  \u201cquickstart\u201d: \u201c<quickstart-file-contents>\u201d,\n  \u201cpassword\u201d: \u201cthis-is-my-password\u201d\n}\n")),Object(o.b)("div",{className:"admonition admonition-important alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The response must be URL-encoded otherwise the client will not decode the data correctly."))),Object(o.b)("p",null,"The password data within the JSON is required if the QuickStart file was encrypted when exported from the 128T Conductor."),Object(o.b)("h3",{id:"testing"},"Testing"),Object(o.b)("p",null,"The bootstrap utility provides an entrypoint to test your own QuickStart Server. By executing the below command, the client will make requests to URLs and attempt to download and decode the QuickStart file. It will NOT apply the QuickStart to the platform -- only test the process."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ bootstrap128t rest-test -i <test-identifier>\n")),Object(o.b)("p",null,"OR if you want to test a specific url."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ bootstrap128t rest-test -i <test-identifier> --url <a-fully-qualified-url>\n")))}p.isMDXComponent=!0},261:function(t,e,a){"use strict";var n=a(3),i=a(0),o=a.n(i),r=a(8),s=a.n(r),l=a(7),c=function(t){function e(e){var a;return(a=t.call(this,e)||this).state={},a}Object(n.a)(e,t);var i=e.prototype;return i.componentDidMount=function(){l.a.canUseDOM&&this.setState({Flowchart:a(304).default})},i.render=function(){var t=this.state.Flowchart,e=this.props,a=e.chartCode,n=e.scale,i=void 0===n?.7:n;return l.a.canUseDOM&&t?o.a.createElement("div",{style:{overflowX:"scroll"}},o.a.createElement(t,{options:{scale:i},chartCode:a})):o.a.createElement("div",null)},e}(o.a.Component);c.propTypes={chartCode:s.a.string.isRequired,scale:s.a.number},e.a=c}}]);