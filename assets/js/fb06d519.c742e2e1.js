"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[4957],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},83264:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),o=["components"],l={title:"LTE and Dual LTE Configuration",sidebar_label:"LTE and Dual LTE Configuration"},s={unversionedId:"howto_lte",id:"howto_lte",isDocsHomePage:!1,title:"LTE and Dual LTE Configuration",description:"History",source:"@site/docs/howto_lte.md",sourceDirName:".",slug:"/howto_lte",permalink:"/docs/howto_lte",version:"current",lastUpdatedAt:1638886753,formattedLastUpdatedAt:"12/7/2021",sidebar_label:"LTE and Dual LTE Configuration",frontMatter:{title:"LTE and Dual LTE Configuration",sidebar_label:"LTE and Dual LTE Configuration"},sidebar:"docs",previous:{title:"Extending Web UI Navigation Bar",permalink:"/docs/howto_extend_gui_nav"},next:{title:"Configuring Dual PPPoE",permalink:"/docs/howto_config_PPPoE"}},u=[{value:"LTE Connectivity",id:"lte-connectivity",children:[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Hardware Identification",id:"hardware-identification",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Troubleshooting",id:"troubleshooting",children:[]}]},{value:"Special Considerations",id:"special-considerations",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"history"},"History"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Release"),(0,r.kt)("th",{parentName:"tr",align:null},"Modification"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4.3.3"),(0,r.kt)("td",{parentName:"tr",align:null},"This feature was introduced")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5.0.0"),(0,r.kt)("td",{parentName:"tr",align:null},"Enhanced for Dual LTE")))),(0,r.kt)("h2",{id:"lte-connectivity"},"LTE Connectivity"),(0,r.kt)("p",null,"LTE connectivity is a valuable means of providing an alternate path for multi-path routing; either as a primary path in locations that have no access to circuits or as a path of last resort in the event that the primary circuit has failed."),(0,r.kt)("p",null,"Dual LTE support is valuable when connecting to two discrete wireless carriers where there is a need for an active/active LTE connection.  This is commonly used in remote ATMs or kiosks as a replacement for 56K DSL lines."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Of the many LTE modules on the market, 128 Technology has standardized on those modules that utilize QMI (Qualcomm MSM Interface Protocol)."),(0,r.kt)("p",null,"When running with a single LTE module, there are no restrictions on how the adapter is connected within the hardware platform.  When running with two LTE cards, it is required that the second module be connected via USB interface over MiniPCIe, M.2 or even USB dongle."),(0,r.kt)("h3",{id:"hardware-identification"},"Hardware Identification"),(0,r.kt)("p",null,"In order to identify the LTE module we need to know on what bus and device it is connected within Linux. Verify the existence of the second LTE module by scanning the USB bus. At the linux shell, execute the command ",(0,r.kt)("inlineCode",{parentName:"p"},"lsusb")," to output the list of connected USB devices."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[root@SOL_SCM920420006 ~]# lsusb\nBus 001 Device 003: ID 1199:9071 Sierra Wireless, Inc.\nBus 001 Device 002: ID 8087:07db Intel Corp.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"QMI-based LTE modules that exist within the 128T platform will load the ",(0,r.kt)("inlineCode",{parentName:"p"},"qmi_wwan")," linux driver."))),(0,r.kt)("p",null,"Scan the path ",(0,r.kt)("inlineCode",{parentName:"p"},"/sys/bus/usb/drivers/qmi_wwan/*/net")," to detect the QMI supported interface names.  It is these interface names that will be used within the 128T configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[root@SOL_SCM920420006 ~]# ls /sys/bus/usb/drivers/qmi_wwan/*/net/\n/sys/bus/usb/drivers/qmi_wwan/1-3:1.8/net/:wwp0s21u3i8\n/sys/bus/usb/drivers/qmi_wwan/1-4:1.10/net/:wwp0s21u4i10\n/sys/bus/usb/drivers/qmi_wwan/1-4:1.8/net/:wwp0s21u4i8\n/sys/bus/usb/drivers/qmi_wwan/2-1:1.8/net/:wwp0s21u1i8\n")),(0,r.kt)("p",null,"From the output of ",(0,r.kt)("inlineCode",{parentName:"p"},"lsusb")," above, the Sierra Wireless adapter (2nd LTE card), we can tell is connected to ",(0,r.kt)("inlineCode",{parentName:"p"},"Bus 001 Device 003"),".  This corresponds to QMI interface ",(0,r.kt)("inlineCode",{parentName:"p"},"wwp0s21u3i8"),"."),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Use the following configuration fields under network-interface to configure this feature:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"default-route"),": enable/disable default-route via LTE interface in linux"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"management-vector")," contains the following two fields:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"name"),": name of the vector"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"priority"),": the metric of default-route")))),(0,r.kt)("p",null,"Below is an example configuration with two LTE modules. The first module has an AT&T SIM and the second one has a Verizon SIM. Both have default-route enabled; the AT&T interface has a metric of 300 and the Verizon interface has a metric of 500."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-128T"},"device-interface lte-dev-1\n    name lte-dev-1\n    type lte\n    target-interface wwp0s21u1i8\n    lte\n        apn-name broadband\n        authentication\n            user-name foo\n            password foo\n            authentication-protocol chap\n        exit\n    exit\n    network-interface lte-intf-1\n        name lte-intf-1\n        source-nat true\n        dhcp v4\n        default-route true\n        management-vector lte-route-1\n            name lte-route-1\n            priority 300\n        exit\n    exit\nexit\ndevice-interface lte-dev-2\n    name lte-dev-2\n    type lte\n    target-interface wwp0s21u4i8\n    lte\n        apn-name vzwinternet\n        authentication\n            user-name bar\n            password bar\n            authentication-protocol pap\n        exit\n    exit\n    network-interface lte-intf-2\n        name lte-intf-2\n        source-nat true\n        dhcp v4\n        default-route true\n        management-vector lte-route-2\n            name lte-route-2\n            priority 500\n        exit\n    exit\nexit\n")),(0,r.kt)("p",null,"When the 128T is not running, both LTE interfaces will be returned to linux. When this handover happens, a default-route is added to each interface in linux with an associated metric taken from the ",(0,r.kt)("em",{parentName:"p"},"management_vector")," priority. This is a result of the ",(0,r.kt)("em",{parentName:"p"},"management-vector")," configuration defined above."),(0,r.kt)("p",null,"After committing this configuration and shutting down 128T, the linux route table will look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[root@SOL_SCM920420006 ~]# ip route\ndefault via 172.17.0.1 dev enp4s0f0 proto static metric 100\ndefault dev wwp0s21u1i8 scope link metric 300\ndefault dev wwp0s21u4i8 scope link metric 500\n10.66.101.176/29 dev wwp0s21u4i8 proto kernel scope link src 10.66.101.179\n10.195.40.224/28 dev wwp0s21u1i8 proto kernel scope link src 10.195.40.232\n172.17.0.0/16 dev enp4s0f0 proto kernel scope link src 172.17.200.166 metric 100\n")),(0,r.kt)("p",null,"This is the only configuration that is necessary to utilize both LTE adapters.  Once the configuration is committed, the LTE interfaces can be used for routing just like any other interface."),(0,r.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"The output of the ",(0,r.kt)("inlineCode",{parentName:"p"},"show device-interface")," command contains extensive information in the event of failure regarding LTE connectivity.  Of note, the following can be used to determine the cause of any failure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Last known failure type, code, reason, and timestamp"),(0,r.kt)("li",{parentName:"ul"},"Total attempts that have been made"),(0,r.kt)("li",{parentName:"ul"},"An estimate of when the next attempt would be made based on the corresponding backoff configuration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"admin@128t-node.128t-router# show device-interface name lte-dev\nThu 2019-12-19 15:22:54 UTC\n\n======================================================\n 128t-node:lte-dev\n======================================================\n Type:                lte\n Forwarding:          true\n Mode:                host\n MAC Address:         da:d1:54:e1:4e:54\n\n Admin Status:        up\n Operational Status:  down\n Redundancy Status:   non-redundant\n Speed:               0\n\n in-octets:                       16450\n in-unicast-pkts:                   225\n in-errors:                           0\n out-octets:                          0\n out-unicast-pkts:                    0\n out-errors:                          0\n\n LTE:\n   Active Profile:\n     APN:             broadband\n     Auth:            none\n     PDP type:        ipv4-or-ipv6\n   Connection Status:     disconnected\n   Current Ipv4 Settings: Error Retrieving Information\n   Failure Context:\n     attempt:            19\n     code:               33\n     last-failure-time:  Thu Dec 19 15:08:04 2019\n     next-retry-time:    Thu Dec 19 16:08:04 2019\n     reason:             option-unsubscribed\n     type:               6\n   Packet Stats:         Error Retrieving Information\n   RSSI Signal Strength: -48 dBm\n   Radio Interface:      lte\n   Registration Status:  registered\n   Signal Strength:      excellent\n   usb-port:             /dev/ttyUSB8\n\n\nCompleted in 0.08 seconds\n")),(0,r.kt)("p",null,"In addition to the PCLI, standalone ",(0,r.kt)("inlineCode",{parentName:"p"},"qmicli")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"serial-command")," scripts are also available for troubleshooting from the Linux shell:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"lte-state <interface-name>")," returns a  JSON string that contains dynamic information regarding the LTE connection status, such as IP address, signal strength, carrier, etc."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"lte-info <interface-name>")," returns a JSON string that contains static information regarding the LTE module, such as firmware version, band capabilities, hardware model, etc."),(0,r.kt)("p",null,"These scripts can be utilized through the salt infrastructure to remotely monitor the health of the interfaces."),(0,r.kt)("p",null,"The output of ",(0,r.kt)("inlineCode",{parentName:"p"},"show device-interface")," includes ",(0,r.kt)("inlineCode",{parentName:"p"},"usb-port")," to identify the device to which the LTE adapter is connected. While the majority of the communication between the 128T and the LTE module is over QMI, AT commands are used for certain operations, such as a card reset."),(0,r.kt)("p",null,"To determine which devices support AT commands, scan the path ",(0,r.kt)("inlineCode",{parentName:"p"},"/sys/class/net/{interface}/device/../*/ttyUSB*/"),".  With the information retrieved from the ",(0,r.kt)("inlineCode",{parentName:"p"},"ls")," command, you can then create a serial connection to the device to issues AT commands."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[root@SOL_SCM920420006 ~]# ls /sys/class/net/wwp0s21u4i8/device/../*/ttyUSB*/\n/sys/class/net/wwp0s21u4i8/device/../1-4:1.0/ttyUSB6/:driver  port_number  power  subsystem  tty  uevent\n/sys/class/net/wwp0s21u4i8/device/../1-4:1.2/ttyUSB7/:driver  port_number  power  subsystem  tty  uevent\n/sys/class/net/wwp0s21u4i8/device/../1-4:1.3/ttyUSB8/:driver  port_number  power  subsystem  tty  uevent\n")),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"serial-command port <usb-port> <at-command>")," to run AT commands. Issue the ",(0,r.kt)("inlineCode",{parentName:"p"},"ATQ0")," command and check that an ",(0,r.kt)("inlineCode",{parentName:"p"},"OK")," reply is returned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"qmicli -d /dev/cdc-wdm0 --uim-get-card-status\n")),(0,r.kt)("p",null,"To get the firmeware loaded on the adapater, issue the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"lte-image-preference --interface=wwp0s21u1i8 get\n")),(0,r.kt)("p",null,"To set the firmware on the adapater, issue the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"lte-image-preference --interface=wwp0s21u1i8 set ATT\n")),(0,r.kt)("h2",{id:"special-considerations"},"Special Considerations"),(0,r.kt)("p",null,"Prior to 4.3.3, on a single LTE system, a default-route within linux with a metric of 128 was always added. For backward compatibility and consistency of default behavior, after an upgrade to 4.3.3:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A default-route with a metric of 128 will be added to the 128T configuration if:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"default-route is not set ",(0,r.kt)("strong",{parentName:"li"},"OR")," set to false"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AND")," management-vector is ",(0,r.kt)("strong",{parentName:"li"},"NOT")," configured")))),(0,r.kt)("p",null,"A validation warning (as shown below) is issued when these conditions have not been met."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"*admin@SOL_SCM920420006.SOL_SCM920420006# commit\nAre you sure you want to commit the candidate config? [y/N]: y\n\u26a0 Validating, then committing...\nWarnings:\n1. System is running a config without a default-route and a management-vector configured, a default-route with a metric of 128 will be added after 128T shutdown. To disable, set default-route to false and configure a management-vector.\n\n    config\n        authority\n            router SOL_SCM920420006\n                node SOL_SCM920420006\n                    device-interface lte-dev-1\n                        network-interface lte-intf-1\n                            default-route\n\nConfiguration committed\n*admin@SOL_SCM920420006.SOL_SCM920420006# q\n")),(0,r.kt)("p",null,"After the 128T shutdown, you\u2019ll see that default route with metric 128 is set within linux."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[root@SOL_SCM920420006 ~]# systemctl stop 128T\n[root@SOL_SCM920420006 ~]# ip route\ndefault via 172.17.0.1 dev enp4s0f0 proto static metric 100\ndefault dev wwp0s21u1i8 scope link metric 128\n")),(0,r.kt)("p",null,"If you need to disable the default route, within the 128T configuration, you need to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"set ",(0,r.kt)("inlineCode",{parentName:"li"},"default-route")," to ",(0,r.kt)("em",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AND")," configure a not-empty ",(0,r.kt)("inlineCode",{parentName:"li"},"management-vector"))))}d.isMDXComponent=!0}}]);