"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[2689],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return v}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=c(t),v=a,u=p["".concat(s,".").concat(v)]||p[v]||h[v]||o;return t?r.createElement(u,i(i({ref:n},l),{},{components:t})):r.createElement(u,i({ref:n},l))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:a,i[1]=d;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},42048:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return d},metadata:function(){return c},toc:function(){return h}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],d={title:"Configuring Ethernet Over SVR for Active/Standby",sidebar_label:"Configuring Ethernet Over SVR for Active/Standby"},s=void 0,c={unversionedId:"config_EthoSVR_activestandby",id:"config_EthoSVR_activestandby",title:"Configuring Ethernet Over SVR for Active/Standby",description:"EoSVR is a point-to-point L2 service that provides session resiliency even during a failover between different underlying networks. However, there may be cases where you also require redundancy at the service level when using L2 services in the network.",source:"@site/docs/config_EthoSVR_activestandby.md",sourceDirName:".",slug:"/config_EthoSVR_activestandby",permalink:"/docs/config_EthoSVR_activestandby",draft:!1,tags:[],version:"current",lastUpdatedAt:1677690500,formattedLastUpdatedAt:"Mar 1, 2023",frontMatter:{title:"Configuring Ethernet Over SVR for Active/Standby",sidebar_label:"Configuring Ethernet Over SVR for Active/Standby"},sidebar:"docs",previous:{title:"Configuring Ethernet Over Secure Vector Routing",permalink:"/docs/config_EthoSVR"},next:{title:"Inline Flow Performance Monitoring",permalink:"/docs/config_flow_perf_mon"}},l={},h=[{value:"Configuration Example",id:"configuration-example",level:2},{value:"Branch",id:"branch",level:4},{value:"Headend 1",id:"headend-1",level:4},{value:"Headend 2",id:"headend-2",level:4},{value:"How It Works",id:"how-it-works",level:2},{value:"Step 1: Configure LAN Interfaces",id:"step-1-configure-lan-interfaces",level:3},{value:"Branch",id:"branch-1",level:4},{value:"Headend 1",id:"headend-1-1",level:4},{value:"Headend 2",id:"headend-2-1",level:4},{value:"Step 2: Configure Neighborhoods to determine active and standby services",id:"step-2-configure-neighborhoods-to-determine-active-and-standby-services",level:3},{value:"Branch",id:"branch-2",level:4},{value:"Headend 1",id:"headend-1-2",level:4},{value:"Headend 2",id:"headend-2-2",level:4},{value:"Step 3: Configure Services",id:"step-3-configure-services",level:3},{value:"L2 service",id:"l2-service",level:4},{value:"L3_service",id:"l3_service",level:4},{value:"Headend 1",id:"headend-1-3",level:4},{value:"Headend 2",id:"headend-2-3",level:4},{value:"Step 4: Configure the Service Policy",id:"step-4-configure-the-service-policy",level:3}],p={toc:h};function v(e){var n=e.components,d=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,d,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"EoSVR is a point-to-point L2 service that provides session resiliency even during a failover between different underlying networks. However, there may be cases where you also require redundancy at the service level when using L2 services in the network."),(0,o.kt)("p",null,"For example, in a network deployment where there are no loop detection mechanisms available, the EoSVR Active Standby configuration gives you the ability to configure two different endpoints on the P2P L2 service, while making sure only one is active at a time. In the configuration example below, VLAN A needs to be extended so that End Device 2 can be reached from either head-end, typically deployed in two different datacenters."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Ethernet over SVR Active Standby",src:t(57562).Z,width:"904",height:"378"})),(0,o.kt)("h2",{id:"configuration-example"},"Configuration Example"),(0,o.kt)("p",null,"The EoSVR Active/Standby feature relies on the standard EoSVR functionality. To configure Active/Standby, the same LAN interface IP address needs to be defined on both head-ends."),(0,o.kt)("p",null,"Note that the peer service routes are generated by the conductor when an EoSVR service route is configured for each service. They are shown here for completeness. "),(0,o.kt)("h4",{id:"branch"},"Branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               Lan1\nglobal-id          27\n \nethernet-over-svr name     br6\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.5 SSR_HE1 ip-address  169.254.50.5\nethernet-over-svr peer 169.254.50.5 SSR_HE1 peer        SSR_HE1\ntenant   branch.tenant1\n \naddress 169.254.50.6 ip-address     169.254.50.6\naddress 169.254.50.6 prefix-length  24\n\n")),(0,o.kt)("h4",{id:"headend-1"},"Headend 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               Lan\nglobal-id          30\n \nethernet-over-svr name     br7\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.6 SSR_BRANCH ip-address  169.254.50.6\nethernet-over-svr peer 169.254.50.6 SSR_BRANCH peer        SSR_BRANCH\ntenant             he1.tenant1\n \naddress 169.254.50.5 ip-address     169.254.50.5\naddress 169.254.50.5 prefix-length  24\n\n")),(0,o.kt)("h4",{id:"headend-2"},"Headend 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               lan_l2\nglobal-id          10\n \nethernet-over-svr name     br5\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.6 SSR_BRANCH ip-address  169.254.50.6\nethernet-over-svr peer 169.254.50.6 SSR_BRANCH  peer        SSR_BRANCH \ntenant             he2.tenant1\n \naddress 169.254.50.5 ip-address     169.254.50.5\naddress 169.254.50.5 prefix-length  24\n\n")),(0,o.kt)("h2",{id:"how-it-works"},"How It Works"),(0,o.kt)("p",null,"EoSVR A/S relies on the SSR to send broadcast traffic using only one of the defined services (either the active or the backup), regardless of the fact that the traffic is being received from both of them. "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ARP Traffic",src:t(81836).Z,width:"904",height:"356"})),(0,o.kt)("p",null,"In a standard EoSVR configuration there are typically two routers; R1 and R2. EoSVR is configured on the LAN of R1 and R2. There is a WAN connection between R1 and R2, and they communicate via SVR. Since EoSVR is configured on the LAN of R1 and R2, they both act as a virtual LAN. There are 2 services that are configured:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"A service from R1 to R2 so that L2 and IP packets can go from R1 to R2. This service has the IP address of the interface with EoSVR enabled on R2. The service route on R2 is an EoSVR bridge. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"A service for packets from R2 to R1 where the service address is the IP of the EoSVR interface on R2."))),(0,o.kt)("p",null,"For EoSVR Active/Standby, all of the above holds true, but we now have R1 talking to Headend 1 and Headend 2. This means there will be:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"one service for H1's EoSVR interface IP "),(0,o.kt)("li",{parentName:"ul"},"one service for H2's EoSVR interface ip"),(0,o.kt)("li",{parentName:"ul"},"one service for R1's EoSVR IP ")),(0,o.kt)("p",null,"In order to demonstrate the configuration, let's assume the scenario in the figure above."),(0,o.kt)("h3",{id:"step-1-configure-lan-interfaces"},"Step 1: Configure LAN Interfaces"),(0,o.kt)("p",null,"Configure the LAN network interfaces:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Both head-ends have their respective EoSVR bridges configured with the same IP address in the network interface and on the peer with the branch EoSVR bridge.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The branch EoSVR bridge peering is configured with the IP address used in both head-ends."))),(0,o.kt)("h4",{id:"branch-1"},"Branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               Lan1\nglobal-id          27\n \nethernet-over-svr name     br6\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.5 SSR_HE1 ip-address  169.254.50.5\nethernet-over-svr peer 169.254.50.5 SSR_HE1 peer        SSR_HE1\ntenant   branch.tenant1\n \naddress 169.254.50.6 ip-address     169.254.50.6\naddress 169.254.50.6 prefix-length  24\n")),(0,o.kt)("h4",{id:"headend-1-1"},"Headend 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               Lan\nglobal-id          30\n \nethernet-over-svr name     br7\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.6 SSR_BRANCH ip-address  169.254.50.6\nethernet-over-svr peer 169.254.50.6 SSR_BRANCH peer        SSR_BRANCH\ntenant             he1.tenant1\n \naddress 169.254.50.5 ip-address     169.254.50.5\naddress 169.254.50.5 prefix-length  24\n")),(0,o.kt)("h4",{id:"headend-2-1"},"Headend 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name               lan_l2\nglobal-id          10\n \nethernet-over-svr name     br5\nethernet-over-svr enabled  true\n \nethernet-over-svr peer 169.254.50.6 SSR_BRANCH ip-address  169.254.50.6\nethernet-over-svr peer 169.254.50.6 SSR_BRANCH  peer        SSR_BRANCH \ntenant             he2.tenant1\n \naddress 169.254.50.5 ip-address     169.254.50.5\naddress 169.254.50.5 prefix-length  24\n")),(0,o.kt)("h3",{id:"step-2-configure-neighborhoods-to-determine-active-and-standby-services"},"Step 2: Configure Neighborhoods to determine active and standby services"),(0,o.kt)("p",null,"In order to control which service is active and which is standby, two different neighborhoods are defined and vectors applied. Let's say you want to prefer H1 for all packets from R1 to the head-end. Only in a situation where H1 fails or all paths to H1 fail, will we want to send packets to H2. "),(0,o.kt)("p",null,"Configure the neighborhood and the vectors; For the service towards the head-end (the H1-H2 service), set the vector values to prefer the paths to H1 (primary path), and then to H2 (secondary path)."),(0,o.kt)("h4",{id:"branch-2"},"Branch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name                   wan1\nglobal-id              25\nconductor              false\n\nneighborhood wan1_standby name    wan1_standby\nneighborhood wan1_standby vector  wan1_standby\n\nneighborhood wan1_active name    wan1_active\nneighborhood wan1_active vector  wan1_active\n")),(0,o.kt)("h4",{id:"headend-1-2"},"Headend 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name                   wan1\nglobal-id              7\n\nneighborhood wan1_active name      wan1_active\nneighborhood wan1_active topology  hub\nneighborhood wan1_active vector    wan1_active\n")),(0,o.kt)("h4",{id:"headend-2-2"},"Headend 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name                   wan1\nglobal-id              28\n\nneighborhood wan1_standby name      wan1_standby\nneighborhood wan1_standby topology  hub\nneighborhood wan1_standby vector    wan1_standby\n")),(0,o.kt)("h3",{id:"step-3-configure-services"},"Step 3: Configure Services"),(0,o.kt)("p",null,"If you are not familiar with configuring L2 and L3 services, please refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/config_EthoSVR#create-a-service-for-ethernet-over-svr"},"Create a Service for Ethernet Over SVR"),"."),(0,o.kt)("p",null,"Create the service using a branch-to-head-end direction. "),(0,o.kt)("h4",{id:"l2-service"},"L2 service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name            l2_service\nsecurity        unencrypted\n \ntransport udp protocol    udp\n \ntransport udp port-range 1281 start-port  1281\naddress         169.254.50.5\n \naccess-policy branch.tenant1 source  branch.tenant1\nservice-policy  customer_L2\n")),(0,o.kt)("h4",{id:"l3_service"},"L3_service"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name                  L3_service\nsecurity              unencrypted\n\ntransport tcp protocol  tcp\n\ntransport udp protocol  udp\n\ntransport icmp protocol  icmp\naddress               0.0.0.0/0\n\naccess-policy branch.tenant1 source  branch.tenant1\nservice-policy        customer_L2\nshare-service-routes  true\n")),(0,o.kt)("h4",{id:"headend-1-3"},"Headend 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name          L2_service_SR\nservice-name  L2_service\nbridge-name   br7\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name          L3_service_SR\nservice-name  L3_service\nbridge-name   br7\n")),(0,o.kt)("h4",{id:"headend-2-3"},"Headend 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name          L2_service_SR\nservice-name  L2_service\nbridge-name   br5\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name          L3_service_SR\nservice-name  L3_service\nbridge-name   br5\n")),(0,o.kt)("h3",{id:"step-4-configure-the-service-policy"},"Step 4: Configure the Service Policy"),(0,o.kt)("p",null,"When you configure the ",(0,o.kt)("a",{parentName:"p",href:"/docs/config_reference_guide#service-policy"},"service policy"),", make sure ",(0,o.kt)("inlineCode",{parentName:"p"},"session-resiliency")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"revertible failover.")," Configure the vector list according to the active / standby priorities. For information about configuring vectors and priorities, refer to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/config_reference_guide#vector"},"Configuration Element Reference.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name                  customer_L2\nvector wan1_active name  wan1_active\nvector wan1_standby name  wan1_standby\nsession-resiliency    revertible-failover\npeer-path-resiliency  true\n")))}v.isMDXComponent=!0},57562:function(e,n,t){n.Z=t.p+"assets/images/ethosvr_active-standby-269730843f96d4ea670bad9d49f92839.png"},81836:function(e,n,t){n.Z=t.p+"assets/images/ethosvr_activestandby_ARP-7e720861811fa994fc6d74158130a2af.png"}}]);