"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[9102],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},29874:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={title:"HTTP Probe Reachability Detection Plugin",sidebar_label:"HTTP Probe Reachability Detection"},s=void 0,p={unversionedId:"plugin_http_probe",id:"plugin_http_probe",title:"HTTP Probe Reachability Detection Plugin",description:"The http-probe plugin is designed to leverage the reachability detection APIs that were introduced in the SSR as of 5.2.0 version of software. More documentation on the core product feature can be found here",source:"@site/docs/plugin_http_probe.md",sourceDirName:".",slug:"/plugin_http_probe",permalink:"/docs/plugin_http_probe",tags:[],version:"current",lastUpdatedAt:1670018730,formattedLastUpdatedAt:"12/2/2022",frontMatter:{title:"HTTP Probe Reachability Detection Plugin",sidebar_label:"HTTP Probe Reachability Detection"},sidebar:"docs",previous:{title:"HA Sync Redundancy Plugin",permalink:"/docs/plugin_ha_sync_redundancy"},next:{title:"ICMP Reachability Detection",permalink:"/docs/plugin_icmp_reachability_detection"}},c=[{value:"Overview",id:"overview",children:[],level:2},{value:"Configuration Snippet",id:"configuration-snippet",children:[{value:"HTTP Profile configuration",id:"http-profile-configuration",children:[],level:3},{value:"Service route configuration",id:"service-route-configuration",children:[],level:3},{value:"Probe reachability",id:"probe-reachability",children:[],level:3}],level:2},{value:"Use Cases",id:"use-cases",children:[{value:"Path selection",id:"path-selection",children:[],level:3},{value:"Proportional Load balancing via destination NATs",id:"proportional-load-balancing-via-destination-nats",children:[],level:3}],level:2},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"Checking the probe status",id:"checking-the-probe-status",children:[],level:3}],level:2},{value:"Triggering Manual Failover Or Recovery",id:"triggering-manual-failover-or-recovery",children:[],level:2},{value:"Release Notes",id:"release-notes",children:[{value:"Release 1.0.2",id:"release-102",children:[{value:"Issues Fixed",id:"issues-fixed",children:[],level:4}],level:3},{value:"Release 1.0.1",id:"release-101",children:[{value:"Issues Fixed",id:"issues-fixed-1",children:[],level:4}],level:3}],level:2}],d={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The http-probe plugin is designed to leverage the reachability detection APIs that were introduced in the SSR as of 5.2.0 version of software. More documentation on the core product feature can be found ",(0,o.kt)("a",{parentName:"p",href:"/docs/config_service_health"},"here")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The instructions for installing and managing the plugin can be found ",(0,o.kt)("a",{parentName:"p",href:"/docs/plugin_intro#installation-and-management"},"here"),"."))),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Once installed and configured properly, the plugin will do the following operations on the router."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Launch a set of HTTP(s) monitor services which will probe the configured HTTP or HTTPs URL at the configured frequency"),(0,o.kt)("li",{parentName:"ul"},"Periodically update the load-balancer APIs with the up/down status on service-paths associated with the http-probes")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For HTTPS probes, the client will allow self-signed certificates for inspecting the reachability status of the service."))),(0,o.kt)("h2",{id:"configuration-snippet"},"Configuration Snippet"),(0,o.kt)("p",null,"The plugin leverages the existing SSR reachability detection and enforcement configuration within the service-route on the router."),(0,o.kt)("h3",{id:"http-profile-configuration"},"HTTP Profile configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Config Path: authority > router","[name]"," > http-probe-profile"),(0,o.kt)("li",{parentName:"ul"},"Config Fields:")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Constraints"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"name"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"key"),(0,o.kt)("td",{parentName:"tr",align:null},"The name of the http probe profile")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"url"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"max: 2048"),(0,o.kt)("td",{parentName:"tr",align:null},"A valid http or https URL to be used for availability checking")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"probe-interval"),(0,o.kt)("td",{parentName:"tr",align:null},"uint32"),(0,o.kt)("td",{parentName:"tr",align:null},"default: 10"),(0,o.kt)("td",{parentName:"tr",align:null},"The duration (in seconds) of how often to perform a link test to the destination")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"number-of-attempts"),(0,o.kt)("td",{parentName:"tr",align:null},"uint32"),(0,o.kt)("td",{parentName:"tr",align:null},"default: 4"),(0,o.kt)("td",{parentName:"tr",align:null},"The number of consecutive HTTP(s) requests to be sent within the probe-duration before deciding that destination is unreachable")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"probe-duration"),(0,o.kt)("td",{parentName:"tr",align:null},"uint32"),(0,o.kt)("td",{parentName:"tr",align:null},"default: 5"),(0,o.kt)("td",{parentName:"tr",align:null},"The duration (in seconds) within which to reach the destination. Each attempt will be made in (probe-duration / number-of-attempts) interval")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"valid-status-code"),(0,o.kt)("td",{parentName:"tr",align:null},"list"),(0,o.kt)("td",{parentName:"tr",align:null},"at least 1 value required"),(0,o.kt)("td",{parentName:"tr",align:null},"The list of valid status codes to be expected from the server")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-config",metastring:"{9-14}","{9-14}":!0},"\nconfig\n\n    authority\n\n        router  my-router\n            name                my-router\n\n            http-probe-profile  http-probe-1\n                name               http-probe-1\n                url                http://172.16.2.5:5060/\n                valid-status-code  202\n                valid-status-code  200\n            exit\n        exit\n    exit\nexit\n")),(0,o.kt)("h3",{id:"service-route-configuration"},"Service route configuration"),(0,o.kt)("p",null,"Once the profile is created, the next step is to enable the reachability enforcement and probe detection for a non SVR service-route and reference the profile in that config."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Config Path: authority > router","[name]"," > service-route","[name]"," > reachability-detection")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Config Fields:\nThe following fields should be enabled for the probe based detection to work. The http-probe mechanism is based on the concept of health probes described ",(0,o.kt)("a",{parentName:"p",href:"https://docs.128technology.com/docs/config_service_health/#health-probes"},"here"),". The configuration fields below are required for the system to react to the loadbalancer API calls that the plugin makes."))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"enforcement"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"true"),(0,o.kt)("td",{parentName:"tr",align:null},"Toggle the configuration to be enabled for the reachability enforcement to take effect.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"probe-type"),(0,o.kt)("td",{parentName:"tr",align:null},"enumeration"),(0,o.kt)("td",{parentName:"tr",align:null},"always"),(0,o.kt)("td",{parentName:"tr",align:null},"For probe based reachability detection to take effect the probe-type must be set to ",(0,o.kt)("inlineCode",{parentName:"td"},"always"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"hold-down"),(0,o.kt)("td",{parentName:"tr",align:null},"uint32"),(0,o.kt)("td",{parentName:"tr",align:null},"probe-duration * 2"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("inlineCode",{parentName:"td"},"hold-down")," time is the amount of time in seconds that the path is kept out-of-service when path transitions from down to up.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"probe > probe-type"),(0,o.kt)("td",{parentName:"tr",align:null},"enumeration"),(0,o.kt)("td",{parentName:"tr",align:null},"http-probe"),(0,o.kt)("td",{parentName:"tr",align:null},"The probe-type must be set to ",(0,o.kt)("inlineCode",{parentName:"td"},"http-probe")," in order to leverage the HTTP(s) based probing")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"probe > http-probe-profile"),(0,o.kt)("td",{parentName:"tr",align:null},"reference"),(0,o.kt)("td",{parentName:"tr",align:null},"-"),(0,o.kt)("td",{parentName:"tr",align:null},"Reference to a previously configured http-probe-profile on the router")))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"reachability-detection > probe")," configuration allows for multiple probes of various types to be configured. All the probes for a given service-route must be up for the route to be considered as up."))),(0,o.kt)("h3",{id:"probe-reachability"},"Probe reachability"),(0,o.kt)("p",null,"The router should have a distinct path for the probe traffic. It is recommended that the user create dedicated services and service routes for this purpose. At this time, the plugin does not generate any configuration to ensure the reachability of the probe traffic to the destination. The probe will be originated in the default linux environment. In case of in-band management, the probe traffic will be associated with the ",(0,o.kt)("inlineCode",{parentName:"p"},"_internal_")," tenant so care must be taken to allow the tenant when creating such config. As a reference the following configuration represents a service and route to reach one of the HTTP probes in this document."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"config\n\n    authority\n\n        service  http-probe-1\n            name                  http-probe-1\n\n            transport             tcp\n                protocol    tcp\n\n                port-range  5060\n                    start-port  5060\n                exit\n            exit\n            address               172.16.2.5\n\n            access-policy         _internal_\n                source  _internal_\n                permission allow\n            exit\n            share-service-routes  false\n        exit\n\n        router  my-router\n            name           my-router\n\n            service-route  http-probe-rte-1\n                name          http-probe-rte-1\n                service-name  http-probe-1\n\n                next-hop      node1 wan\n                    node-name  node1\n                    interface  wan\n                exit\n            exit\n        exit\n\n    exit\nexit\n")),(0,o.kt)("h2",{id:"use-cases"},"Use Cases"),(0,o.kt)("h3",{id:"path-selection"},"Path selection"),(0,o.kt)("p",null,"One of the primary use cases of the plugin would be to monitor the internet or some other service reachability by pinging an HTTP server over a given service path. This is very much similar in concept to the native ICMP probe functionality that exists in the product."),(0,o.kt)("h3",{id:"proportional-load-balancing-via-destination-nats"},"Proportional Load balancing via destination NATs"),(0,o.kt)("p",null,"In this use case, a particular service or workflow is designed to be load balanced across several upstream servers by doing a proportional load balancing along with destination NAT. In this use case, the SSR http-probe plugin can be used to monitor the service status of each of those upstream servers to determine if the particular server should be in service or not from routing perspective. The following configuration snippet builds on the example above to demonstrate this scenario."),(0,o.kt)("p",null,"In this example, both ",(0,o.kt)("inlineCode",{parentName:"p"},"test-app-route-1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"test-app-route-2")," are equal cost routes used for proportional load balancing."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-config"},"config\n\n    authority\n\n        router  my-router\n            name           my-router\n\n            service-route  test-app-route-1\n                name                    test-app-route-1\n                service-name            test-app\n                vector                  path1\n                nat-target              172.16.2.5\n\n                next-hop                node1 wan-bb\n                    node-name  node1\n                    interface  wan-bb\n                exit\n\n                reachability-detection\n                    enabled               true\n                    enforcement           true\n                    hold-down             60\n                    reachability-profile  dummy\n                    probe-type            always\n\n                    probe                 probe1\n                        name                probe1\n                        http-probe-profile  http-probe-1\n                    exit\n                exit\n            exit\n\n            service-route  test-app-route-2\n                name                    test-app-route-2\n                service-name            test-app\n                vector                  path2\n                nat-target              172.16.3.5\n\n                next-hop                node1 wan-lte\n                    node-name  node1\n                    interface  wan-lte\n                exit\n\n                reachability-detection\n                    enabled               true\n                    enforcement           true\n                    hold-down             60\n                    reachability-profile  dummy\n                    probe-type            always\n\n                    probe                 probe2\n                        name                probe2\n                        http-probe-profile  http-probe-2\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1#\n\n")),(0,o.kt)("p",null,"Each service-route is designed to probe a unique URL for that servers and monitors the health of the service at the TCP socket level as well as the HTTP stack. When one of the servers cannot be reached or responds with a unsuccessful status code (e.g. 404, 504 etc) the service path is taken out of service."),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When all the service routes associated with the same service are down, the default system behavior is to operates in a ",(0,o.kt)("inlineCode",{parentName:"p"},"best-effort")," mode in which the physical link and L2 connectivity is used to determine the health of the path. In this case, it's possible that sessions are routed to paths that are down from a probe perspective. As soon as one of the paths comes back in service, the load balancer will start using that path for all subsequent new sessions. The ",(0,o.kt)("inlineCode",{parentName:"p"},"best-effort")," flag can be set to false for the associated service-policy to disable this behavior."))),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h3",{id:"checking-the-probe-status"},"Checking the probe status"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"show service-path")," command can be used to view the current status of the probe and to view how the load balancer is interpreting the current status. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"admin@node1.conductor1# show service-path router my-router node node1 service-name test-app\nSun 2021-11-07 03:19:33 UTC\nNode: node1.my-router Page 1\n\n========== ================== =============== =============== ============ =========== ======== ====== ====== ========== ==========\n Service    Service-Route      Type            Destination     Next-Hop     Interface   Vector   Cost   Rate   Capacity   State\n========== ================== =============== =============== ============ =========== ======== ====== ====== ========== ==========\n test-app   test-app-route-1   service-agent   172.16.2.5/32   172.16.2.5   wan-bb      path1     100      0   0/100      Up(Up)\n test-app   test-app-route-2   service-agent   172.16.3.5/32   172.16.3.5   wan-lte     path2     100      0   0/100      Up(Down)\n\nCompleted in 0.05 seconds\nadmin@node1.conductor1#admin@node1.conductor1#\n")),(0,o.kt)("p",null,"In addition, the probe's running status in linux can be found by inspecting the ",(0,o.kt)("inlineCode",{parentName:"p"},"128T-http-probe-status-change-notifier@<probe-name>.service"),". For example,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# systemctl status 128T-http-probe-status-change-notifier@http-probe-2.service -l\n\u25cf 128T-http-probe-status-change-notifier@http-probe-2.service - HTTP Monitor Status change observer for destination http-probe-2\n   Loaded: loaded (/usr/lib/systemd/system/128T-http-probe-status-change-notifier@.service; static; vendor preset: disabled)\n   Active: inactive (dead) since Sun 2021-11-07 03:22:43 UTC; 8s ago\n  Process: 24823 ExecStart=/usr/libexec/128T-http-probe/scripts/loadbalancer_cli --probe-name ${NAME} determine-status --status ${STATUS} --code ${CODE} (code=exited, status=0/SUCCESS)\n Main PID: 24823 (code=exited, status=0/SUCCESS)\n\nNov 07 03:22:42 my-router.openstacklocal systemd[1]: Starting HTTP Monitor Status change observer for destination http-probe-2...\nNov 07 03:22:43 my-router.openstacklocal loadbalancer_cli[24823]: Determine status for probe http-probe-2 with status down and code 0\nNov 07 03:22:43 my-router.openstacklocal loadbalancer_cli[24823]: Skipping service-route test-app-route-1 with profile {'validStatusCode': [202, 200], 'probeDuration': 5, 'numberOfAttempts': 4, 'probeInterval': 10, 'name': 'http-probe-1', 'url': 'http://172.16.2.5:5060/'}\nNov 07 03:22:43 my-router.openstacklocal loadbalancer_cli[24823]: Processing service-route test-app-route-2 with profile {'validStatusCode': [202, 200], 'probeDuration': 5, 'numberOfAttempts': 4, 'probeInterval': 10, 'name': 'http-probe-2', 'url': 'http://172.16.3.5:5061/'}\nNov 07 03:22:43 my-router.openstacklocal loadbalancer_cli[24823]: http-probe-2: Setting service-path test-app-route-2 for service test-app as down\nNov 07 03:22:43 my-router.openstacklocal systemd[1]: Started HTTP Monitor Status change observer for destination http-probe-2.\n")),(0,o.kt)("h2",{id:"triggering-manual-failover-or-recovery"},"Triggering Manual Failover Or Recovery"),(0,o.kt)("p",null,"In some situations, it might be desirable to forcefully trigger a failover or recovery for an otherwise healthy path. In the above example, the primary ",(0,o.kt)("inlineCode",{parentName:"p"},"http-probe-1")," can be brought down by doing the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Stop the http-monitor service for the path instance")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# systemctl stop http-monitor@http-probe-1.service\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Edit the ",(0,o.kt)("inlineCode",{parentName:"li"},"/var/run/128technology/plugins/http_monitor/{probe-name}.state")," and set the ",(0,o.kt)("inlineCode",{parentName:"li"},"STATUS=down"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# echo \"STATUS=down\" >> /var/run/128technology/plugins/http_monitor/http-probe-1.state\n\n# systemctl status 128T-http-probe-status-change-notifier@http-probe-1.service -l\n\u25cf 128T-http-probe-status-change-notifier@http-probe-1.service - HTTP Monitor Status change observer for destination http-probe-1\n   Loaded: loaded (/usr/lib/systemd/system/128T-http-probe-status-change-notifier@.service; static; vendor preset: disabled)\n   Active: inactive (dead) since Sun 2021-11-07 03:27:34 UTC; 45s ago\n  Process: 29533 ExecStart=/usr/libexec/128T-http-probe/scripts/loadbalancer_cli --probe-name ${NAME} determine-status --status ${STATUS} --code ${CODE} (code=exited, status=0/SUCCESS)\n Main PID: 29533 (code=exited, status=0/SUCCESS)\n\nNov 07 03:27:34 my-router.openstacklocal systemd[1]: Starting HTTP Monitor Status change observer for destination http-probe-1...\nNov 07 03:27:34 my-router.openstacklocal loadbalancer_cli[29533]: Determine status for probe http-probe-1 with status down and code 200\nNov 07 03:27:34 my-router.openstacklocal loadbalancer_cli[29533]: Processing service-route test-app-route-1 with profile {'validStatusCode': [202, 200], 'probeDuration': 5, 'numberOfAttempts': 4, 'probeInterval': 10, 'name': 'http-probe-1', 'url': 'http://172.16.2.5:5060/'}\nNov 07 03:27:34 my-router.openstacklocal loadbalancer_cli[29533]: http-probe-1: Setting service-path test-app-route-1 for service test-app as down\nNov 07 03:27:34 my-router.openstacklocal loadbalancer_cli[29533]: Skipping service-route test-app-route-2 with profile {'validStatusCode': [202, 200], 'probeDuration': 5, 'numberOfAttempts': 4, 'probeInterval': 10, 'name': 'http-probe-2', 'url': 'http://172.16.3.5:5061/'}\nNov 07 03:27:34 my-router.openstacklocal systemd[1]: Started HTTP Monitor Status change observer for destination http-probe-1.\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The same steps can be used to bring ",(0,o.kt)("inlineCode",{parentName:"p"},"up")," a path that is currently ",(0,o.kt)("inlineCode",{parentName:"p"},"down")," by changing ",(0,o.kt)("inlineCode",{parentName:"p"},"STATUS=up")," in the steps above."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Additional debugging can be turned on for the ",(0,o.kt)("inlineCode",{parentName:"p"},"http-monitor")," instance by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"LOG_LEVEL=DEBUG")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/run/128technology/plugins/http_monitor/{probe-name}.conf")," config file"))),(0,o.kt)("h2",{id:"release-notes"},"Release Notes"),(0,o.kt)("h3",{id:"release-102"},"Release 1.0.2"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Release Date:")," Apr 29, 2022"),(0,o.kt)("h4",{id:"issues-fixed"},"Issues Fixed"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"PLUGIN-1680")," The HTTP probe status takes a very long time to detect upstream failure"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"Resolution:"))," The logic for detecting upstream failures for combination of very small duration and retry has been improved upon."))),(0,o.kt)("h3",{id:"release-101"},"Release 1.0.1"),(0,o.kt)("h4",{id:"issues-fixed-1"},"Issues Fixed"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"PLUGIN-1640")," Error downloading router components when http-probe plugin enabled on a router"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"Resolution:"))," Updated the salt states to provide the correct router components."))))}u.isMDXComponent=!0}}]);