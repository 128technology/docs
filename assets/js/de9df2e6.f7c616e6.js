"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[8780],{1752:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(74848),r=t(28453);const s={title:"Configure NTP Client Authentication",sidebar_label:"Configure NTP Client Authentication"},o=void 0,c={id:"cc_fips_config_ntp_auth",title:"Configure NTP Client Authentication",description:"Support for NTP authentication allows external NTP servers to be authenticated using a sha1 hash, allowing the SSR to verify the identity of the server being used for NTP time synchronization.",source:"@site/docs/cc_fips_config_ntp_auth.md",sourceDirName:".",slug:"/cc_fips_config_ntp_auth",permalink:"/docs/cc_fips_config_ntp_auth",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Configure NTP Client Authentication",sidebar_label:"Configure NTP Client Authentication"},sidebar:"docs",previous:{title:"Access Management",permalink:"/docs/cc_fips_access_mgmt"},next:{title:"Username and Password Policies",permalink:"/docs/cc_fips_config_password_policies"}},a={},d=[];function h(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Support for NTP authentication allows external NTP servers to be authenticated using a ",(0,i.jsx)(n.code,{children:"sha1"})," hash, allowing the SSR to verify the identity of the server being used for NTP time synchronization."]}),"\n",(0,i.jsxs)(n.p,{children:["Authentication using ",(0,i.jsx)(n.code,{children:"md5"})," is not supported by FIPS mode or Common Criteria."]}),"\n",(0,i.jsx)(n.p,{children:"To allow the NTP client to synchronize with an authenticated server the following information must be provided:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Server ip-address:"})," This is required."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key-number:"})," The specific number used by the server to identify the key. Range is 1-65534. The number configured on the device must match the key number expected by the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication type:"})," ",(0,i.jsx)(n.code,{children:"sha1"})," (required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Shared key from the server:"})," 40 characters long for ",(0,i.jsx)(n.code,{children:"sha1"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"authority\n    name Authority128\n    router Fabric128\n        name Fabric128\n        system\n            ntp\n                server 1.1.1.1\n                    ip-address  1.1.1.1\n                    authentication-key\n                        key-number 1\n                        type sha1\n                        value ay4SZtX$VuooRx9XD+d+8chLS+95eJtV23+$cjTg\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);