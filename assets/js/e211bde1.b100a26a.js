"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[364],{65457:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(74848),o=t(28453);const i={title:"Non-Forwarding HA Interfaces",sidebar_label:"Non-Forwarding HA Interfaces"},c=void 0,a={id:"config_non_forwarding_ha_interfaces",title:"Non-Forwarding HA Interfaces",description:"Non forwarding interfaces are used for several purposes, including HA peer node control traffic, reaching a Conductor from an SSR, reaching managed SSRs from a Conductor, management traffic and reaching the public internet.",source:"@site/docs/config_non_forwarding_ha_interfaces.md",sourceDirName:".",slug:"/config_non_forwarding_ha_interfaces",permalink:"/docs/config_non_forwarding_ha_interfaces",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1710939338,formattedLastUpdatedAt:"Mar 20, 2024",frontMatter:{title:"Non-Forwarding HA Interfaces",sidebar_label:"Non-Forwarding HA Interfaces"},sidebar:"docs",previous:{title:"Dual Router High Availability and VRRP",permalink:"/docs/config_ha_vrrp"},next:{title:"Adding Interfaces to an HA Team Interface",permalink:"/docs/config_adding_interfaces_to_ha_team"}},s={},d=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Non forwarding interfaces are used for several purposes, including HA peer node control traffic, reaching a Conductor from an SSR, reaching managed SSRs from a Conductor, management traffic and reaching the public internet."}),"\n",(0,r.jsxs)(n.p,{children:["Before we get started, it is important to understand the ",(0,r.jsx)(n.a,{href:"/docs/concepts_interface_types",children:"terminology relating to SSR interfaces"})]}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsx)(n.p,{children:"Changing a forwarding interface to non forwarding and vice versa is not dynamically reconfigurable and requires a restart of the SSR node."})}),"\n",(0,r.jsx)(n.p,{children:"A quick recap:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"External"})," interfaces are not used for any control traffic to the node's HA peer and the user has no limit to how many ",(0,r.jsx)(n.code,{children:"external"})," interfaces they configure. A user may configure either one ",(0,r.jsx)(n.code,{children:"fabric"})," or one ",(0,r.jsx)(n.code,{children:"shared"})," interface per node, and that interface will be used for all HA control traffic."]}),"\n",(0,r.jsxs)(n.p,{children:["This example will configure an interface to be used to establish connectivity between HA peers. To configure a non-forwarding interface, set the ",(0,r.jsx)(n.code,{children:"forwarding"})," flag to ",(0,r.jsx)(n.code,{children:"false"}),". This example uses a ",(0,r.jsx)(n.code,{children:"device-interface"})," set to type ",(0,r.jsx)(n.code,{children:"ethernet"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"node    T116_DUT1\n    name                      T116_DUT1\n\n    device-interface          control\n        name               control\n        type               ethernet\n        pci-address        0000:00:04.0\n        forwarding         false\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The next step is to add a ",(0,r.jsx)(n.code,{children:"network-interface"}),". Start by creating a ",(0,r.jsx)(n.code,{children:"fabric"})," interface to reach the HA peer node.  ",(0,r.jsx)(n.code,{children:"fabric"})," was chosen in this situation because the HA nodes are directly connected:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"node    T127_DUT1\n    name                      T127_DUT1\n\n    device-interface          control\n        name               control\n        type               ethernet\n        pci-address        0000:00:04.0\n        forwarding         false\n\n        network-interface  peer-fabric-intf\n            name       peer-fabric-intf\n            type       fabric\n\n            address    172.16.1.1\n                ip-address     172.16.1.1\n                prefix-length  24\n                gateway        172.16.1.201\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This interface is needed to establish connectivity to the HA peer node. A similar ",(0,r.jsx)(n.code,{children:"fabric"})," interface is required on each node of the HA pair."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"node    T127_DUT2\n    name                      T127_DUT2\n\n    device-interface          control\n        name               control\n        type               ethernet\n        pci-address        0000:00:04.0\n        forwarding         false\n\n        network-interface  peer-fabric-intf\n            name       peer-fabric-intf\n            type       fabric\n\n            address    172.16.1.2\n                ip-address     172.16.1.2\n                prefix-length  24\n                gateway        172.16.1.201\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,r.jsx)(n.p,{children:"At this point, it may be a good time to commit the configuration."}),"\n",(0,r.jsx)(n.p,{children:"The interfaces created within the SSR configuration will manage corresponding interfaces in Linux. The SSR will dynamically update all SSH tunnels which are used to send control traffic to the peer node."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"eth1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 fe80::f816:3eff:fe4c:5ebe  prefixlen 64  scopeid 0x20<link>\n        ether fa:16:3e:4c:5e:be  txqueuelen 1000  (Ethernet)\n        RX packets 5581689  bytes 1057148542 (1008.1 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 5818989  bytes 1002306918 (955.8 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nteam-eth1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.16.1.1  netmask 255.255.255.0  broadcast 172.16.1.255\n        inet6 fe80::f816:3eff:fe4c:5ebe  prefixlen 64  scopeid 0x20<link>\n        ether fa:16:3e:4c:5e:be  txqueuelen 1000  (Ethernet)\n        RX packets 5544219  bytes 977056448 (931.7 MiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 5777931  bytes 979222766 (933.8 MiB)\n        TX errors 0  dropped 2 overruns 0  carrier 0  collisions 0\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:['The first time a non-forwarding interface is configured and SSR "takes over" the Linux interfaces, a backup of all the previous ifcfg scripts will be created at ',(0,r.jsx)(n.code,{children:"/var/run/128technology/network-script-backups.tar.gz"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Notice the interfaces are configured as network team because the type was set to ",(0,r.jsx)(n.code,{children:"fabric"}),". If instead the type was set to ",(0,r.jsx)(n.code,{children:"shared"})," then interface ",(0,r.jsx)(n.code,{children:"eth1"})," would have been configured directly with the static IP address."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Upon committing configuration changing the control IP addresses, it can take up to ",(0,r.jsx)(n.strong,{children:"two minutes"})," for the node to reconnect internally or reconnect to its HA peer node. This delay happens because SSR is waiting for the TCP state machine to close existing connections.  Don't panic.  Just sit tight and wait for everything to reconnect."]})}),"\n",(0,r.jsx)(n.p,{children:"While this example showcases peering with a HA node on a conductor, the configuration and operations are identical for a router."}),"\n",(0,r.jsxs)(n.p,{children:["Run ",(0,r.jsx)(n.code,{children:"show system connectivity"})," to ensure that both nodes are connected."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"admin@T127_DUT1.Conductor# show system connectivity\nWed 2019-02-13 16:09:06 UTC\n\n===================== ===================== ==============\n Local Node            Remote Node           State\n===================== ===================== ==============\n T127_DUT1.Conductor   T127_DUT2.Conductor   connected\n\nCompleted in 0.11 seconds\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Run ",(0,r.jsx)(n.code,{children:"show system connectivity internal"})," to confirm that the internal processes are communicating with each other."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"admin@T127_DUT1.Conductor# show system connectivity internal\nWed 2019-02-13 16:09:30 UTC\n\n===================== ===================== ================= ================= ===========\n Local Node            Remote Node           Service           Address           Message\n===================== ===================== ================= ================= ===========\n T127_DUT1.Conductor   T127_DUT1.Conductor   Zookeeper         127.0.0.1:4370    Connected\n T127_DUT1.Conductor   T127_DUT1.Conductor   ssc               127.0.0.2:12222   Connected\n T127_DUT1.Conductor   T127_DUT1.Conductor   step-repository   127.0.0.2:15555   Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   Internal SSH      127.0.0.1:932     Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   LeaderElect       127.0.0.1:2225    Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   Quorum            127.0.0.1:2224    Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   ZED               127.0.0.1:4392    Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   Zookeeper         127.0.0.1:4371    Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   influx-rpc        127.0.0.3:8088    Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   ssc               127.0.0.3:12222   Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   step-repository   127.0.0.3:15555   Connected\n T127_DUT1.Conductor   T127_DUT2.Conductor   tank              127.0.0.3:11011   Connected\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now that connectivity has been fully established between HA peer nodes, it is useful to configure some external management interfaces. This example will create an ",(0,r.jsx)(n.code,{children:"external"})," Ethernet interface using ",(0,r.jsx)(n.code,{children:"DHCPv4"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"device-interface          mgmt\n    name               mgmt\n    type               ethernet\n    pci-address        0000:00:03.0\n    forwarding         false\n\n    network-interface  ext-mgmt-intf\n        name               ext-mgmt-intf\n        type               external\n        default-route      true\n\n        management-vector\n            name      ext-mgmt-vector\n            priority  100\n        exit\n        dhcp               v4\n    exit\nexit\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Notice that some additional fields were configured. The ",(0,r.jsx)(n.code,{children:"default-route"})," is set to ",(0,r.jsx)(n.code,{children:"true"}),".  This instructs Linux to set this external interface as the default route for all traffic. Secondly, a ",(0,r.jsx)(n.code,{children:"management-vector"})," was configured.  This is required when setting the ",(0,r.jsx)(n.code,{children:"default-route"})," to ",(0,r.jsx)(n.code,{children:"true"}),". The user is allowed to define multiple interfaces as the ",(0,r.jsx)(n.code,{children:"default-route"}),", so the ",(0,r.jsx)(n.code,{children:"management-vector"})," is used to define the priority of all interfaces which are set as the default route."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["If you configure the interface that is currently being used to connect to SSR as an ",(0,r.jsx)(n.code,{children:"external"})," interface, you will notice your connection hang for a few moments while SSR takes over the interface after the config is committed. Once the commit is complete you will notice the interface's ifcfg script has been updated:"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[root@t127-dut1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0\nBOOTPROTO=dhcp\nDEFROUTE=yes\nDEVICE=eth0\nMETRIC=100\nMTU=1500\nNM_CONTROLLED=no\nONBOOT=yes\nTYPE=Ethernet\nUSERCTL=no\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The goal of this functionality is to eliminate the need for administrators to have to drop to the Linux shell to manually configure interfaces. A configuration field name ",(0,r.jsx)(n.code,{children:"ifcfg-option"})," was added to the ",(0,r.jsx)(n.code,{children:"network-interface"})," to allow super users to add any config field directly to an ifcfg script that SSR currently does not support. SSR does validate that the user is not trying to configure any options that SSR already configures to avoid creating conflicts with SSR settings. An example is firewalld zones.  Perhaps this external interface needs to be configured as a trusted interface."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"network-interface  ext-mgmt-intf\n    name               ext-mgmt-intf\n    global-id          5\n    type               external\n    default-route      true\n\n    management-vector\n        name      ext-mgmt-vector\n        priority  100\n    exit\n    dhcp               v4\n\n    ifcfg-option       ZONE\n        name   ZONE\n        value  trusted\n    exit\nexit\n"})}),"\n",(0,r.jsx)(n.p,{children:"Upon committing this configuration you will see the ifcfg script get updated with the new value."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[root@t127-dut1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0\nBOOTPROTO=dhcp\nDEFROUTE=yes\nDEVICE=eth0\nMETRIC=100\nMTU=1500\nNM_CONTROLLED=no\nONBOOT=yes\nTYPE=Ethernet\nUSERCTL=no\nZONE=trusted\n"})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);