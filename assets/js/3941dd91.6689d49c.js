"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[915],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=d(n),g=o,f=h["".concat(s,".").concat(g)]||h[g]||u[g]||a;return n?i.createElement(f,r(r({ref:t},l),{},{components:n})):i.createElement(f,r({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var d=2;d<a;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},89641:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return l},default:function(){return h}});var i=n(87462),o=n(63366),a=(n(67294),n(3905)),r=["components"],c={title:"Configuration Management on the SSR",sidebar_label:"Configuration Management"},s=void 0,d={unversionedId:"config_basics",id:"config_basics",title:"Configuration Management on the SSR",description:"The following sections describe the various configurations available to you on your SSR, the basics of the configuration workflow, and important things to consider when managing your SSR devices.",source:"@site/docs/config_basics.md",sourceDirName:".",slug:"/config_basics",permalink:"/docs/config_basics",tags:[],version:"current",lastUpdatedAt:1663965284,formattedLastUpdatedAt:"9/23/2022",frontMatter:{title:"Configuration Management on the SSR",sidebar_label:"Configuration Management"},sidebar:"docs",previous:{title:"Conductor Managed WAN Assurance",permalink:"/docs/config_wan_assurance"},next:{title:"Configuration Templates",permalink:"/docs/config_templates"}},l=[{value:"Factory Default Configuration",id:"factory-default-configuration",children:[],level:2},{value:"Generated Configuration",id:"generated-configuration",children:[{value:"Forcing the Generation of Configuration",id:"forcing-the-generation-of-configuration",children:[],level:3}],level:2},{value:"Running Configuration",id:"running-configuration",children:[],level:2},{value:"Candidate Configuration",id:"candidate-configuration",children:[{value:"How it Works",id:"how-it-works",children:[],level:4},{value:"Conflict Resolution",id:"conflict-resolution",children:[],level:3},{value:"GUI Considerations",id:"gui-considerations",children:[{value:"Scenario:",id:"scenario",children:[],level:4}],level:3},{value:"High Availability Configurations",id:"high-availability-configurations",children:[],level:3}],level:2},{value:"Configuration Workflows",id:"configuration-workflows",children:[{value:"Comparing Configurations",id:"comparing-configurations",children:[],level:3},{value:"Restoring the Candidate",id:"restoring-the-candidate",children:[],level:3},{value:"Import/Export",id:"importexport",children:[],level:3}],level:2}],u={toc:l};function h(e){var t=e.components,c=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},u,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following sections describe the various configurations available to you on your SSR, the basics of the configuration workflow, and important things to consider when managing your SSR devices."),(0,a.kt)("h2",{id:"factory-default-configuration"},"Factory Default Configuration"),(0,a.kt)("p",null,"When a new node is initialized, it is given the factory default configuration. The factory defaults include the configuration attributes given to it during initialization (the router name and node name, and a high availability counterpart node if applicable) as well as various configuration elements that are part of the global data of an Authority \u2013 session-type elements that represent common network protocols (e.g., HTTP, HTTPS, SSH), and service-class elements for common DSCP values."),(0,a.kt)("p",null,'By default, these factory default elements are not displayed when viewing the configuration through the PCLI. To view the factory default settings, add the keyword "verbose" at the end of a ',(0,a.kt)("inlineCode",{parentName:"p"},"show")," configuration statement; e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"show config running verbose"),". Factory default elements are always displayed when viewing the configuration through the GUI."),(0,a.kt)("p",null,"To restore an SSR system back to its factory defaults, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"restore config factory-default")," command from the PCLI."),(0,a.kt)("h2",{id:"generated-configuration"},"Generated Configuration"),(0,a.kt)("p",null,"Occasionally, the Conductor generates configuration on behalf of the administrator; this is typically done to facilitate some configuration steps that would otherwise be somewhat onerous or prone to error. When the Conductor generates the configuration on behalf of an administrator, it includes a ",(0,a.kt)("inlineCode",{parentName:"p"},"generated")," setting in each configuration element it has generated, and sets the value to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("p",null,"The Conductor regenerates this configuration each time the configuration is committed. This ensures that the generation properly reflects any changes made to the rest of the configuration from which the generated configuration was derived. When committing configuration, the Conductor first ",(0,a.kt)("em",{parentName:"p"},"deletes all configuration that has the generated flag set to true"),"."),(0,a.kt)("p",null,"If you have made any changes to configuration elements that were originally generated by the Conductor, but neglected to set the generated flag to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),", those elements will be discarded and regenerated. Thus, it is mandatory that you set the generated flag to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," before modifying any generated configuration to make it persistent."),(0,a.kt)("h3",{id:"forcing-the-generation-of-configuration"},"Forcing the Generation of Configuration"),(0,a.kt)("p",null,"The Force Configuration Generation command (selected from the GUI or using ",(0,a.kt)("inlineCode",{parentName:"p"},"create config autogenerated")," from the PCLI) generates and stages the configuration changes into the current candidate configuration. This allows you to validate, inspect, make edits, and commit these changes as part of the work flow."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"toolbar",src:n(55990).Z}),"\n",(0,a.kt)("img",{alt:"popup",src:n(27922).Z}),"\n",(0,a.kt)("img",{alt:"dialog",src:n(65550).Z})),(0,a.kt)("h2",{id:"running-configuration"},"Running Configuration"),(0,a.kt)("p",null,"The running configuration is the set of configuration elements that the SSR is currently using to make routing decisions, forward traffic, enforce policy, etc. The SSR loads the running configuration when the software starts; this configuration is either the one that it retrieves at start from its conductor, or from its local disk (in the case where it is either unmanaged, or unable to reach its conductor)."),(0,a.kt)("h2",{id:"candidate-configuration"},"Candidate Configuration"),(0,a.kt)("p",null,"Configuration concurrency was introduced in version 5.6. This feature creates a candidate configuration for each user the first time they edit their configuration, allowing multiple administrators to modify the running configuration at the same time. "),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Beginning with 5.3, the candidate configuration is not saved to disk and will not persistent through reboot. It is strongly recommended that you export candidate configurations occasionally when making large or important changes to avoid losing your work."))),(0,a.kt)("p",null,"Each user makes edits locally to a candidate configuration. When they have completed their edits locally, they commit the config to the conductor and changes are merged into the running configuration. As other users complete and commit their changes, the updated running configuration is compared to each candidate configuration for conflicts. If none exist, the local changes are committed to the running configuration on the conductor. "),(0,a.kt)("h4",{id:"how-it-works"},"How it Works"),(0,a.kt)("p",null,"Consider the case of User A and User B:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Both users access the same conductor, open the configuration, and begin making changes. "),(0,a.kt)("li",{parentName:"ul"},"User A makes three separate changes to the candidate configuration. User A\u2019s changes are kept local. "),(0,a.kt)("li",{parentName:"ul"},"User B makes one change to the candidate configuration. User B\u2019s changes are kept local. ")),(0,a.kt)("p",null,"When User A commits their changes, the changes applied to their candidate configuration are validated and then merged into the running configuration. The candidate configuration from User B is now behind the running configuration by User A\u2019s three changes. "),(0,a.kt)("p",null,"User B has one change of their own. The validation and commit process compares the ",(0,a.kt)("strong",{parentName:"p"},"updated")," running configuration to User B's candidate configuration for conflicts. If none are found, then the local changes are committed to the running configuration on the conductor. "),(0,a.kt)("p",null,"If the validation operation encouters conflicts, an error message containing the details of the conflict is displayed, and the conflicts are deleted from the candiate config. All non-conflicting changes are preserved in the candidate configuration. "),(0,a.kt)("h3",{id:"conflict-resolution"},"Conflict Resolution"),(0,a.kt)("p",null,"In the example below, User B changed the description of the router ",(0,a.kt)("inlineCode",{parentName:"p"},"Router"),", but User A had already deleted that router, resulting in the conflict. "),(0,a.kt)("p",null,"To see the configuration changes that were preserved in the candidate despite the conflicts, run ",(0,a.kt)("inlineCode",{parentName:"p"},"compare-config"),"."),(0,a.kt)("p",null,"The following is an example of a configuration conflict as seen in the PCLI: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"*admin@conductor-east-1.RTR_EAST_CONDUCTOR# commit force\nValidating, then committing...\n% Error: Failed to commit candidate configuration because another user \nhas committed conflicting changes. The following changes have been lost, \nrun 'compare config' to see changes that were preserved:\n\n1. failed to apply merge configuration change:\n\nconfig\n\n    authority\n\n        router  Router\n            name         Router\n            description  hello\n        exit\n    exit\nexit\n")),(0,a.kt)("p",null,"In this case, using ",(0,a.kt)("inlineCode",{parentName:"p"},"compare-config")," displays a non-coflicting change that remains in the candidate, and can be committed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"*admin@conductor-east-1.RTR_EAST_CONDUCTOR# compare config\n\nconfig\n\n    authority\n        name  NewAuthority\n    exit\nexit\n")),(0,a.kt)("h3",{id:"gui-considerations"},"GUI Considerations"),(0,a.kt)("p",null,"Juniper strongly suggests careful configuration of users' permissions to avoid rare configuration conflicts when users concurrently make conflicting updates ",(0,a.kt)("strong",{parentName:"p"},"using the GUI"),". For information about user permissions, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/config_RBAC"},"Configuring Role-Based Access Control.")),(0,a.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The following conflict ",(0,a.kt)("em",{parentName:"p"},"may")," occur when multiple GUI users make changes to the configuration. "))),(0,a.kt)("h4",{id:"scenario"},"Scenario:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"User A removes a peer from the configuration, and commits the change.\nThe change has no conflicts and is accepted into the running config.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"User B changes the description field of the peer that User A deleted. User B then commits their changes. "))),(0,a.kt)("p",null,"Rather than an error message informing User B that the peer they are editing has been deleted, the GUI accepts the information directly impacting the change to the description field, but not the entire peer. The resulting commit failure message can be cryptic, as shown below. "),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"GUI Commit Failure",src:n(25496).Z})),(0,a.kt)("p",null,"In this case, viewing the configuration changes as seen from the command line, the discrepancies are visible. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"config\n\n    authority\n\n        router  RTR_EAST_COMBO\n            name         RTR_EAST_COMBO\n            peer         bluerouter      <--- DELETED BY USER A\n            authority-name    Authority\n            router-name       bluerouter\n        exit\n    exit\nexit\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'config\n\n    authority\n\n        router  RTR_EAST_COMBO\n            name         RTR_EAST_COMBO\n            \n            peer         bluerouter      \n                name       bluerouter\n                description    "hello user was here"    <--- ADDED BY USER B\n        exit\n    exit\nexit\n')),(0,a.kt)("p",null,"When User B commits their change, the peer, name, and description are verified to be added back into the configuration. The deleted authority-name and router-name are not found as part of the change, and therefore generate the commit failure message. "),(0,a.kt)("p",null,"To resolve this type of conflict, the error message and candidate configuration should be reviewed with the adminstrator. They can work to identify the user who generated the conflicting changes and review the event logs to reconstruct the changes to the affected objects. Ultimately the users must determine the priority of the configuration changes and commit the result."),(0,a.kt)("h3",{id:"high-availability-configurations"},"High Availability Configurations"),(0,a.kt)("p",null,"There are several things to be mindful of before configuring high availability: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The two nodes must be informed that they are part of a high availability set. "),(0,a.kt)("li",{parentName:"ul"},"They must have a dedicated interface between them for synchronizing state information about active sessions. "),(0,a.kt)("li",{parentName:"ul"},"For software versions prior to 5.3.0, all configuration edit and commit operations must be done on ",(0,a.kt)("strong",{parentName:"li"},"only")," one node. ")),(0,a.kt)("p",null,"Please refer to ",(0,a.kt)("a",{parentName:"p",href:"/docs/config_ha#requirements"},"Configuring Dual Node High Availability")," for detailed configuration steps and information related to HA configurations."),(0,a.kt)("h2",{id:"configuration-workflows"},"Configuration Workflows"),(0,a.kt)("p",null,"Unlike many traditional routers, the Session Smart Networking Platform contains a series of interdependent pieces of configuration \u2013 referred to as our ",(0,a.kt)("em",{parentName:"p"},"data model")," \u2013 to inform its decisions on routing, forwarding, and policy enforcement. These interdependencies mean that the method of working with the SSR may be slightly different than you are accustomed to."),(0,a.kt)("p",null,"The basic premise is that there may two configurations on your SSR at any point in time: the ",(0,a.kt)("em",{parentName:"p"},"running configuration")," and, as soon as you make any edits to the configuration, a ",(0,a.kt)("em",{parentName:"p"},"candidate configuration")," is created. You stage configuration changes in the candidate, and when you have completed your configuration activity, you validate and commit them to the running configuration \u2013 bringing the candidate and running back into unison. Upon commit, the candidate configuration iFrom there, you may undertake your next set of configuration changes."),(0,a.kt)("p",null,"This basic workflow (configure, validate, commit) is the fundamental mechanism for effecting change in the behavior of your SSR Networking Platform. Other operations you may be familiar with from other network devices, such as backup/restore, etc., have analogues in the SSR paradigm. These backup/restore operations may operate on the candidate configuration, the running configuration, or both."),(0,a.kt)("h3",{id:"comparing-configurations"},"Comparing Configurations"),(0,a.kt)("p",null,"To see the changes between the candidate and running configuration, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config")," command within the PCLI. This takes positional arguments, ",(0,a.kt)("inlineCode",{parentName:"p"},"candidate"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"running"),", or the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," of a previously exported configuration. The output for the ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config")," command shows the differences between the two configurations. The ordering of the arguments is significant; issuing the command ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config running candidate")," shows the changes that have been made to the candidate configuration. The command ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config candidate running")," shows the set of changes that would need to be applied to restore the candidate configuration back to the running configuration. The ",(0,a.kt)("em",{parentName:"p"},"name")," argument identifies a previously exported configuration file to compare against the running, candidate, ",(0,a.kt)("em",{parentName:"p"},"or another exported configuration file.")," This argument allows you to compare configurations ",(0,a.kt)("strong",{parentName:"p"},"without")," having to import the exported config into the candidate config for comparison."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The output of ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config candidate running"),' is formatted such that it can be copied and pasted back into the PCLI, to revert all changes and have the candidate be "reset" to the running configuration. Obviously, you can selectively copy/paste sections of this output back into the PCLI to revert only specific sets of changes. However, care must be taken when doing this, as the configuration is organized in a hierarchy with specific expectations around ',(0,a.kt)("inlineCode",{parentName:"p"},"exit"),"ing configuration blocks."))),(0,a.kt)("h3",{id:"restoring-the-candidate"},"Restoring the Candidate"),(0,a.kt)("p",null,"Similar to copying and pasting the output of ",(0,a.kt)("inlineCode",{parentName:"p"},"compare config candidate running")," into the PCLI, there is a specific command for reverting the entire candidate configuration back to the running configuration's state. The command ",(0,a.kt)("inlineCode",{parentName:"p"},"restore config running")," resets the candidate back to the system's runtime configuration, and deletes the candidate configuration."),(0,a.kt)("p",null,"From the GUI, use the ",(0,a.kt)("strong",{parentName:"p"},"Revert to Running")," button in the navigation bar near the top of the window to accomplish the same goal."),(0,a.kt)("h3",{id:"importexport"},"Import/Export"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"export config")," command to save the candidate or running configuration. It is strongly recommended to frequently save the candidate configuration as a checkpoint for changes to be committed. In earlier releases the candidate configuration was stored on disk and would persist through product reboots. Beginning with 5.3, the candidate configuration is not saved to disk and will not persistent through reboot."),(0,a.kt)("p",null,"The running configuration can be exported as a working configuration, or for replicating the same configuration on another SSR, or for replicating the configuration to another system for archival/auditing. It is a useful practice to export the configuration prior to a system upgrade. The candidate or running configuration is backed up by executing ",(0,a.kt)("inlineCode",{parentName:"p"},"export config candidate <export-name>")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"export config running <export-name>"),"."),(0,a.kt)("p",null,"To import a configuration that has been exported, execute ",(0,a.kt)("inlineCode",{parentName:"p"},"import config <file-name>"),". Imported configurations are loaded into the candidate config. To apply the imported configuration to the system, a ",(0,a.kt)("strong",{parentName:"p"},"Commit")," operation must be executed for it to become the running config."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"When copying exported configurations onto a SSR platform, the file must be placed in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/128technology/config-exports")," "))))}h.isMDXComponent=!0},25496:function(e,t,n){t.Z=n.p+"assets/images/config_concurrency_gui_commit_fail-1896f4a101f27e8d9b02475764a7a5d1.png"},55990:function(e,t,n){t.Z=n.p+"assets/images/config_force_regen1-3f99b04677d425053f37f13d9738bc4b.png"},27922:function(e,t,n){t.Z=n.p+"assets/images/config_force_regen2-3b74d217971ce1335c2d15b8dbc0d8fb.png"},65550:function(e,t,n){t.Z=n.p+"assets/images/config_force_regen3-e7613a08cfbd37c3104d4cc468791073.png"}}]);