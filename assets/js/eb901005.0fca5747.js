"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[9689],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),h=a,f=d["".concat(c,".").concat(h)]||d[h]||u[h]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},44264:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],s={title:"Packet Capture",sidebar_label:"Packet Capture"},c=void 0,l={unversionedId:"ts_packet_capture",id:"ts_packet_capture",title:"Packet Capture",description:"PCAPs are one of the most useful tools to debug traffic issues on the SSR, as well as wider networking issues. The nature of troubleshooting is that it is transitory; once the problem has been identified, the system state should be restored to its previous state (or possibly with necessary modifications as a result of the troubleshooting exercise). This guide walks through the approaches for applying dynamic capture filters to the SSR Networking Platform.",source:"@site/docs/ts_packet_capture.md",sourceDirName:".",slug:"/ts_packet_capture",permalink:"/docs/ts_packet_capture",draft:!1,tags:[],version:"current",lastUpdatedAt:1682966606,formattedLastUpdatedAt:"May 1, 2023",frontMatter:{title:"Packet Capture",sidebar_label:"Packet Capture"},sidebar:"docs",previous:{title:"MAC Address Uniqueness",permalink:"/docs/ts_mac_uniqueness"},next:{title:"Serial Console Troubleshooting",permalink:"/docs/ts_serial_console_tsing"}},p={},u=[{value:"PCLI Packet Capture per Device Interface",id:"pcli-packet-capture-per-device-interface",level:2},{value:"create capture-filter",id:"create-capture-filter",level:3},{value:"delete capture-filter",id:"delete-capture-filter",level:3},{value:"show capture-filter",id:"show-capture-filter",level:3},{value:"Selective Packet Capture",id:"selective-packet-capture",level:2},{value:"Default Mode",id:"default-mode",level:3},{value:"Local Mode",id:"local-mode",level:4},{value:"Creating Selective Packet Capture",id:"creating-selective-packet-capture",level:3},{value:"Removing Selective Packet Capture",id:"removing-selective-packet-capture",level:3},{value:"Showing Selective Packet Captures",id:"showing-selective-packet-captures",level:3},{value:"Session Capture in the GUI",id:"session-capture-in-the-gui",level:2}],d={toc:u};function h(e){var t=e.components,s=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"PCAPs are one of the most useful tools to debug traffic issues on the SSR, as well as wider networking issues. The nature of troubleshooting is that it is transitory; once the problem has been identified, the system state should be restored to its previous state (or possibly with necessary modifications as a result of the troubleshooting exercise). This guide walks through the approaches for applying dynamic capture filters to the SSR Networking Platform."),(0,i.kt)("p",null,"Packet capture information can be viewed and configured from both the PCLI and the ",(0,i.kt)("a",{parentName:"p",href:"#packet-capture-in-the-gui"},"user interface"),". "),(0,i.kt)("h2",{id:"pcli-packet-capture-per-device-interface"},"PCLI Packet Capture per Device Interface"),(0,i.kt)("p",null,"Enabling packet capture through configuration, while useful for defining filters that will survive a reboot, can pose challenges while debugging. Pending configuration changes may exist, requiring reverting the configuration so as to apply a capture filter. Thankfully there exists a dynamic way to apply capture filters to a device interface that does not require making configuration changes."),(0,i.kt)("p",null,"When using dynamic capture filters, the following rules apply:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Creating or removing a dynamic capture filter does not persist and will not survive a restart of the SSR software"),(0,i.kt)("li",{parentName:"ul"},"Interactions exist with configured capture filters",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If capture filters exist within the configuration and a configuration change happens that does not impact static capture filters, the configuration change will not affect dynamic capture filters"),(0,i.kt)("li",{parentName:"ul"},"If static capture filters exist within the configuration, and if a configuration change modifies the static capture filters, all dynamic capture filters will be removed")))),(0,i.kt)("p",null,"Three commands provide the capabilities to manage dynamic capture filters."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/cli_reference#create-capture-filter"},"create capture-filter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/cli_reference#delete-capture-filter"},"delete capture-filter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/cli_reference#show-capture-filters"},"show capture-filter"))),(0,i.kt)("h3",{id:"create-capture-filter"},"create capture-filter"),(0,i.kt)("p",null,"Dynamic capture filters use Berkeley Packet Filter (BPF) syntax, the same as statically configured capture filters. If the syntax is not correct, the filter will be rejected. Please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://biot.com/capstats/bpf.html"},"online BPF documentation")," for syntax help. If a capture filter already exists, the create operation will be ignored."),(0,i.kt)("p",null,"The syntax for creating a capture filter can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> create capture-filter\n  usage: capture-filter [force] [router <router>] [node <node>]\n                         device-interface <device-interface> <capture-filter>\n  Creates capture-filter from highway at the specified node\n  keyword arguments:\n  device-interface    The device interface on which to create the capture\n                      filter\n  force               Skip confirmation prompt\n  node                The node on which to create the capture filter\n  router              The router on which to create the capture filter\n  positional arguments:\n  capture-filter      The capture-filter to create (Uses BPF syntax)\n")),(0,i.kt)("h3",{id:"delete-capture-filter"},"delete capture-filter"),(0,i.kt)("p",null,"This command can be used to remove dynamic capture filters as well as temporarily removing any static capture filtered added through configuration.  The command will return an error if the capture filter is not present."),(0,i.kt)("p",null,"The syntax for removing a capture filter can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> delete capture-filter\n  usage: capture-filter [force] [router <router>] [node <node>]\n                        device-interface <device-interface> <capture-filter>\n  Deletes capture-filter from highway at the specified node\n  keyword arguments:\n  device-interface    The device interface on which to delete the capture\n                      filter\n  force               Skip confirmation prompt\n  node                The node on which to remove the capture filter\n  router              The router on which to remove the capture filter\n\n  positional arguments:\n  capture-filter    The capture-filter to remove (Uses BPF syntax)\n")),(0,i.kt)("p",null,"The keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"all")," can be used as an argument to ",(0,i.kt)("inlineCode",{parentName:"p"},"device-interface")," to remove all capture filters on a particular node and router.  Omitting ",(0,i.kt)("inlineCode",{parentName:"p"},"capture-filter")," from the command will remove all capture filters for a specified device interface."),(0,i.kt)("h3",{id:"show-capture-filter"},"show capture-filter"),(0,i.kt)("p",null,"In order to display both static and dynamic capture filters, the ",(0,i.kt)("em",{parentName:"p"},"show capture-filters")," PCLI command will reflect the current state capture filters."),(0,i.kt)("p",null,"The syntax for displaying static and dynamic capture filters can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> show capture-filters\n  usage: capture-filters [device-interface <device-interface>]\n                         [force] [router <router>] [node <node>]\n  Show active capture-filters\n  keyword arguments:\n  device-interface    Device interface on which to show capture-filters\n  force               Skip confirmation prompt\n  node                The node on which to show capture-filters\n  router              The router on which to show capture-filters\n")),(0,i.kt)("h2",{id:"selective-packet-capture"},"Selective Packet Capture"),(0,i.kt)("p",null,"While a powerful tool, it can be difficult to isolate a particular set of packets pertaining to a service using device-interface packet captures; especially if the session that is being tracked is an SVR session, where the IPs and L4 ports will be NATed. To simplify the troubleshooting effort, selective packet captures provides filtering controls beyond what is capable with BPF, and affords the administrator the ability to match traffic by service. A powerful capability of this feature is to apply a trace not only on the ingress node where the capture is defined, but also triggering traces on every subsequent SSR node the session traverses."),(0,i.kt)("p",null,"Selective capture can operate in one of two modes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"local-only")," mode will trigger a capture only on the node to which the command is issued"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"default")," mode will propagate the capture to all subsequent SSR nodes the session traverses")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Much like per device interface packet captures, selective packet captures will not survive a restart of the SSR.")),(0,i.kt)("h3",{id:"default-mode"},"Default Mode"),(0,i.kt)("p",null,"There are four locations within the SSR wherein capturing packets will provide full visibility into the behavior of a packet."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Forward flow of a session arriving on the ingress interface (before any NATing has been applied)"),(0,i.kt)("li",{parentName:"ol"},"Forward flow of a session leaving the egress interface (post NAT with decrypted metadata)"),(0,i.kt)("li",{parentName:"ol"},"Reverse flow of a session arriving on the egress interface"),(0,i.kt)("li",{parentName:"ol"},"Reverse flow of a session leaving the ingress interface")),(0,i.kt)("p",null,"When creating a selective capture filter on the LAN interface, sessions will be tagged with an action that will capture all packets for the session at each of the four points listed above. Additionally, ",(0,i.kt)("a",{parentName:"p",href:"/docs/concepts_metadata"},"metadata")," will indicate to subsequent SSR nodes/routers to enable the packet capture for this session. Each SSR node will install capture filters in each of the four capture points for the same session. A ",(0,i.kt)("a",{parentName:"p",href:"https://www.tcpdump.org/pcap.html"},"PCAP")," file will be created on each node, containing the name of the service captured."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Typical Network Diagram",src:r(95377).Z,width:"1305",height:"486"})),(0,i.kt)("p",null,"Referencing the above diagram, a capture on node1.routerA will create PCAPs for a single session on each of the 12 points shown."),(0,i.kt)("h4",{id:"local-mode"},"Local Mode"),(0,i.kt)("p",null,"When creating selective packet captures in ",(0,i.kt)("em",{parentName:"p"},"local-mode"),', a user can initiate a capture filter, targeting a particular node. No other "downstream" nodes will capture this session.'),(0,i.kt)("h3",{id:"creating-selective-packet-capture"},"Creating Selective Packet Capture"),(0,i.kt)("p",null,"Executing ",(0,i.kt)("inlineCode",{parentName:"p"},"create session-capture")," will create a file with the name ",(0,i.kt)("inlineCode",{parentName:"p"},"128T_service_<service-name>.pcap")," on each node the session traverses. Additionally, ",(0,i.kt)("inlineCode",{parentName:"p"},"INFO")," level logging for session setup and tear down will be added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"serviceArea.log"),". All sessions captured for the same service, even if they match more than one filter will be added to the same file and the \u201c.pcap\u201d file."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"There is no mechanism to stop a capture for an existing session once the capture is in progress. Each session defaults to capturing 100 packets.")),(0,i.kt)("p",null,"The syntax for creating a selective capture filter can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> create session-capture\nusage: session-capture [source-ip <source-ip>] [source-port <source-port>] [destination-ip <destination-ip>] [destination-port <destination-port>] [protocol <protocol>] [session-count\n                       <session-count>] [packet-count <packet-count>] [local-only] [force] [router <router>] [node <node>] service <service>\n\nCreates a session capture at the specified node for service\n\nWhen destination or source IPs are not specified, any IP will be matched.\nWhen destination or source port is not provided, port range of 0-65535 is used.\nWhen protocol is not provided, all protocols will be matched.\nWhen session-count is not specified, default will be unlimited.\nWhen packet-count is not specified, default is 100 packets in each direction for each session matched.\n\nkeyword arguments:\ndestination-ip      The destination IP address/prefix to match\ndestination-port    The destination port to match (can be a range)\nforce               Skip confirmation prompt\nlocal-only          Session capture is local to the node\nnode                The ingress node on which to create the session capture\npacket-count        The number of packets to capture per session, in each direction\nprotocol            The protocol to match (in decimal or by name, eg 'tcp')\nrouter              The router on which to create the session capture\nservice             The service on which to create the session capture\nsession-count       The number of sessions to capture\nsource-ip           The source IP address/prefix to match\nsource-port         The source port to match (can be a range)\n")),(0,i.kt)("h3",{id:"removing-selective-packet-capture"},"Removing Selective Packet Capture"),(0,i.kt)("p",null,"The selective packet capture can be removed by specifying the filter or by the uniquely generated capture id which is displayed in the ",(0,i.kt)("a",{parentName:"p",href:"#showing-selective-packet-captures"},"show command"),":"),(0,i.kt)("p",null,"The syntax for removing a selective capture filter can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> delete session-capture\nusage: session-capture [source-ip <source-ip>] [source-port <source-port>] [destination-ip <destination-ip>] [destination-port <destination-port>] [protocol <protocol>] [session-count\n                       <session-count>] [packet-count <packet-count>] [local-only] [force] [router <router>] [node <node>] service <service>\n\nDeletes session-capture from selected service\n\nkeyword arguments:\ndestination-ip      The destination IP address/prefix to match\ndestination-port    The destination port to match (can be a range)\nforce               Skip confirmation prompt\nlocal-only          Session capture is local to the node\nnode                The node on which to remove the session-capture filter\npacket-count        The number of packets to capture per session, in each direction\nprotocol            The protocol to match (in decimal or by name, eg 'tcp')\nrouter              The router on which to remove the session-capture filter\nservice             The service on which to create the session capture\nsession-count       The number of sessions to capture\nsource-ip           The source IP address/prefix to match\nsource-port         The source port to match (can be a range)\n\nsubcommands:\nby-id    Deletes session-capture from selected service\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> delete session-capture by-id\nusage: by-id [force] [router <router>] [node <node>] service <service> <capture-id>\n\nDeletes session-capture from selected service\n\nkeyword arguments:\nforce      Skip confirmation prompt\nnode       The node on which to remove the session-capture filter\nrouter     The router on which to remove the session-capture filter\nservice    The service on which to create the session capture\n\npositional arguments:\ncapture-id    The session-capture to remove.\n")),(0,i.kt)("p",null,"If the selective capture is created for a limited number of sessions, once all the sessions have been captured, the capture will remove itself. Issuing a command to remove the capture will stop any new captures for new sessions on that service and any session that is still active will continue capturing until the packet count reaches the specified or default termination count."),(0,i.kt)("h3",{id:"showing-selective-packet-captures"},"Showing Selective Packet Captures"),(0,i.kt)("p",null,"The syntax for displaying selective packet capture filters can be seen below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> show session-captures\nusage: session-captures [{id <id> | detail}] [service <service>] [force] [router <router>] [node <node>]\n\nShow active session-captures\n\nkeyword arguments:\ndetail     display session-captures in detail\nforce      Skip confirmation prompt\nid         The session-capture to show in detail\nnode       The node on which to show session-captures\nrouter     The router on which to show session-captures\nservice    Service for which to show session-captures\n")),(0,i.kt)("p",null,"The output from the show command will display currently enabled capture filters as well as the session IDs for those sessions that were captured.  With no parameters, the command will display a summary of all captures for all services.  Below is a sample output, with two captures for service \u201cwest\u201d, and one capture for service \u201ceast\u201d, with one active session being captured."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"========= ==== =================== =================== ========== ==================== =================\n Service   Id   Source              Destination         Protocol   Remaining Sessions   Active Sessions\n========= ==== =================== =================== ========== ==================== =================\n west       2   0.0.0.0/0:0-65535   0.0.0.0/0:0-65535   tcp        unlimited                          0\n west       5   0.0.0.0/0:0-65535   0.0.0.0/0:0-65535   icmp       unlimited                          1\n east       1   0.0.0.0/0:0-65535   0.0.0.0/0:0-65535   icmp       unlimited                          0\n")),(0,i.kt)("p",null,"If you specify the service and capture ID via arguments, you will see details of the sessions being captured.  In the above example you can see that service \u201cwest\u201d has an active session on capture ",(0,i.kt)("inlineCode",{parentName:"p"},"5"),".  The detailed view can be seen below, where it shows session \u201c1640858e-fe6a-44cd-b38a-7d479a68418\u201d is actively being captured:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},">> show session-captures service west id 5\nMon 2020-06-08 11:32:57 EDT\n\n\n=============================================\n Router: Novigrad\n=============================================\n ===========================================\n  Service: west\n  Id:      5\n ===========================================\n  Filter:\n    source-ip:        0.0.0.0/0\n    source-port:      0-65535\n    destination-ip:   0.0.0.0/0\n    destination-port: 0-65535\n    protocol:         icmp\n    packet-count:     100\n    session-count:    unlimited\n\n  Sessions:\n    active:           1\n      1640858e-fe6a-44cd-b38a-7d479a68418\n    remaining:        unlimited\n")),(0,i.kt)("h2",{id:"session-capture-in-the-gui"},"Session Capture in the GUI"),(0,i.kt)("p",null,"Packet capture in the GUI is labelled ",(0,i.kt)("strong",{parentName:"p"},"Session Capture")," and is accessed from the Tools menu. "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Session Capture Window",src:r(34824).Z,width:"576",height:"235"})),(0,i.kt)("p",null,"Select a row to display the Details window for the capture. Selecting the PCAP FILE button brings you to the Logs page and displays the PCAP file, allowing you to select and download data. The capture can also be deleted from the Session Capture Details window. "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Session Capture Details",src:r(48894).Z,width:"576",height:"253"})),(0,i.kt)("p",null,"To configure Session Capture, click the CREATE button to open the Create Session Capture window. Enter or select a router, and specify the information to capture. "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Create Session Capture",src:r(26670).Z,width:"432",height:"352"})))}h.isMDXComponent=!0},26670:function(e,t,r){t.Z=r.p+"assets/images/ts_create_session_capture-8a8115bbaa3716a7425a55c1e6cd0160.png"},95377:function(e,t,r){t.Z=r.p+"assets/images/ts_packet_capture_selective_capture-a7d0ffc17c76e290192dabd14883ee9c.png"},48894:function(e,t,r){t.Z=r.p+"assets/images/ts_session_capture_details-c72ed3a8181d1468f348d9c4933c22c9.png"},34824:function(e,t,r){t.Z=r.p+"assets/images/ts_session_capture_window-19f9edd46c3518c7221e57dcfc0f009d.png"}}]);