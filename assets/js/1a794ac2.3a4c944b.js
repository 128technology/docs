"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[3407],{91328:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=i(74848),o=i(28453);const r={title:"Application Policy Hit Count",sidebar_label:"Application Policy Hit Count"},s=void 0,c={id:"app_policy_hit_count",title:"Application Policy Hit Count",description:'Application Policy Hit Count (APHC) provides insight into the routing policies being used to direct traffic in your network operations; it reports which policies are seeing active traffic ("hit") and how. These values are presented as metrics tracked per service, per tenant; where each tenant service combination could be "hit" in one of the following ways.',source:"@site/docs/app_policy_hit_count.md",sourceDirName:".",slug:"/app_policy_hit_count",permalink:"/docs/app_policy_hit_count",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Application Policy Hit Count",sidebar_label:"Application Policy Hit Count"},sidebar:"docs",previous:{title:"Using Application Summary",permalink:"/docs/how_to_use_app_summary"},next:{title:"Alarm and Events",permalink:"/docs/events_overview"}},a={},l=[{value:"How Does It Work?",id:"how-does-it-work",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Disable APHC for the Authority",id:"disable-aphc-for-the-authority",level:3},{value:"Disable APHC for the Router",id:"disable-aphc-for-the-router",level:3},{value:"Disable APHC for the Authority but Enable for a Specific Router",id:"disable-aphc-for-the-authority-but-enable-for-a-specific-router",level:3},{value:"Clear Expiring Counts",id:"clear-expiring-counts",level:3},{value:"Persist APHC Metrics",id:"persist-aphc-metrics",level:2},{value:"Authority Configuration",id:"authority-configuration",level:3},{value:"Router Configuration",id:"router-configuration",level:3},{value:"Stats Output",id:"stats-output",level:2},{value:"Application Policy Hit Count - Mist Output",id:"application-policy-hit-count---mist-output",level:3}];function d(e){const t={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:'Application Policy Hit Count (APHC) provides insight into the routing policies being used to direct traffic in your network operations; it reports which policies are seeing active traffic ("hit") and how. These values are presented as metrics tracked per service, per tenant; where each tenant service combination could be "hit" in one of the following ways.'}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Count"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Allowed"}),(0,n.jsx)(t.td,{children:"The session was allowed and created successfully."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Failed"}),(0,n.jsx)(t.td,{children:"The session could not be created."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Denied due to Access Policy"}),(0,n.jsx)(t.td,{children:"The packet was denied because an access policy explicitly disallows access."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Denied due to URL Filtering"}),(0,n.jsx)(t.td,{children:"The session was created but was blocked once app classification was completed."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Denied due to Local Service Definition"}),(0,n.jsx)(t.td,{children:"The session was allowed on another ingress router, but is denied here based on the policy on this router (commonly related to hierarchical services)."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"how-does-it-work",children:"How Does It Work?"}),"\n",(0,n.jsxs)(t.p,{children:["Application Policy Hit Count is enabled by default, tracking counts for all observed service and tenant combinations, including the ",(0,n.jsx)(t.code,{children:"access policy denied"})," counters."]}),"\n",(0,n.jsx)(t.p,{children:"The system maintains the current value in memory and will not provide a historical time series of the data unless configured to do so. To prevent excessive consumption of memory resources, the device periodically removes combinations that are no longer being observed. Inactive tenant service combinations remain in the system for 30 to 60 minutes before being removed."}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(t.p,{children:"Counter configuration is flexible and can be enabled or disabled on individual routers, or across the whole authority. Counters can be configured to persist the policy hit count metrics, allowing them to be viewed as a time-series graph. The following configuration snippets show how each configure each option."}),"\n",(0,n.jsx)(t.h3,{id:"disable-aphc-for-the-authority",children:"Disable APHC for the Authority"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"configure\n  authority\n    metrics\n      application-policy-hit-count-tracking\n        enabled false\n      exit\n    exit\n  exit\nexit\n"})}),"\n",(0,n.jsx)(t.h3,{id:"disable-aphc-for-the-router",children:"Disable APHC for the Router"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"configure\n  authority\n    router <router>\n      system\n        metrics\n          application-policy-hit-count-tracking disabled\n        exit\n      exit\n    exit\n  exit\nexit\n"})}),"\n",(0,n.jsx)(t.h3,{id:"disable-aphc-for-the-authority-but-enable-for-a-specific-router",children:"Disable APHC for the Authority but Enable for a Specific Router"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"configure\n  authority\n    metrics\n      application-policy-hit-count-tracking\n        enabled false\n      exit\n    exit\n    router <router>\n      system\n        metrics\n          application-policy-hit-count-tracking enabled\n        exit\n      exit\n    exit\n  exit\nexit\n"})}),"\n",(0,n.jsx)(t.h3,{id:"clear-expiring-counts",children:"Clear Expiring Counts"}),"\n",(0,n.jsx)(t.p,{children:"The cleanup of expired counters runs automatically every 30 minutes. However, in some situations it may be necessary to manually clear hit count entries. In this situation the following command is available:."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"clear application-policy-hit-counts [force] [node <node>] {router <router> | resource-group <resource-group>}"})}),"\n",(0,n.jsx)(t.p,{children:"This command manually triggers the cleanup process. The execution does not change or prevent the scheduled cleanup run. However, executing the command twice will move cleanup forward by an hour and fully clear the policy hit count metrics."}),"\n",(0,n.jsx)(t.h2,{id:"persist-aphc-metrics",children:"Persist APHC Metrics"}),"\n",(0,n.jsxs)(t.p,{children:["Persistence can be configured using a metrics profile as described in the SSR Documentation. The example below show how to persist all hit count types for a specific service and tenant combination, using the ",(0,n.jsx)(t.code,{children:"short"})," retention policy. It is a best practice to always use the shortest retention policy that satisfies your requirements."]}),"\n",(0,n.jsx)(t.p,{children:"There are typically a significant number of APHC metrics active on a system. If persistence is necessary, select a small number of service tenant combinations to be persisted. Careless selection may overwhelm the stats infrastructure resulting in resource shortages."}),"\n",(0,n.jsx)(t.p,{children:"The following configurations are examples only; they should not be directly copied into another environment. Service, tenant, and router names must be replaced."}),"\n",(0,n.jsx)(t.h3,{id:"authority-configuration",children:"Authority Configuration"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'configure\n  authority\n    metrics-profile internet-policy-hit-counts\n      name internet-policy-hit-counts\n      metric /stats/application-policy-hit-count/allowed\n        id /stats/application-policy-hit-count/allowed\n        description "Allowed Hit Count"\n      exit\n      metric /stats/application-policy-hit-count/failed\n        id /stats/application-policy-hit-count/failed\n        description "Failed Hit Count"\n      exit\n      metric /stats/application-policy-hit-count/deny/policy-table\n        id /stats/application-policy-hit-count/deny/policy-table\n        description "Denied for Explicit Access Policy Hit Count"\n      exit\n      metric /stats/application-policy-hit-count/deny/local-service\n        id /stats/application-policy-hit-count/deny/local-service\n        description "Denied After Ingress Router Allowed Hit Count"\n      exit\n      metric /stats/application-policy-hit-count/deny/url-filtering\n        id /stats/application-policy-hit-count/deny/url-filtering\n        description "Denied For URL Filtering Hit count"\n      exit\n      filter service\n        parameter service\n        value internet\n      exit\n      filter tenant\n        parameter tenant\n        value engineering\n      exit\n    exit\n  exit\nexit\n'})}),"\n",(0,n.jsx)(t.h3,{id:"router-configuration",children:"Router Configuration"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"configure\n  authority\n    router <router>\n      name <router>\n      system\n        metrics\n          profile internet-policy-hit-counts\n            name internet-policy-hit-counts\n            retention short\n          exit\n        exit\n      exit\n    exit\n  exit\nexit\n"})}),"\n",(0,n.jsx)(t.h2,{id:"stats-output",children:"Stats Output"}),"\n",(0,n.jsx)(t.p,{children:"The hit count metrics can be accessed via the PCLI as shown. They provide a combination of services and tenants and show how traffic is allowed or blocked. In the example shown, we also see failures due to improperly configured services."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"admin@westB.T207_West# show stats application-policy-hit-count node westA\nWed 2025-01-08 18:59:28 UTC\n\u2714 Retrieving statistics...\n\nHighway Manager application policy hit count Stats\n--------------------------------------------------\n\n========= ======= ================= ================== =======\n Metric    Node    Tenant            Service            Value\n========= ======= ================= ================== =======\n allowed   westA   <global>          lan2-service           1\n           westA   red               lan2-service           1\n           westA   red               lan2-service         326\n deleted   westA   <global>          lan2-service           1\n failed    westA   <invalidTenant>   <UnknownService>      11\n           westA   red               <UnknownService>    5841\n\nCompleted in 0.06 seconds\n"})}),"\n",(0,n.jsx)(t.h3,{id:"application-policy-hit-count---mist-output",children:"Application Policy Hit Count - Mist Output"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Application Policy Hit Count - Mist Output",src:i(98917).A+"",width:"1505",height:"419"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},98917:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/app-policy-hit-count-mist-d6aece8fcf767a4236fe3d8858efb598.png"},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var n=i(96540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);