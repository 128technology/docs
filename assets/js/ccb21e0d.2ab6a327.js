"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[1735],{25132:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var r=i(74848),s=i(28453);const t={title:"NAT Troubleshooting",sidebar_label:"NAT Troubleshooting"},o=void 0,c={id:"ts_nat_troubleshooting",title:"NAT Troubleshooting",description:"Use show network-interface source-nat-rules to display source NAT rules under a given network interface. A network-interface name is required and can be issued from a conductor with targeted router and node. The rules are organized in the following columns.",source:"@site/docs/ts_nat_troubleshooting.md",sourceDirName:".",slug:"/ts_nat_troubleshooting",permalink:"/docs/ts_nat_troubleshooting",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"NAT Troubleshooting",sidebar_label:"NAT Troubleshooting"},sidebar:"docs",previous:{title:"NAT Pools",permalink:"/docs/config_nat_pools"},next:{title:"DHCP",permalink:"/docs/config_dhcp"}},d={},a=[{value:"Direction",id:"direction",level:4},{value:"Type:",id:"type",level:4},{value:"Dynamic Rules",id:"dynamic-rules",level:4},{value:"Summary View - Conductor",id:"summary-view---conductor",level:4},{value:"Detail View - Conductor",id:"detail-view---conductor",level:4},{value:"Summary View - Router",id:"summary-view---router",level:4},{value:"Detail View - Router",id:"detail-view---router",level:4}];function l(n){const e={a:"a",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["Use ",(0,r.jsx)(e.a,{href:"/docs/cli_reference#show-network-interface-source-nat-rules",children:(0,r.jsx)(e.code,{children:"show network-interface source-nat-rules"})})," to display source NAT rules under a given network interface. A network-interface name is required and can be issued from a conductor with targeted router and node. The rules are organized in the following columns."]}),"\n",(0,r.jsx)(e.h4,{id:"direction",children:"Direction"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Ingress"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"network-interface -> dynamic-source-nat"}),"\n",(0,r.jsx)(e.li,{children:"network-interface -> bidirectional-nat"}),"\n",(0,r.jsx)(e.li,{children:"network-interface -> ingress-source-nat-pool"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Egress"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"network-interface -> source-nat"}),"\n",(0,r.jsx)(e.li,{children:"network-interface -> egress-source-nat-pool"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"type",children:"Type:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Dynamic"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"network-interface -> dynamic-source-nat"}),"\n",(0,r.jsx)(e.li,{children:"network-interface -> source-nat"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Bidirectional"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"network-interface -> bidirectional-nat"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Shared"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"network-interface -> ingress-source-nat-pool"}),"\n",(0,r.jsx)(e.li,{children:"network-interface -> egress-source-nat-pool"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"From: The original source ip prefix."}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"To: The NAT\u2019d source ip prefix."}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Protocol: TCP, UDP, or ICMP."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"dynamic-rules",children:"Dynamic Rules"}),"\n",(0,r.jsx)(e.p,{children:"For dynamic rules, the following columns are populated using information from the underlying port allocator:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Key: Port allocator key in the form of ",(0,r.jsx)(e.code,{children:"2/1/<giid>/<ip><proto>"}),"."]}),"\n",(0,r.jsx)(e.li,{children:"State: Port allocator state, ready, standby, or recovery."}),"\n",(0,r.jsx)(e.li,{children:"Total Ports: Total ports configured."}),"\n",(0,r.jsx)(e.li,{children:"Ports In Db: Ports left in redis."}),"\n",(0,r.jsx)(e.li,{children:"Ports In Mem: Ports available in memory."}),"\n",(0,r.jsx)(e.li,{children:"Ports Released: Ports released in memory but not put back in redis."}),"\n",(0,r.jsx)(e.li,{children:"Ports In Use: Ports used by active sessions."}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"summary-view---conductor",children:"Summary View - Conductor"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"admin@conductor.RTR_EAST_CONDUCTOR# show network-interface source-nat-rules router RTR_EAST_COMBO node combo-east-1 name ingress-intf summary\nThu 2024-02-08 18:53:13 UTC\n\u2714 Retrieving source NAT rules...\n\n=========== =============== ================= ==================\n Direction   Type            From              To\n=========== =============== ================= ==================\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32\n ingress     bidirectional   172.16.1.204/30   192.168.9.200/30\n\nCompleted in 0.04 seconds\n\n"})}),"\n",(0,r.jsx)(e.h4,{id:"detail-view---conductor",children:"Detail View - Conductor"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"admin@conductor.RTR_EAST_CONDUCTOR# show network-interface source-nat-rules router RTR_EAST_COMBO node combo-east-1 name ingress-intf detail\nThu 2024-02-08 18:54:43 UTC\n\u2714 Retrieving source NAT rules...\n\n=========== =============== ================= ================== ========== ======================== ========= ============= ============= ============== ================ ==============\n Direction   Type            From              To                 Protocol   Key                      State     Total Ports   Ports In Db   Ports In Mem   Ports Released   Ports In Use\n=========== =============== ================= ================== ========== ======================== ========= ============= ============= ============== ================ ==============\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   tcp        2/1/1/192.168.5.120/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   udp        2/1/1/192.168.5.120/17   Standby         49151         48151            999                0              1\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   icmp       2/1/1/192.168.5.120/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   tcp        2/1/1/192.168.6.202/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   udp        2/1/1/192.168.6.202/17   Standby         49151         48151            998                0              2\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   icmp       2/1/1/192.168.6.202/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   tcp        2/1/1/192.168.7.204/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   udp        2/1/1/192.168.7.204/17   Standby         49151         48151            998                0              2\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   icmp       2/1/1/192.168.7.204/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   tcp        2/1/1/192.168.8.206/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   udp        2/1/1/192.168.8.206/17   Standby         49151         48151            999                0              1\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   icmp       2/1/1/192.168.8.206/1    Standby         49151         48151           1000                0              0\n ingress     bidirectional   172.16.1.204/30   192.168.9.200/30   n/a        n/a                      n/a               n/a           n/a            n/a              n/a            n/a\n\nCompleted in 0.04 seconds\n\n"})}),"\n",(0,r.jsx)(e.h4,{id:"summary-view---router",children:"Summary View - Router"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"admin@combo-east-1.RTR_EAST_COMBO# show network-interface source-nat-rules name ingress-intf\nThu 2024-02-08 18:53:24 UTC\n\u2714 Retrieving source NAT rules...\n\n=========== =============== ================= ==================\n Direction   Type            From              To\n=========== =============== ================= ==================\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32\n ingress     bidirectional   172.16.1.204/30   192.168.9.200/30\n\nCompleted in 0.06 seconds\n\n"})}),"\n",(0,r.jsx)(e.h4,{id:"detail-view---router",children:"Detail View - Router"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"admin@combo-east-1.RTR_EAST_COMBO# show network-interface source-nat-rules name ingress-intf detail\nThu 2024-02-08 18:54:48 UTC\n\u2714 Retrieving source NAT rules...\n\n=========== =============== ================= ================== ========== ======================== ========= ============= ============= ============== ================ ==============\n Direction   Type            From              To                 Protocol   Key                      State     Total Ports   Ports In Db   Ports In Mem   Ports Released   Ports In Use\n=========== =============== ================= ================== ========== ======================== ========= ============= ============= ============== ================ ==============\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   tcp        2/1/1/192.168.5.120/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   udp        2/1/1/192.168.5.120/17   Standby         49151         48151            999                0              1\n ingress     dynamic         172.16.1.0/24     192.168.5.120/32   icmp       2/1/1/192.168.5.120/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   tcp        2/1/1/192.168.6.202/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   udp        2/1/1/192.168.6.202/17   Standby         49151         48151            998                0              2\n ingress     dynamic         172.16.1.202/31   192.168.6.202/32   icmp       2/1/1/192.168.6.202/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   tcp        2/1/1/192.168.7.204/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   udp        2/1/1/192.168.7.204/17   Standby         49151         48151            998                0              2\n ingress     dynamic         172.16.1.204/31   192.168.7.204/32   icmp       2/1/1/192.168.7.204/1    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   tcp        2/1/1/192.168.8.206/6    Standby         49151         48151           1000                0              0\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   udp        2/1/1/192.168.8.206/17   Standby         49151         48151            999                0              1\n ingress     dynamic         172.16.1.206/31   192.168.8.206/32   icmp       2/1/1/192.168.8.206/1    Standby         49151         48151           1000                0              0\n ingress     bidirectional   172.16.1.204/30   192.168.9.200/30   n/a        n/a                      n/a               n/a           n/a            n/a              n/a            n/a\n\nCompleted in 0.05 seconds \n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>c});var r=i(96540);const s={},t=r.createContext(s);function o(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);