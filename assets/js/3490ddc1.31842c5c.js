"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[2249],{70420:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(74848),s=n(28453);const r={title:"CPU Spikes",sidebar_label:"CPU Spikes"},i=void 0,a={id:"ts_cpu_spikes",title:"CPU Spikes",description:"This guide is to be used when investigating the root cause for an SSR that reports alarms of CPU spikes.",source:"@site/docs/ts_cpu_spikes.md",sourceDirName:".",slug:"/ts_cpu_spikes",permalink:"/docs/ts_cpu_spikes",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1711026369,formattedLastUpdatedAt:"Mar 21, 2024",frontMatter:{title:"CPU Spikes",sidebar_label:"CPU Spikes"},sidebar:"docs",previous:{title:"AP: Salt Minion",permalink:"/docs/ts_ap_salt_minion"},next:{title:"Connecting to Routers",permalink:"/docs/ts_connecting_to_routers"}},d={},c=[{value:"Expected Behavior",id:"expected-behavior",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"This guide is to be used when investigating the root cause for an SSR that reports alarms of CPU spikes."}),"\n",(0,o.jsx)(t.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,o.jsx)(t.p,{children:"A CPU alarm is triggered when the average CPU of all of the cores on a system exceeds 85% for thirty seconds. This will not include any CPU cores that are pinned for packet forwarding. The alarm is cleared when the average CPU is below 85% for five (5) seconds."}),"\n",(0,o.jsxs)(t.p,{children:["You can determine whether a system has pinned CPU cores by checking the configuration.  The CPU allocation is defined within the ",(0,o.jsx)(t.code,{children:"node"})," configuration of a router."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"admin@gouda.novigrad# show config running authority router novigrad node gouda \n\nconfig\n\n    authority\n\n        router  novigrad\n            name  novigrad\n\n            node  gouda\n                name                        gouda\n                enabled                     true\n                forwarding-core-mode        automatic\n"})}),"\n",(0,o.jsxs)(t.p,{children:["In particular, the ",(0,o.jsx)(t.code,{children:"forwarding-core-count"})," indicates how many cores are dedicated for fast packet forwarding."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["The default configuration has ",(0,o.jsx)(t.code,{children:"forwarding-core-mode"})," set to ",(0,o.jsx)(t.code,{children:"automatic"})," with no ",(0,o.jsx)(t.code,{children:"forwarding-core-count"})," defined. The SSR platform will attempt to right-size the configuration based on system's available resources. For some deployments, it may be desirable to override the defaults to optimize the platform for your environment."]})}),"\n",(0,o.jsxs)(t.p,{children:["When the forwarding-count-mode is set to automatic, you can see how the system has allocated resources by issuing the command ",(0,o.jsx)(t.code,{children:"show platform cpu"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"admin@gouda.novigrad# show platform cpu \nThu 2020-03-19 15:23:24 UTC\n\n===================================================================\n gouda\n===================================================================\n ---------------\n CPU Information\n ---------------\n Type:                     Intel(R) Atom(TM) CPU  C2558  @ 2.40GHz\n Speed:                    2.400096893310547 GHz\n Hyper-Threading:          no\n Cores:                    4\n Forwarding Cores:         1\n Isolated Cores:           1\n Power-Saver:              disabled\n\nCompleted in 2.75 seconds\n"})}),"\n",(0,o.jsx)(t.p,{children:"With an understanding of how the system is configured, we can now get to the process of examining the history of CPU usage over time. The SSR stores time series data for a number of KPIs that are relevant for system and service health and operation.  Viewing time series data is best accomplished within the GUI."}),"\n",(0,o.jsxs)(t.p,{children:["Navigate to the ",(0,o.jsx)(t.strong,{children:"Custom Reports"})," located on the dashboard.  From there create two reports: one for total utilization per CPU and another for utilization per SSR process, as indicated by the images below."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"ts_cpu_spikes_per_cpu_chart",src:n(49185).A+"",width:"2826",height:"1290"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"ts_cpu_spikes_per_process_chart",src:n(9248).A+"",width:"2826",height:"1280"})}),"\n",(0,o.jsx)(t.p,{children:"Alarms are optionally overlaid on top of all charts generated by the SSR.  This is very helpful in correlating system events to system behavior.  The time window of custom reports can be extended from 5 minutes to 6 months.  If you see anomalies in either the CPU and correspondingly a particular application, this may indicate the system is not performing properly."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},49185:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/ts_cpu_spikes_per_cpu_chart-237fd1e78b82c6d7e8a81bbf0253df13.png"},9248:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/ts_cpu_spikes_per_process_chart-34cf25f6a7d7afd013185ca61054c49a.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(96540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);