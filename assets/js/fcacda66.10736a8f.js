"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[6171],{51339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var r=t(74848),s=t(28453);const c={title:"Interface Types",sidebar_label:"Interface Types"},o=void 0,i={id:"concepts_interface_types",title:"Interface Types",description:"Forwarding: An interface used to pass session traffic.",source:"@site/docs/concepts_interface_types.md",sourceDirName:".",slug:"/concepts_interface_types",permalink:"/docs/concepts_interface_types",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Interface Types",sidebar_label:"Interface Types"},sidebar:"docs",previous:{title:"HA - Theory of Operation",permalink:"/docs/concepts_ha_theoryofoperation"},next:{title:"Kernel Network Interfaces",permalink:"/docs/concepts_kni"}},a={},d=[];function f(e){const n={code:"code",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Forwarding:"})," An interface used to pass session traffic."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Non Forwarding:"})," An interface that is not used to pass session traffic and used for management or conductor-specific traffic."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Non forwarding ",(0,r.jsx)(n.code,{children:"external"})," interface"]}),": An interface that is externally facing such as a management interface or an interface used to reach the conductor. There is no limit to the number of ",(0,r.jsx)(n.code,{children:"external"})," interfaces that a user can configure per node. External interfaces can be Ethernet, LTE, PPPoE or T1 devices. They can also be configured with static IP addresses or to use DHCP."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Non forwarding ",(0,r.jsx)(n.code,{children:"fabric"})," interface"]}),": An interface that is used to connect directly to the node's HA peer. Since a direct connection from one box to the other is assumed in this case, the interface is configured in Linux as a network team. The network team configuration ensures that if a node's HA peer is rebooted that the node's interface does not get a link down event and the IP address does not disappear from Linux, which causes internal connectivity issues within the node itself. The user may configure one ",(0,r.jsx)(n.code,{children:"fabric"})," or ",(0,r.jsx)(n.code,{children:"shared"})," interface per node, and that interface is used for all HA control traffic. The ",(0,r.jsx)(n.code,{children:"fabric"})," interface must be an Ethernet interface with exactly one address."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Non forwarding ",(0,r.jsx)(n.code,{children:"shared"})," interface"]}),": A combination of an ",(0,r.jsx)(n.code,{children:"external"})," and ",(0,r.jsx)(n.code,{children:"fabric"})," interface. A ",(0,r.jsx)(n.code,{children:"shared"})," interface serves all the same purposes as an ",(0,r.jsx)(n.code,{children:"external"})," interface while also providing connectivity to the HA peer. A ",(0,r.jsx)(n.code,{children:"shared"})," interface is not directly connected to the HA peer so it is not configured as a Linux network team. The user may configure one fabric or shared interface per node, and that interface is used for all HA control traffic. The ",(0,r.jsx)(n.code,{children:"shared"})," interface must be an Ethernet interface with exactly one address."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(96540);const s={},c=r.createContext(s);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);