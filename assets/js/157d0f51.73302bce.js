"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[5252],{49905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var r=n(74848),i=n(28453);const c={title:"Configuring RADUIS over TLS",sidebar_label:"Configuring RADIUS over TLS"},o=void 0,s={id:"config_radsec",title:"Configuring RADUIS over TLS",description:"RADIUS over TLS is designed to provide secure communication of RADIUS requests using the Transport Secure Layer (TLS) protocol. RADIUS over TLS, also known as RADSEC, redirects regular RADIUS traffic to remote RADIUS servers connected over TLS. RADSEC allows RADIUS authentication, authorization, and accounting data to be passed safely across untrusted networks.",source:"@site/docs/config_radsec.md",sourceDirName:".",slug:"/config_radsec",permalink:"/docs/config_radsec",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Configuring RADUIS over TLS",sidebar_label:"Configuring RADIUS over TLS"},sidebar:"docs",previous:{title:"Authentication Methods",permalink:"/docs/config_radius"},next:{title:"Username and Password Policies",permalink:"/docs/config_password_policies"}},a={},d=[{value:"Configuring RADSEC",id:"configuring-radsec",level:2},{value:"1. Configure the RADSEC server.",id:"1-configure-the-radsec-server",level:4},{value:"2. Configure the trusted CA certificate.",id:"2-configure-the-trusted-ca-certificate",level:4},{value:"3. Configure a client certificate to be used for the RADIUS client.",id:"3-configure-a-client-certificate-to-be-used-for-the-radius-client",level:4},{value:"4. Configure the RADIUS server at the Authority level to use the configured client certificate.",id:"4-configure-the-radius-server-at-the-authority-level-to-use-the-configured-client-certificate",level:4},{value:"5. Create a RADIUS User",id:"5-create-a-radius-user",level:4}];function u(e){const t={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"RADIUS over TLS is designed to provide secure communication of RADIUS requests using the Transport Secure Layer (TLS) protocol. RADIUS over TLS, also known as RADSEC, redirects regular RADIUS traffic to remote RADIUS servers connected over TLS. RADSEC allows RADIUS authentication, authorization, and accounting data to be passed safely across untrusted networks."}),"\n",(0,r.jsx)(t.p,{children:"In this section:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Configuring RADSEC"}),"\n",(0,r.jsx)(t.li,{children:"Signing and Importing Webserver Certificates"}),"\n",(0,r.jsx)(t.li,{children:"Syslog over TLS"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"configuring-radsec",children:"Configuring RADSEC"}),"\n",(0,r.jsx)(t.p,{children:"Use the following information to configure RADIUS over TLS (RADSEC)."}),"\n",(0,r.jsx)(t.h4,{id:"1-configure-the-radsec-server",children:"1. Configure the RADSEC server."}),"\n",(0,r.jsxs)(t.p,{children:["The following configuration example will add a radius server named ",(0,r.jsx)(t.code,{children:"radsec"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"admin@t327-dut1.cond# configure authority radius-server radsec\nadmin@t327-dut1.cond (radius-server[name=radsec])# address 172.18.5.224\nadmin@t327-dut1.cond (radius-server[name=radsec])# port 2083\nadmin@t327-dut1.cond (radius-server[name=radsec])# protocol tls\nadmin@t327-dut1.cond (radius-server[name=radsec])# account-creation manual\nadmin@t327-dut1.cond (radius-server[name=radsec])# ocsp strict\nadmin@t327-dut1.cond (radius-server[name=radsec])# server-name t327-dut1.openstacklocal\nadmin@t327-dut1.cond (radius-server[name=radsec])# top\n"})}),"\n",(0,r.jsx)(t.h4,{id:"2-configure-the-trusted-ca-certificate",children:"2. Configure the trusted CA certificate."}),"\n",(0,r.jsx)(t.p,{children:"The trusted CA certificate is necessary to validate the incoming client certificate. Certificates are pasted in as a multi-line config."}),"\n",(0,r.jsxs)(t.p,{children:["Create a certificate root named ",(0,r.jsx)(t.code,{children:"ca_root"})," and paste the certificate file content into the command:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"admin@conductor-node-1.Conductor# config authority trusted-ca-certificate ca_root\nadmin@conductor-node-1.Conductor (trusted-ca-certificate[name=ca_root])# content\nEnter plain for content (Press CTRL-D to finish):\n<paste-cert-file-content-here>\n"})}),"\n",(0,r.jsx)(t.h4,{id:"3-configure-a-client-certificate-to-be-used-for-the-radius-client",children:"3. Configure a client certificate to be used for the RADIUS client."}),"\n",(0,r.jsxs)(t.p,{children:["Repeat the previous step to create a client certificate named ",(0,r.jsx)(t.code,{children:"radsec"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"admin@conductor-node-1.Conductor# config authority client-certificate radsec\nadmin@conductor-node-1.Conductor (client-certificate[name=radsec])# content\nEnter plain for content (Press CTRL-D to finish):\n<paste-cert-file-content-here>\n"})}),"\n",(0,r.jsx)(t.h4,{id:"4-configure-the-radius-server-at-the-authority-level-to-use-the-configured-client-certificate",children:"4. Configure the RADIUS server at the Authority level to use the configured client certificate."}),"\n",(0,r.jsxs)(t.p,{children:["Associate the previously configured ",(0,r.jsx)(t.code,{children:"radsec"})," client certificate to the radius server running on a specified node."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"configure authority router cond node t327-dut1 radius client-certificate-name radsec"})}),"\n",(0,r.jsx)(t.p,{children:"Note that the client certificate selected should match the appropriate IP/hostname of the node as seen from the RADIUS server."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"validate"})," and ",(0,r.jsx)(t.code,{children:"commit"})," the changes."]}),"\n",(0,r.jsx)(t.h4,{id:"5-create-a-radius-user",children:"5. Create a RADIUS User"}),"\n",(0,r.jsxs)(t.p,{children:["Create a remotely authenticated RADIUS user. In this example we create user ",(0,r.jsx)(t.code,{children:"test1"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"*admin@conductor-node-1.Conductor# create user test1\nFull Name: test1\nAuthentication Type (remote or local): remote\nRoles (space separated): admin\nEnabled (true or false): true\nAccount 'test1' successfully created\n"})}),"\n",(0,r.jsxs)(t.p,{children:["When the user logs into the node ",(0,r.jsx)(t.code,{children:"t327-dut1"})," via ssh, the authentication request is sent via RADSEC to the server ",(0,r.jsx)(t.code,{children:"172.18.5.224"})," and the user is authenticated."]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(96540);const i={},c=r.createContext(i);function o(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);