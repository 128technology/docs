"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[6802],{13924:(e,n,t)=>{t.d(n,{Ay:()=>a});var i=t(74848),r=t(28453);function o(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The configuration sample below adds a Linux interface ",(0,i.jsx)(n.code,{children:"enp0s14f1"})," to the HA sync team interface."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        router  lshields\n            name  lshields\n\n            node  lanner7573\n                name                lanner7573\n\n                ha-sync-redundancy\n                    redundant-interface    enp0s14f1\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ha-fabric-over-ha-sync",children:"HA Fabric Over HA Sync"}),"\n",(0,i.jsx)(n.p,{children:"The configuration sample below auto-generates HA fabric interfaces that leverage the existing HA sync connection to transit between the nodes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        router  lshields\n            name  lshields\n\n            ha-sync-redundancy\n                generate-shared-fabric-interface    true\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This auto-generates the configuration for a device-interface named ",(0,i.jsx)(n.code,{children:"ha-fabric"})," on any nodes in the router, each with a network-interface named ",(0,i.jsx)(n.code,{children:"ha-fabric-intf"}),". The addresses used on these interfaces will be from the network ",(0,i.jsx)(n.code,{children:"169.254.252.0/30"}),". The network can be overridden by specifying a different network range for the option ",(0,i.jsx)(n.code,{children:"fabric-network"})," within the ",(0,i.jsx)(n.code,{children:"ha-sync-redundancy"})," container."]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},50171:(e,n,t)=>{t.d(n,{Ay:()=>a});var i=t(74848),r=t(28453);function o(e){const n={p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Within an HA router, the communication that occurs on the HA sync connection is vital to proper operation of the router. In many ways it should be thought of as akin to the backplane of a chassis-based router, despite the fact that it is provided through an Ethernet connection. Due to the importance of this connection to proper functionality, customers often wish to provide redundant connections for this traffic in case of cable or interface failure."}),"\n",(0,i.jsx)(n.p,{children:"Additionally, there is typically a desire to minimize the number of cables running between two nodes in an HA router, possibly due to lack of physical ports available. This plugin provides the ability to leverage the existing HA sync connection for HA fabric traffic in order to limit the number of physical connections between the two nodes. This can either allow users to avoid the use of three cables when using a redundant HA connection or avoid using two when the hardware does not provide sufficient ports."})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},20681:(e,n,t)=>{t.d(n,{Ay:()=>a});var i=t(74848),r=t(28453);function o(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"config-auto-generation",children:"Config Auto-Generation"}),"\n",(0,i.jsxs)(n.p,{children:["When enabling use of the shared fabric interface, this plugin auto-generates configuration for a kni host interface named ",(0,i.jsx)(n.code,{children:"ha-fabric"}),". If expected configuration is not being generated, please check the following log on the conductor for errors."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/var/log/128technology/plugins/ha-sync-redundancy-generate-configuration.log\n"})}),"\n",(0,i.jsx)(n.h3,{id:"plugin-state",children:"Plugin State"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"show plugin state"})," command provides useful information for troubleshooting proper performance of the plugin. The ",(0,i.jsx)(n.code,{children:"summary"})," version of this command shows a simple table indicating the status of the team and/or bridge as well as their individual members. A sample output of a fully working plugin is shown below."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If only using one of the two options in this plugin, the output will only contain information for either the team or bridge."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"admin@node1.conductor# show plugins state router router1 summary 128T-ha-sync-redundancy\nFri 2021-09-03 20:05:53 UTC\nRetrieving state data...\nTarget: node1.router1\n\n============== ======== ====== ================\n Interface      Exists   Up     In Bridge/Team\n============== ======== ====== ================\n team-ens3      True     True   N/A\n ens3           True     True   True\n ens4           True     True   True\n ha-fabric-br   True     True   N/A\n fabric         True     True   True\n ha-fabric      True     True   True\n\nTarget: node2.router1\n\n============== ======== ====== ================\n Interface      Exists   Up     In Bridge/Team\n============== ======== ====== ================\n team-ens3      True     True   N/A\n ens3           True     True   True\n ens4           True     True   True\n ha-fabric-br   True     True   N/A\n fabric         True     True   True\n ha-fabric      True     True   True\n\nRetrieved state data.\nCompleted in 4.12 seconds\nadmin@node1.conductor#\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If there is a ",(0,i.jsx)(n.code,{children:"False"})," value for any of these fields, further investigation should be undertaken as outlined below."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"show plugin state"})," command can also be issued with a ",(0,i.jsx)(n.code,{children:"detail"})," option. This option reports the output of the Linux commands ",(0,i.jsx)(n.code,{children:"brctl show"})," and ",(0,i.jsx)(n.code,{children:"teamdctl <team name> state"})," which provide additional details of the status of the bridge and team interfaces."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If only using one of the two options in this plugin, the output will only contain information for either the team or bridge."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"admin@node1.conductor# show plugins state router router1 detail 128T-ha-sync-redundancy\nFri 2021-09-03 20:17:21 UTC\nRetrieving state data...\n\n============================================================================\n node1.router1\n============================================================================\n   Fabric Status:\n bridge name    bridge id               STP enabled     interfaces\n ha-fabric-br           8000.500000020001       no              fabric\n                                                        ha-fabric\n\n   Team Status:\n     ports:\n       ens3:\n         ifinfo:\n           dev_addr:                           50:00:00:02:00:01\n           dev_addr_len:                       6\n           ifindex:                            3\n           ifname:                             ens3\n         link:\n           duplex:                             full\n           speed:                              1000\n           up:                                 True\n         link_watches:\n           list:\n             link_watch_0:\n               delay_down:                     0\n               delay_up:                       0\n               down_count:                     1\n               name:                           ethtool\n               up:                             True\n           up:                                 True\n       ens4:\n         ifinfo:\n           dev_addr:                           50:00:00:02:00:01\n           dev_addr_len:                       6\n           ifindex:                            4\n           ifname:                             ens4\n         link:\n           duplex:                             full\n           speed:                              1000\n           up:                                 True\n         link_watches:\n           list:\n             link_watch_0:\n               delay_down:                     0\n               delay_up:                       0\n               down_count:                     0\n               name:                           ethtool\n               up:                             True\n           up:                                 True\n     runner:\n       active_port:                            ens4\n     setup:\n       daemonized:                             False\n       dbus_enabled:                           True\n       debug_level:                            0\n       kernel_team_mode_name:                  activebackup\n       pid:                                    11070\n       pid_file:                               /var/run/teamd/team-ens3.pid\n       runner_name:                            activebackup\n       zmq_enabled:                            False\n     team_device:\n       ifinfo:\n         dev_addr:                             50:00:00:02:00:01\n         dev_addr_len:                         6\n         ifindex:                              11\n         ifname:                               team-ens3\n"})}),"\n",(0,i.jsx)(n.p,{children:"The sections below contain information on how the plugin orchestrates the setup of the team and bridge interfaces. This information can be used to troubleshoot proper operation of the plugin if these commands show issues with either the team or the bridge."}),"\n",(0,i.jsx)(n.h3,{id:"plugin-configuration",children:"Plugin Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["When configuration is created for this plugin, the conductor creates a configuration file with the appropriate information on each node of the router. This file is located in the directory ",(0,i.jsx)(n.code,{children:"/var/lib/128technology/plugins/ha-sync-redundancy/"})," and named ",(0,i.jsx)(n.code,{children:"config.yaml"}),". A copy of this file named ",(0,i.jsx)(n.code,{children:"config.yaml.current"})," can be found in this directory if the config was read correctly. This file is used to maintain the last state of the configuration to detect when changes are made so that interfaces no longer needed can be cleaned up. The contents of this file should look as follows (based on the configuration above)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'redundant_interface: "enp0s14f0"\nha_fabric_vlan: "1000"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"It can take several minutes after a commit from the conductor for this file to be generated."})}),"\n",(0,i.jsx)(n.h3,{id:"configuration-handling",children:"Configuration Handling"}),"\n",(0,i.jsxs)(n.p,{children:["Upon generation of the configuration file, a configuration handler is executed. This handler reads the configuration file, sets up the redundant team interface member, as well as setup a ",(0,i.jsx)(n.a,{href:"/docs/plugin_kni_namespace_scripts",children:"KNI namespace script"})," configuration file to handle the vlan interface and bridge creation. This script writes errors to the log file ",(0,i.jsx)(n.code,{children:"/var/log/128technology/plugins/ha-sync-redundancy.log"}),", providing details if issues arise. The config handler can also be executed manually by running ",(0,i.jsx)(n.code,{children:"/usr/bin/t128-ha-sync-redundancy-config-handler"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The contents of this file should look similar to what is shown below."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"vlan-interfaces:\n- name: fabric\n  base-intf: team-enp10s0f0\n  vlan-id: 2000\nbridges:\n- name: ha-fabric-br\n  kni-intf: ha-fabric\n  target-intf: fabric\n"})}),"\n",(0,i.jsx)(n.h3,{id:"kni-namespace-script",children:"KNI Namespace Script"}),"\n",(0,i.jsx)(n.p,{children:"This portion is only relevant to the configuration of an HA Fabric VLAN."}),"\n",(0,i.jsxs)(n.p,{children:["After the configuration has been handled a configuration file for the namespace scripts is generated at ",(0,i.jsx)(n.code,{children:"/var/lib/128technology/kni/host/ha-fabric.conf"}),". In addition, symbolic links should be created to the kni namespace scripts in the directory ",(0,i.jsx)(n.code,{children:"/etc/128technology/plugins/network-scripts/host/ha-fabric"})," as shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[root@lr202006003427 ha-fabric]# ll\ntotal 20\nlrwxrwxrwx 1 root root  69 Aug 30 20:26 init -> /etc/128technology/plugins/network-scripts/default/kni_namespace/init\n-rwxr-xr-x 1 root root 246 Aug 30 20:52 monitoring\nlrwxrwxrwx 1 root root  62 Aug 30 20:26 reinit -> /etc/128technology/plugins/network-scripts/host/ha-fabric/init\nlrwxrwxrwx 1 root root  73 Aug 30 20:26 shutdown -> /etc/128technology/plugins/network-scripts/default/kni_namespace/shutdown\nlrwxrwxrwx 1 root root  72 Aug 30 20:26 startup -> /etc/128technology/plugins/network-scripts/default/kni_namespace/startup\n[root@lr202006003427 ha-fabric]#\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If these scripts have errors, they will be shown in ",(0,i.jsx)(n.code,{children:"/var/log/128technology/highway.log"}),". On occasion, setting the log-level to ",(0,i.jsx)(n.code,{children:"debug"})," will provide additional details of how these scripts are run and errors they generate."]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},24855:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var i=t(74848),r=t(28453),o=t(13924),a=t(50171),s=t(20681);const c={title:"Adding Interfaces to an HA Team Interface",sidebar_label:"Adding Interfaces to an HA Team Interface"},d=void 0,l={id:"config_adding_interfaces_to_ha_team",title:"Adding Interfaces to an HA Team Interface",description:"The information below is a Juniper best practice for adding interfaces to the HA sync team interface, and is simplified by using the the HA Sync Redundancy Plugin. The HA Sync Redundancy plugin adds the ability to include an additional link in the team interface configured as described in Non-Forwarding HA Interfaces. Additionally, the plugin provides the ability to use the HA sync connection (single or dual-member) to send HA fabric traffic by creating a vlan sub-interface, and setting up a KNI interface in a bridge with this sub-interface.",source:"@site/docs/config_adding_interfaces_to_ha_team.mdx",sourceDirName:".",slug:"/config_adding_interfaces_to_ha_team",permalink:"/docs/config_adding_interfaces_to_ha_team",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1710504705,formattedLastUpdatedAt:"Mar 15, 2024",frontMatter:{title:"Adding Interfaces to an HA Team Interface",sidebar_label:"Adding Interfaces to an HA Team Interface"},sidebar:"docs",previous:{title:"Non-Forwarding HA Interfaces",permalink:"/docs/config_non_forwarding_ha_interfaces"},next:{title:"Transitioning a Conductor from Standalone to HA",permalink:"/docs/config_transition_standalone_to_ha"}},h={},u=[{value:"Configuring the Redundant HA Sync Interface",id:"configuring-the-redundant-ha-sync-interface",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function f(e){const n={a:"a",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The information below is a Juniper best practice for adding interfaces to the HA sync team interface, and is simplified by using the the ",(0,i.jsx)(n.a,{href:"/docs/plugin_ha_sync_redundancy",children:"HA Sync Redundancy Plugin"}),". The HA Sync Redundancy plugin adds the ability to include an additional link in the team interface configured as described in ",(0,i.jsx)(n.a,{href:"/docs/config_non_forwarding_ha_interfaces",children:"Non-Forwarding HA Interfaces"}),". Additionally, the plugin provides the ability to use the HA sync connection (single or dual-member) to send HA fabric traffic by creating a vlan sub-interface, and setting up a KNI interface in a bridge with this sub-interface."]}),"\n",(0,i.jsx)(n.h2,{id:"configuring-the-redundant-ha-sync-interface",children:"Configuring the Redundant HA Sync Interface"}),"\n",(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsx)(a.Ay,{}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(s.Ay,{})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);