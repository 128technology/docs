"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[4501],{57313:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=t(74848),r=t(28453);const o={title:"ICMP Reachability Detection Plugin",sidebar_label:"ICMP Reachability Detection"},a=void 0,s={id:"plugin_icmp_reachability_detection",title:"ICMP Reachability Detection Plugin",description:"The ICMP reachability detection plugin is designed to solve the problem where upstream next-hop failures cause the SSR to blackhole traffic for non-SVR services. When an SSR is provisioned to send traffic towards operationally valid next-hop(s), one of those next-hops might be incapable of delivering the packets to the final destination due to upstream failures beyond simple link or ARP failures causing the traffic being blackholed. The ICMP reachability detection plugin solves this problem by pinging a destination for reachability and allowing new sessions to failover to alternate paths when the primary path is unreachable. The plugin can also be used to perform a similar probe end-to-end to a server over SVR and trigger a failover in the same manner.",source:"@site/docs/plugin_icmp_reachability_detection.md",sourceDirName:".",slug:"/plugin_icmp_reachability_detection",permalink:"/docs/plugin_icmp_reachability_detection",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1711024380,formattedLastUpdatedAt:"Mar 21, 2024",frontMatter:{title:"ICMP Reachability Detection Plugin",sidebar_label:"ICMP Reachability Detection"},sidebar:"docs",previous:{title:"HTTP Probe Reachability Detection",permalink:"/docs/plugin_http_probe"},next:{title:"IPsec Client",permalink:"/docs/plugin_ipsec_client"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Plugin Behavior",id:"plugin-behavior",level:2},{value:"Sunny Day Scenario",id:"sunny-day-scenario",level:3},{value:"Primary Path Failure Scenario",id:"primary-path-failure-scenario",level:3},{value:"Primary Path Recovery Scenario",id:"primary-path-recovery-scenario",level:3},{value:"All Path Failures",id:"all-path-failures",level:3},{value:"Configuration",id:"configuration",level:2},{value:"ICMP Probe Enablement",id:"icmp-probe-enablement",level:3},{value:"Service Definition",id:"service-definition",level:3},{value:"Service Route Definition",id:"service-route-definition",level:3},{value:"Triggering Manual Failover Or Recovery",id:"triggering-manual-failover-or-recovery",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Checking the ICMP Probe and Agent Status",id:"checking-the-icmp-probe-and-agent-status",level:3},{value:"Service Status",id:"service-status",level:3},{value:"Plugin Config Handling",id:"plugin-config-handling",level:4},{value:"Status of the ICMP Pings Per Path",id:"status-of-the-icmp-pings-per-path",level:4},{value:"Status of the Path Selection Algorithm",id:"status-of-the-path-selection-algorithm",level:4},{value:"Appendix: Auto-Generated Configuration",id:"appendix-auto-generated-configuration",level:2},{value:"Release Notes",id:"release-notes",level:2},{value:"Release 3.0.5",id:"release-305",level:3},{value:"Issues Fixed",id:"issues-fixed",level:4},{value:"Release 3.0.3",id:"release-303",level:3},{value:"Issues Fixed",id:"issues-fixed-1",level:4},{value:"Release 3.0.1",id:"release-301",level:3},{value:"Issues Fixed",id:"issues-fixed-2",level:4},{value:"Release 2.0.1",id:"release-201",level:3},{value:"Issues Fixed",id:"issues-fixed-3",level:4},{value:"Release 3.0.0",id:"release-300",level:3},{value:"Issues Fixed",id:"issues-fixed-4",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The ICMP reachability detection plugin is designed to solve the problem where upstream next-hop failures cause the SSR to blackhole traffic for non-SVR services. When an SSR is provisioned to send traffic towards operationally valid next-hop(s), one of those next-hops might be incapable of delivering the packets to the final destination due to upstream failures beyond simple link or ARP failures causing the traffic being blackholed. The ICMP reachability detection plugin solves this problem by pinging a destination for reachability and allowing new sessions to failover to alternate paths when the primary path is unreachable. The plugin can also be used to perform a similar probe end-to-end to a server over SVR and trigger a failover in the same manner."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The instructions for installing and managing the plugin can be found ",(0,i.jsx)(n.a,{href:"/docs/plugin_intro#installation-and-management",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The plugin is designed to assist with failover for services that use a hunt based strategy, where traffic prefers one path over another during normal operations. (As opposed to a proportional distribution strategy which leverages multiple paths simultaneously.). If the router has two wan interfaces - broadband and LTE, the plugin can be set up to use broadband as the primary path and LTE as the secondary path. The plugin works by performing a continuous ICMP ping for the configured service(s) over each of the specified paths. A unique ",(0,i.jsx)(n.a,{href:"/docs/concepts_appid#appid-using-modules",children:"application-id module"})," based service is generated to represent each of the potential paths. When the primary path is reachable, the corresponding primary path service will be activated to route the sessions. In the event of the primary path failure, the secondary path service will be activated and all subsequent sessions will then be routed using the new service."]}),"\n",(0,i.jsx)(n.h2,{id:"plugin-behavior",children:"Plugin Behavior"}),"\n",(0,i.jsxs)(n.p,{children:["At the core of the plugin is the ",(0,i.jsx)(n.code,{children:"ping-monitor"})," utility which will be used to do a continuous ping to the destination over all available paths. The ",(0,i.jsx)(n.code,{children:"icmp-probe-agent"})," will be notified of any path status changes by the ",(0,i.jsx)(n.code,{children:"ping-monitor"})," to help make decisions on how to update the application module configuration. The ",(0,i.jsx)(n.code,{children:"service-route > icmp-probe > vector-priority"})," will be used to sort the paths in logical order."]}),"\n",(0,i.jsxs)(n.p,{children:["The application module JSON will be set up based on the ",(0,i.jsx)(n.code,{children:"service > icmp-probe"})," configuration to learn the address and transport. For the example above, the JSON for the primary path will look like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "module-name": "icmp-probe-internet",\n  "duration": 86400,\n  "continue-file-watch": true,\n  "services": {\n    "icmp-internet-broadband": [\n      {\n        "ip-prefix": "0.0.0.0/0"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sunny-day-scenario",children:"Sunny Day Scenario"}),"\n",(0,i.jsxs)(n.p,{children:["The diagram below shows two available paths - broadband and LTE. In a sunny day scenario, the plugin will perform continuous pings to the destination and report the status as up. In this case, the configured ",(0,i.jsx)(n.code,{children:"service > icmp-probe > address"})," will be configured in the application module for broadband service. This in turn will trigger the SSR to install the FIB entries for the ",(0,i.jsx)(n.code,{children:"internet-broadband"})," service and all incoming sessions will be routed to the only available path for that service called ",(0,i.jsx)(n.code,{children:"rte-internet-broadband"}),". This is essentially why the plugin can only operate in hunt mode."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Sunny Day Scenario",src:t(48209).A+"",width:"1283",height:"665"})}),"\n",(0,i.jsx)(n.h3,{id:"primary-path-failure-scenario",children:"Primary Path Failure Scenario"}),"\n",(0,i.jsxs)(n.p,{children:["The diagram below depicts the failure to ping the server over the broadband interface. This failure would typically cause the traffic to be blackholed as the upstream ISP gateway is still reachable via ARP. The ICMP probe plugin, however, will detect the server ICMP failure and will in turn update the application module JSON for the LTE service with the configured ",(0,i.jsx)(n.code,{children:"service > icmp-probe > address"}),". As a result of this, the SSR will remove the FIB entries for the broadband service and replace it with FIB entries for the internet-lte service. All subsequent sessions will then be routed using the only available rte-internet-lte service route."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Primary Path Failure",src:t(55292).A+"",width:"1283",height:"665"})}),"\n",(0,i.jsx)(n.h3,{id:"primary-path-recovery-scenario",children:"Primary Path Recovery Scenario"}),"\n",(0,i.jsxs)(n.p,{children:["As soon as the primary path (broadband in the above example) is reachable, the ICMP probe process will update application module JSON with the ",(0,i.jsx)(n.code,{children:"internet-broadband"})," service. This will cause the subsequent sessions to migrate back to the primary broadband interface. When the primary path comes up the system will wait ",(0,i.jsx)(n.code,{children:"service > icmp-probe > hold-down"})," seconds before bringing it in service. This will act as a damper in case the path is flapping too frequently."]}),"\n",(0,i.jsx)(n.h3,{id:"all-path-failures",children:"All Path Failures"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"service-policy > best-effort"})," flag will determine the behavior of the ",(0,i.jsx)(n.code,{children:"icmp-probe-agent"})," in the event where all paths are down. When ",(0,i.jsx)(n.code,{children:"best-effort > false"}),", the agent will update the application module with a ",(0,i.jsx)(n.code,{children:"dummy"})," service name which would cause all FIB entries associated with the service to be withdrawn and the client connections to be rejected with an ICMP unreachable. When ",(0,i.jsx)(n.code,{children:"best-effort > true"}),", the agent will update the JSON with the primary path as defined by the vector-priority."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["For the plugin to operate we need to identify all the paths that can be used to reach the service. This is typically achieved by configuring a ",(0,i.jsx)(n.code,{children:"service-route"})," on the router. The plugin configuration will leverage application-names and service-route to generate other relevant configurations."]}),"\n",(0,i.jsx)(n.h3,{id:"icmp-probe-enablement",children:"ICMP Probe Enablement"}),"\n",(0,i.jsx)(n.p,{children:"The ICMP probe plugin is enabled on the target router as shown in the configuration excerpt below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"admin@node1.conductor1# show config running authority router router1 icmp-probe\n\nconfig\n\n    authority\n\n        router  router1\n            name        router1\n\n            icmp-probe\n                enabled  true\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Properties"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enabled"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"default: true"}),(0,i.jsx)(n.td,{children:"Control whether the plugin is to be run on the router"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"plugin-network"}),(0,i.jsx)(n.td,{children:"ip-prefix"}),(0,i.jsx)(n.td,{children:"default: 169.254.142.0/28"}),(0,i.jsx)(n.td,{children:"This controls the IP address for the internal network for carrying the ICMP ping packets. This should only be changed if there is a conflict with another IP block in use on the same host system."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"service-definition",children:"Service Definition"}),"\n",(0,i.jsxs)(n.p,{children:["By setting the ",(0,i.jsx)(n.code,{children:"service > application-name > icmp-probe"})," a ",(0,i.jsx)(n.code,{children:"service"})," can be designated as a candidate for performing ICMP probe based monitoring. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"admin@node1.conductor1# show config running authority service internet\n\nconfig\n\n    authority\n\n        service  internet\n            name              internet\n            application-name  icmp-probe\n\n            access-policy     lan\n                source  lan\n            exit\n\n            access-policy     _internal_\n                source  _internal_\n            exit\n\n            icmp-probe\n                address    0.0.0.0/0\n                hold-down  6\n            exit\n        exit\n    exit\nexit\n\n"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Properties"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"address"}),(0,i.jsx)(n.td,{children:"ip-prefix"}),(0,i.jsx)(n.td,{children:"mandatory"}),(0,i.jsxs)(n.td,{children:["The list of addresses to be associated with the service. These are the same addresses that a user would typically configure as the ",(0,i.jsx)(n.code,{children:"service > address"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"hold-down"}),(0,i.jsx)(n.td,{children:"seconds"}),(0,i.jsx)(n.td,{children:"default: 5"}),(0,i.jsx)(n.td,{children:"The amount of time a path must remain up before considering it as reachable after detecting a failure."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"The following considerations should be made for defining the service properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"service > name"})," is used to auto-generate services of the form ",(0,i.jsx)(n.code,{children:"{service-name}-{path-name}"}),". If the combined names are larger than 255 characters it will result in validation errors."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"service > service-policy > lb-strategy"})," is assumed to be ",(0,i.jsx)(n.code,{children:"hunt"})," and is recommended to be set to that for clarity. Even if the policy is set to ",(0,i.jsx)(n.code,{children:"proportional"}),", the plugin creates unique services per path so the end behavior will still be ",(0,i.jsx)(n.code,{children:"hunt"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"All the other service configuration such as access-policy, service-policy, etc., will be copied into generated services for application identification."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["When enabling ICMP probe for SVR paths any auto-generated ",(0,i.jsx)(n.code,{children:"peer"})," or ",(0,i.jsx)(n.code,{children:"next-peer"})," service-route should be set to ",(0,i.jsx)(n.code,{children:"generated > false"})," before adding the ICMP probe configuration."]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"service > transport"})," can be configured to restrict the service to specific protocol and port ranges. The generated service will copy that configuration from the ",(0,i.jsx)(n.code,{children:"icmp-probe"})," service."]})}),"\n",(0,i.jsx)(n.h3,{id:"service-route-definition",children:"Service Route Definition"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"service-route"})," configuration is used to identify unique paths for a given service along with configuring the rest of the ICMP probe settings. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"admin@node1.conductor1# show config running authority router router1 service-route internet-orig-broadband\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  internet-bb-rte\n                name          internet-bb-rte\n                service-name  internet\n\n                next-hop      node1 broadband-intf\n                    node-name  node1\n                    interface  broadband-intf\n                exit\n\n                icmp-probe\n                    path-name        broadband\n                    vector-priority  10\n                    probe-address    8.8.8.8\n                    probe-interval   10\n                    number-of-retries 4\n                    retry-interval    1\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 service-route internet-orig-lte\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  internet-lte-rte\n                name          internet-lte-rte\n                service-name  internet\n\n                next-hop      node1 lte-intf\n                    node-name   node1\n                    interface   lte-intf\n                exit\n\n                icmp-probe\n                    path-name        lte\n                    vector-priority  20\n                    probe-address    9.9.9.9\n                    retry-interval   1\n                exit\n            exit\n        exit\n    exit\nexit\n\n"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Properties"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"path-name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{children:"The name to uniquely identify a single path."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"vector-priority"}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"required"}),(0,i.jsx)(n.td,{children:"Priority value for the path. Lower vector-priority values take precedence for load balancing upon path failure."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"probe-address"}),(0,i.jsx)(n.td,{children:"ip-address"}),(0,i.jsx)(n.td,{children:"optional"}),(0,i.jsx)(n.td,{children:"Address to ping for determining path health. When a service is defined with a single /32 address, the service > address will be used as the ICMP destination"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"probe-interval"}),(0,i.jsx)(n.td,{children:"seconds"}),(0,i.jsx)(n.td,{children:"default: 10"}),(0,i.jsxs)(n.td,{children:["Duration of how often to perform an ICMP probe test to the ",(0,i.jsx)(n.code,{children:"probe-address"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"number-of-retries"}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:"default: 5"}),(0,i.jsx)(n.td,{children:"Number of consecutive missed ICMP ping responses from the destination within the retry-interval before deciding that the path is unusable."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"retry-interval"}),(0,i.jsx)(n.td,{children:"seconds"}),(0,i.jsx)(n.td,{children:"default: 5"}),(0,i.jsx)(n.td,{children:"Duration within which to reach the destination. Each attempt will be made in duration / number-of-retries interval"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"The following considerations should be made while configuring the service-route for the plugin:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each unique path on the router should correspond to a unique value for ",(0,i.jsx)(n.code,{children:"service route > next-hop > icmp-probe > path-name"}),". For example, if the router has two interfaces broadband and LTE, each would be represented with a unique ",(0,i.jsx)(n.code,{children:"path-name"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Each ",(0,i.jsx)(n.code,{children:"service route > next-hop > icmp-probe > path-name"})," should represent a single path on the router. This will be used for generating KNIs, tenants and other configurations required to make the implementation work. Failure to do so will result in the auto config generation to fail."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"service route > next-hop > icmp-probe > vector-priority"})," should reflect the order in which the paths are to be preferred for routing"]}),"\n",(0,i.jsxs)(n.li,{children:["When the ",(0,i.jsx)(n.code,{children:"icmp-probe > probe-address"})," is not configured, the service should have a single /32 address for the probe to work. Failure to do so will result in the auto config generation to fail."]}),"\n",(0,i.jsxs)(n.li,{children:["When the service covers more than a single address (such as 0.0.0.0/0), the ",(0,i.jsx)(n.code,{children:"icmp-probe > probe-address"})," effectively ties the reachability fate of the entire service and path to that single server. This could cause some false positives in reporting the path as down if the upstream server is facing some issues."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The plugin can support any number of paths to be monitored for activity. Each path must have a unique vector-priority associated with it to determine the preference order."})}),"\n",(0,i.jsx)(n.h2,{id:"triggering-manual-failover-or-recovery",children:"Triggering Manual Failover Or Recovery"}),"\n",(0,i.jsxs)(n.p,{children:["In some situations, it might be desirable to forcefully trigger a failover or recovery for an otherwise healthy path. In the above example, the primary ",(0,i.jsx)(n.code,{children:"broadband"})," can be brought down by doing the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stop the ping-monitor service for the path instance"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# curl --unix-socket /var/run/128technology/plugins/icmp-probe-agent.sock http://localhost/path-info\n{"internet": {"current-path": "broadband", "paths": {"broadband": "up", "lte": "up"}}}\n\n# systemctl stop ping-monitor-namespace@internet-broadband.service\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Edit the ",(0,i.jsx)(n.code,{children:"/var/run/128technology/plugins/ping_monitor/{service}-{path}.state"})," and set the ",(0,i.jsx)(n.code,{children:"STATUS=down"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# echo "STATUS=down" >> /var/run/128technology/plugins/ping_monitor/internet-broadband.state\n\n# curl --unix-socket /var/run/128technology/plugins/icmp-probe-agent.sock http://localhost/path-info\n{"internet": {"current-path": "lte", "paths": {"broadband": "down", "lte": "up"}}}\n\n# systemctl status 128T-icmp-probe-agent.service -l\n\u25cf 128T-icmp-probe-agent.service - ICMP probe agent\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-probe-agent.service; enabled; vendor preset: disabled)\n   Active: active (running) since Thu 2020-07-30 04:56:07 UTC; 18min ago\n Main PID: 32226 (python3.6)\n    Tasks: 18\n   Memory: 22.8M\n   CGroup: /system.slice/128T-icmp-probe-agent.service\n           \u2514\u250032226 python3.6 /usr/lib/128T-icmp-reachability-detection//par/icmpProbeAgent.par -l DEBUG\n\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.app_id - Processing: 0.0.0.0/0 None\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: t128.plugin.lib.app_id.builder - Updating /var/run/128technology/application-modules/icmp-probe-internet.json with\n                                                           {\n                                                             "module-name": "icmp-probe-internet",\n                                                             "duration": 86400,\n                                                             "continue-file-watch": true,\n                                                             "services": {\n                                                               "icmp-internet-lte": [\n                                                                 {\n                                                                   "ip-prefix": "0.0.0.0/0"\n                                                                 }\n                                                               ]\n                                                             }\n                                                           }\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.state_machine - Advancing from State.PathUp->State.PathUp\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: aiohttp.access -  [30/Jul/2020:05:14:42 +0000] "POST /ping-status HTTP/1.1" 200 180 "-" "curl/7.29.0"\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - Handling status request\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - internet received {\'current-path\': \'lte\', \'paths\': {\'broadband\': \'down\', \'lte\': \'up\'}}\nJul 30 05:14:42 t102-dut2.openstacklocal python3.6[32226]: aiohttp.access -  [30/Jul/2020:05:14:42 +0000] "GET /path-info HTTP/1.1" 200 239 "-" "curl/7.29.0"\nJul 30 05:14:43 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - Handling status request\nJul 30 05:14:43 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - internet received {\'current-path\': \'lte\', \'paths\': {\'broadband\': \'down\', \'lte\': \'up\'}}\nJul 30 05:14:43 t102-dut2.openstacklocal python3.6[32226]: aiohttp.access -  [30/Jul/2020:05:14:43 +0000] "GET /path-info HTTP/1.1" 200 239 "-" "curl/7.29.0"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["The same steps can be used to bring ",(0,i.jsx)(n.code,{children:"up"})," a path that is currently ",(0,i.jsx)(n.code,{children:"down"})," by changing ",(0,i.jsx)(n.code,{children:"STATUS=up"})," in the steps above."]})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"checking-the-icmp-probe-and-agent-status",children:"Checking the ICMP Probe and Agent Status"}),"\n",(0,i.jsx)(n.p,{children:"The status of the ICMP probe for the various paths can be discovered by querying the path based KNI interfaces as shown below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"admin@node1.conductor1# show device-interface router router1 name lte\nThu 2020-07-30 04:50:21 UTC\n\n============================================\n node1.router1:lte\n============================================\n Type:                host\n Forwarding:          true\n Mode:                host\n MAC Address:         6a:5e:62:52:e8:d0\n\n Admin Status:        up\n Operational Status:  up\n Redundancy Status:   non-redundant\n Speed:               1000\n\n in-octets:                     6053488\n in-unicast-pkts:                100882\n in-errors:                           0\n out-octets:                    4328304\n out-unicast-pkts:                92378\n out-errors:                          0\n\n ICMP:\n   Agent:\n     internet:\n       current-path:  broadband\n       paths:\n         broadband: up\n         lte:       up\n   Probe:\n       icmp-probe-internet-broadband:\n         attempts:    733\n         elapsed:     0.01019028015434742\n         last_attempt: 2020-07-30 18:39:31.779657\n         status:      up\n\nCompleted in 0.07 seconds\nadmin@node1.conductor1#\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"icmp-probe-agent"})," determines the state of the current path selection and reports its status via the path KNIs as seen in the example above. The result of the path selection should also be reflected via application-id module changes and can be viewed as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"admin@node1.conductor1# show application names router router1\nThu 2020-07-30 05:09:39 UTC\n\nNode: node1.router1\n\n========================= =============== ================ ===================== =====================\n Application Name          Session Count   Ip Tuple Count   Date Discovered       Last Updated\n========================= =============== ================ ===================== =====================\n...\n icmp-internet-broadband                   0                1   2020-07-30 05:09:15   2020-07-30 05:09:15\n...\nCompleted in 0.11 seconds\nadmin@node1.conductor1#\n"})}),"\n",(0,i.jsx)(n.h3,{id:"service-status",children:"Service Status"}),"\n",(0,i.jsxs)(n.p,{children:["The plugin relies various ",(0,i.jsx)(n.code,{children:"systemd"})," services to work in concert to provide a robust solution."]}),"\n",(0,i.jsx)(n.h4,{id:"plugin-config-handling",children:"Plugin Config Handling"}),"\n",(0,i.jsx)(n.p,{children:"The following services are triggered for any changes made to the plugin configuration on the conductor."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# systemctl status 128T-handle-icmp-reachability-detection-config.path\n\u25cf 128T-handle-icmp-reachability-detection-config.path\n   Loaded: loaded (/usr/lib/systemd/system/128T-handle-icmp-reachability-detection-config.path; enabled; vendor preset: disabled)\n   Active: active (waiting) since Mon 2020-06-29 22:17:07 UTC; 4 weeks 2 days ago\n\nJun 29 22:17:07 t102-dut2.openstacklocal systemd[1]: Stopped 128T-handle-icmp-reachability-detection-config.path.\nJun 29 22:17:07 t102-dut2.openstacklocal systemd[1]: Stopping 128T-handle-icmp-reachability-detection-config.path.\nJun 29 22:17:07 t102-dut2.openstacklocal systemd[1]: Started 128T-handle-icmp-reachability-detection-config.path.\n\n# systemctl status 128T-handle-icmp-reachability-detection-config.service\n\u25cf 128T-handle-icmp-reachability-detection-config.service - Config Handler for 128T icmp reachability detection plugin\n   Loaded: loaded (/usr/lib/systemd/system/128T-handle-icmp-reachability-detection-config.service; static; vendor preset: disabled)\n   Active: inactive (dead) since Sat 2020-07-25 06:02:34 UTC; 4 days ago\n Main PID: 19709 (code=exited, status=0/SUCCESS)\n\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: plugins.icmp_reachability_detection.router.lib.config - Generating KNI config for internet and lte\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: plugins.icmp_reachability_detection.router.lib.config - Generating application-id script for service internet\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Stopping the icmp-probe-agent service\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Stopping services ping-monitor-namespace@internet-broadband.service 128T-icmp-path-change-notifier@internet-broadband.path\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Stopping services ping-monitor-namespace@internet-lte.service 128T-icmp-path-change-notifier@internet-lte.path\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Restarting the icmp-probe-agent service\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Starting services ping-monitor-namespace@internet-broadband.service 128T-icmp-path-change-notifier@internet-broadband.path\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Starting services ping-monitor-namespace@internet-lte.service 128T-icmp-path-change-notifier@internet-lte.path\nJul 25 06:02:34 t102-dut2.openstacklocal python3.6[19709]: __main__ - Done!!\nJul 25 06:02:34 t102-dut2.openstacklocal systemd[1]: Started Config Handler for 128T icmp reachability detection plugin.\n\n"})}),"\n",(0,i.jsx)(n.h4,{id:"status-of-the-icmp-pings-per-path",children:"Status of the ICMP Pings Per Path"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ping-monitor"})," utility is used to perform a continuous ping and is run as a template service. The status for each of the path instances can be checked as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# systemctl status ping-monitor-namespace@internet-broadband.service\n\u25cf ping-monitor-namespace@internet-broadband.service - Ping Monitor for destination internet/broadband within network namespace\n   Loaded: loaded (/usr/lib/systemd/system/ping-monitor-namespace@.service; disabled; vendor preset: disabled)\n   Active: active (running) since Thu 2020-07-30 04:56:07 UTC; 1min 58s ago\n Main PID: 32229 (python3.6)\n   CGroup: /system.slice/system-ping\\x2dmonitor\\x2dnamespace.slice/ping-monitor-namespace@internet-broadband.service\n           \u2514\u250032229 python3.6 /usr/lib/ping-monitor//par/ping_monitor.par --path-name=internet-broadband --address=8.8.8.8 --timeout=5 --num-tries=5 --interval=10 --socket-path=/var/run/128technology/icmp-probe-internet-broadband.sock --log-level=\n\nJul 30 04:57:17 t102-dut2.openstacklocal ip[32229]: - - [30/Jul/2020 04:57:17] "GET / HTTP/1.1" 200 -\nJul 30 04:57:18 t102-dut2.openstacklocal python3.6[32229]: apps.ping_monitor.ping - Got [Errno 101] Network is unreachable while pinging 8.8.8.8\nJul 30 04:57:27 t102-dut2.openstacklocal ip[32229]: - - [30/Jul/2020 04:57:27] "GET / HTTP/1.1" 200 -\nJul 30 04:57:28 t102-dut2.openstacklocal python3.6[32229]: apps.ping_monitor.ping - Got [Errno 101] Network is unreachable while pinging 8.8.8.8\nJul 30 04:57:37 t102-dut2.openstacklocal ip[32229]: - - [30/Jul/2020 04:57:37] "GET / HTTP/1.1" 200 -\nJul 30 04:57:38 t102-dut2.openstacklocal python3.6[32229]: apps.ping_monitor.ping - Got [Errno 101] Network is unreachable while pinging 8.8.8.8\nJul 30 04:57:48 t102-dut2.openstacklocal python3.6[32229]: apps.ping_monitor.ping - Got [Errno 101] Network is unreachable while pinging 8.8.8.8\nJul 30 04:57:49 t102-dut2.openstacklocal ip[32229]: - - [30/Jul/2020 04:57:49] "GET / HTTP/1.1" 200 -\nJul 30 04:57:58 t102-dut2.openstacklocal python3.6[32229]: apps.ping_monitor.ping - Got [Errno 101] Network is unreachable while pinging 8.8.8.8\nJul 30 04:58:00 t102-dut2.openstacklocal ip[32229]: - - [30/Jul/2020 04:58:00] "GET / HTTP/1.1" 200 -\n\n# systemctl status ping-monitor-namespace@internet-lte.service\n\u25cf ping-monitor-namespace@internet-lte.service - Ping Monitor for destination internet/lte within network namespace\n   Loaded: loaded (/usr/lib/systemd/system/ping-monitor-namespace@.service; disabled; vendor preset: disabled)\n   Active: active (running) since Thu 2020-07-30 04:56:08 UTC; 2min 40s ago\n Main PID: 32232 (python3.6)\n   CGroup: /system.slice/system-ping\\x2dmonitor\\x2dnamespace.slice/ping-monitor-namespace@internet-lte.service\n           \u2514\u250032232 python3.6 /usr/lib/ping-monitor//par/ping_monitor.par --path-name=internet-lte --address=9.9.9.9 --timeout=1 --num-tries=5 --interval=10 --socket-path=/var/run/128technology/icmp-probe-internet-lte.sock --log-level=\n\nJul 30 04:57:09 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:57:09] "GET / HTTP/1.1" 200 -\nJul 30 04:57:19 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:57:19] "GET / HTTP/1.1" 200 -\nJul 30 04:57:29 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:57:29] "GET / HTTP/1.1" 200 -\nJul 30 04:57:40 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:57:40] "GET / HTTP/1.1" 200 -\nJul 30 04:57:51 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:57:51] "GET / HTTP/1.1" 200 -\nJul 30 04:58:02 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:58:02] "GET / HTTP/1.1" 200 -\nJul 30 04:58:13 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:58:13] "GET / HTTP/1.1" 200 -\nJul 30 04:58:23 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:58:23] "GET / HTTP/1.1" 200 -\nJul 30 04:58:34 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:58:34] "GET / HTTP/1.1" 200 -\nJul 30 04:58:44 t102-dut2.openstacklocal ip[32232]: - - [30/Jul/2020 04:58:44] "GET / HTTP/1.1" 200 -\n\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Additional debugging can be turned on for the ",(0,i.jsx)(n.code,{children:"ping-monitor"})," instance by setting ",(0,i.jsx)(n.code,{children:"LOG_LEVEL=DEBUG"})," in ",(0,i.jsx)(n.code,{children:"/var/run/128technology/plugins/ping_monitor/{service}-{path}.conf"})," config file"]})}),"\n",(0,i.jsx)(n.h4,{id:"status-of-the-path-selection-algorithm",children:"Status of the Path Selection Algorithm"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"icmp-probe-agent"})," takes its inputs from the ",(0,i.jsx)(n.code,{children:"ping-monitor"})," services by watching on path updates for those instances. In addition it determines the current path selection and udpates the ",(0,i.jsx)(n.code,{children:"application-id"})," modules accordingly. The following service status can be used for troubleshooting:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# systemctl status 128T-icmp-path-change-notifier@internet-broadband.path\n\u25cf 128T-icmp-path-change-notifier@internet-broadband.path - Path watcher for ping-monitor status updates on internet-broadband\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-path-change-notifier@.path; disabled; vendor preset: disabled)\n   Active: active (waiting) since Thu 2020-07-30 04:56:07 UTC; 6min ago\n\nJul 30 04:56:07 t102-dut2.openstacklocal systemd[1]: Started Path watcher for ping-monitor status updates on internet-broadband.\n\n# systemctl status 128T-icmp-path-change-notifier@internet-broadband.service\n\u25cf 128T-icmp-path-change-notifier@internet-broadband.service - Ping Monitor for destination internet-broadband\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-path-change-notifier@.service; static; vendor preset: disabled)\n   Active: inactive (dead) since Thu 2020-07-30 04:56:09 UTC; 6min ago\n  Process: 32271 ExecStop=/usr/bin/curl --unix-socket /var/run/128technology/plugins/icmp-probe-agent.sock http://localhost/path-info (code=exited, status=0/SUCCESS)\n  Process: 32248 ExecStart=/usr/libexec/128T-icmp-status-update.sh ${NAME} ${STATUS} ${MAX_RETRIES} (code=exited, status=0/SUCCESS)\n  Process: 32246 ExecStartPre=/usr/bin/echo Executing path update for ${NAME} with ${STATUS} (code=exited, status=0/SUCCESS)\n Main PID: 32248 (code=exited, status=0/SUCCESS)\n\nJul 30 04:56:08 t102-dut2.openstacklocal systemd[1]: Starting Ping Monitor for destination internet-broadband...\nJul 30 04:56:08 t102-dut2.openstacklocal echo[32246]: Executing path update for internet-broadband with down\nJul 30 04:56:08 t102-dut2.openstacklocal 128T-icmp-status-update.sh[32248]: failed to update icmp-probe-agent 7, retrying in a second\nJul 30 04:56:09 t102-dut2.openstacklocal 128T-icmp-status-update.sh[32248]: Finished updating the icmp-probe-agent\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32271]: % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32271]: Dload  Upload   Total   Spent    Left  Speed\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32271]: [155B blob data]\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32271]: {"internet": {"current-path": "lte", "paths": {"broadband": "down", "lte": "up"}}}\nJul 30 04:56:09 t102-dut2.openstacklocal systemd[1]: Started Ping Monitor for destination internet-broadband.\n\n# systemctl status 128T-icmp-path-change-notifier@internet-lte.path\n\u25cf 128T-icmp-path-change-notifier@internet-lte.path - Path watcher for ping-monitor status updates on internet-lte\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-path-change-notifier@.path; disabled; vendor preset: disabled)\n   Active: active (waiting) since Thu 2020-07-30 04:56:08 UTC; 6min ago\n\nJul 30 04:56:08 t102-dut2.openstacklocal systemd[1]: Started Path watcher for ping-monitor status updates on internet-lte.\n\n# systemctl status 128T-icmp-path-change-notifier@internet-lte.service\n\u25cf 128T-icmp-path-change-notifier@internet-lte.service - Ping Monitor for destination internet-lte\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-path-change-notifier@.service; static; vendor preset: disabled)\n   Active: inactive (dead) since Thu 2020-07-30 04:56:09 UTC; 6min ago\n  Process: 32262 ExecStop=/usr/bin/curl --unix-socket /var/run/128technology/plugins/icmp-probe-agent.sock http://localhost/path-info (code=exited, status=0/SUCCESS)\n  Process: 32238 ExecStart=/usr/libexec/128T-icmp-status-update.sh ${NAME} ${STATUS} ${MAX_RETRIES} (code=exited, status=0/SUCCESS)\n  Process: 32237 ExecStartPre=/usr/bin/echo Executing path update for ${NAME} with ${STATUS} (code=exited, status=0/SUCCESS)\n Main PID: 32238 (code=exited, status=0/SUCCESS)\n\nJul 30 04:56:08 t102-dut2.openstacklocal systemd[1]: Starting Ping Monitor for destination internet-lte...\nJul 30 04:56:08 t102-dut2.openstacklocal echo[32237]: Executing path update for internet-lte with up\nJul 30 04:56:08 t102-dut2.openstacklocal 128T-icmp-status-update.sh[32238]: failed to update icmp-probe-agent 7, retrying in a second\nJul 30 04:56:09 t102-dut2.openstacklocal 128T-icmp-status-update.sh[32238]: Finished updating the icmp-probe-agent\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32262]: % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32262]: Dload  Upload   Total   Spent    Left  Speed\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32262]: [155B blob data]\nJul 30 04:56:09 t102-dut2.openstacklocal systemd[1]: Started Ping Monitor for destination internet-lte.\nJul 30 04:56:09 t102-dut2.openstacklocal curl[32262]: {"internet": {"current-path": "broadband", "paths": {"broadband": "down", "lte": "up"}}}\n\n# systemctl status 128T-icmp-probe-agent.service  -l\n\u25cf 128T-icmp-probe-agent.service - ICMP probe agent\n   Loaded: loaded (/usr/lib/systemd/system/128T-icmp-probe-agent.service; enabled; vendor preset: disabled)\n   Active: active (running) since Thu 2020-07-30 04:56:07 UTC; 7min ago\n Main PID: 32226 (python3.6)\n    Tasks: 5\n   Memory: 22.2M\n   CGroup: /system.slice/128T-icmp-probe-agent.service\n           \u2514\u250032226 python3.6 /usr/lib/128T-icmp-reachability-detection//par/icmpProbeAgent.par -l DEBUG\n\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.state_machine - Updating path-info PathUp for path lte for service internet\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.app_id - Service DotMap(icmpProbe=DotMap(address=[\'0.0.0.0/0\'], holdDown=6), name=\'internet\', transport=DotMap())\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.app_id - Creating service for internet, icmp-internet-lte, [\'0.0.0.0/0\'], DotMap()\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.app_id - Processing: 0.0.0.0/0 None\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: t128.plugin.lib.app_id.builder - Updating /var/run/128technology/application-modules/icmp-probe-internet.json with\n                                                           {\n                                                             "module-name": "icmp-probe-internet",\n                                                             "duration": 86400,\n                                                             "continue-file-watch": true,\n                                                             "services": {\n                                                               "icmp-internet-lte": [\n                                                                 {\n                                                                   "ip-prefix": "0.0.0.0/0"\n                                                                 }\n                                                               ]\n                                                             }\n                                                           }\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.state_machine - Advancing from State.HoldDown->State.PathUp\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: aiohttp.access -  [30/Jul/2020:04:56:09 +0000] "POST /ping-status HTTP/1.1" 200 180 "-" "curl/7.29.0"\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - Handling status request\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: plugins.icmp_reachability_detection.router.icmp_probe_agent.agent - internet received {\'current-path\': \'lte\', \'paths\': {\'broadband\': \'down\', \'lte\': \'up\'}}\nJul 30 04:56:09 t102-dut2.openstacklocal python3.6[32226]: aiohttp.access -  [30/Jul/2020:04:56:09 +0000] "GET /path-info HTTP/1.1" 200 239 "-" "curl/7.29.0"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Additional debugging can be turned on for the ",(0,i.jsx)(n.code,{children:"icmp-probe-agent"})," by passing the ",(0,i.jsx)(n.code,{children:"-l DEBUG"})," to the ",(0,i.jsx)(n.code,{children:"/usr/lib/systemd/system/128T-icmp-probe-agent.service"})," on the ",(0,i.jsx)(n.code,{children:"ExecStart"})," line"]})}),"\n",(0,i.jsx)(n.h2,{id:"appendix-auto-generated-configuration",children:"Appendix: Auto-Generated Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"service > icmp-probe"})," and ",(0,i.jsx)(n.code,{children:"service-route > icmp-probe"})," configuration will be used to generate other functional configuration elements as needed. At a high level, configuration needs to be generated to do the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["ICMP reachability detection","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"KNI for each of the paths to be used for the service(s)"}),"\n",(0,i.jsx)(n.li,{children:"Service and service-routes to enable ICMP over those paths"}),"\n",(0,i.jsx)(n.li,{children:"Tenants to uniquely identify each of the generated KNIs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Per path app-id services","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An application-id service with unique application name for each of the path for the service"}),"\n",(0,i.jsx)(n.li,{children:"Service routes to route sessions over appropriate paths"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The above example configuration will result in the following auto-generated configuration for this plugin"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:'admin@node1.conductor1# show config running authority tenant broadband\n\nconfig\n\n    authority\n\n        tenant  broadband\n            name         broadband\n            description  "Auto-generated tenant for icmp-reachability-detection"\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority tenant lte\n\nconfig\n\n    authority\n\n        tenant  lte\n            name         lte\n            description  "Auto-generated tenant for icmp-reachability-detection"\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority service broadband-icmp\n\nconfig\n\n    authority\n\n        service  broadband-icmp\n            name                  broadband-icmp\n\n            transport             icmp\n                protocol  icmp\n            exit\n            address               8.8.8.8\n\n            access-policy         broadband\n                source      broadband\n                permission  allow\n            exit\n            share-service-routes  false\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority service lte-icmp\n\nconfig\n\n    authority\n\n        service  lte-icmp\n            name                  lte-icmp\n\n            transport             icmp\n                protocol  icmp\n            exit\n            address               9.9.9.9\n\n            access-policy         lte\n                source      lte\n                permission  allow\n            exit\n            share-service-routes  false\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority service internet-broadband\n\nconfig\n\n    authority\n\n        service  internet-broadband\n            name              internet-broadband\n            application-name  icmp-internet-broadband\n\n            access-policy     _internal_\n                source  _internal_\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority service internet-lte\n\nconfig\n\n    authority\n\n        service  internet-lte\n            name              internet-lte\n            application-name  icmp-internet-lte\n\n            access-policy     _internal_\n                source  _internal_\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 node node1 device-interface broadband\n\nconfig\n\n    authority\n\n        router  router1\n            name  router1\n\n            node  node1\n                name              node1\n\n                device-interface  broadband\n                    name               broadband\n                    description        "Auto generated host KNI interface for internet"\n                    type               host\n                    network-namespace  broadband\n\n                    network-interface  broadband-intf\n                        name       broadband-intf\n                        global-id  3\n                        type       external\n                        tenant     broadband\n\n                        address    169.254.142.2\n                            ip-address     169.254.142.2\n                            prefix-length  31\n                            gateway        169.254.142.3\n                        exit\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 node node1 device-interface lte\n\nconfig\n\n    authority\n\n        router  router1\n            name  router1\n\n            node  node1\n                name              node1\n\n                device-interface  lte\n                    name               lte\n                    description        "Auto generated host KNI interface for internet"\n                    type               host\n                    network-namespace  lte\n\n                    network-interface  lte-intf\n                        name       lte-intf\n                        global-id  5\n                        type       external\n                        tenant     lte\n\n                        address    169.254.142.4\n                            ip-address     169.254.142.4\n                            prefix-length  31\n                            gateway        169.254.142.5\n                        exit\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 service-route rte-broadband-icmp\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  rte-broadband-icmp\n                name          rte-broadband-icmp\n                service-name  broadband-icmp\n\n                next-hop      node1 broadband-intf\n                    node-name  node1\n                    interface  broadband-intf\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 service-route rte-lte-icmp\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  rte-lte-icmp\n                name          rte-lte-icmp\n                service-name  lte-icmp\n\n                next-hop      node1 lte-intf\n                    node-name   node1\n                    interface   lte-intf\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 service-route rte-internet-broadband\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  rte-internet-broadband\n                name          rte-internet-broadband\n                service-name  internet-broadband\n\n                next-hop      node1 broadband-intf\n                    node-name  node1\n                    interface  broadband-intf\n                exit\n            exit\n        exit\n    exit\nexit\n\nadmin@node1.conductor1# show config running authority router router1 service-route rte-internet-lte\n\nconfig\n\n    authority\n\n        router  router1\n            name           router1\n\n            service-route  rte-internet-lte\n                name          rte-internet-lte\n                service-name  internet-lte\n\n                next-hop      node1 lte-intf\n                    node-name   node1\n                    interface   lte-intf\n                exit\n            exit\n        exit\n    exit\nexit\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Some of the key aspects of the auto-generated configuration are as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each of the generated service has an application-name of the form ",(0,i.jsx)(n.code,{children:"icmp-{service}-{path}"})," as can be seen with ",(0,i.jsx)(n.code,{children:"icmp-internet-broadband"})," and ",(0,i.jsx)(n.code,{children:"icmp-internet-lte"})," in the above example. These application names determine which path is currently available for the service."]}),"\n",(0,i.jsxs)(n.li,{children:["The generated KNIs each represent a unique path and are useful for performing the ICMP probe over those paths. The ",(0,i.jsx)(n.code,{children:"broadband-icmp"})," and ",(0,i.jsx)(n.code,{children:"lte-icmp"})," services are generated to assist with that."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"release-notes",children:"Release Notes"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The plugin must be updated to version 3.0.3 or later prior to ",(0,i.jsx)(n.a,{href:"/docs/intro_upgrade_considerations#plugin-configuration-generation-changes",children:"upgrading the conductor to SSR version 5.4.0."})]})}),"\n",(0,i.jsx)(n.h3,{id:"release-305",children:"Release 3.0.5"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Release Date:"})," Mar 01, 2023"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Router Version"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"128T-icmp-reachability-detection-router-1.1.2-2"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The release with the version number 3.0.4 was skipped due to internal issues."})}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1480"})," Large configuration was causing plugin config generation to fail."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," The config generation logic for the plugin will handle config with long lines correctly."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1494"}),"  No route being injected into FIB table for dns-app-id custom apps."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," Automatically enable the module mode on router with dns-app-id config enabled."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-2009"})," The preferred service path not selected after failover and recovery."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," The ICMP probe state machine gracefully handles the boot up scenario as different paths come up at different times."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-303",children:"Release 3.0.3"}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-1",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1322"})," Plugins do not clean up the the salt states on uninstall"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," Each plugin RPM now manages their dependencies to ensure proper clean up on uninstall"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1378"})," Plugin config generation was failing to remove certain elements from XML"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," Handle the case for missing elements before attempting to remove them. In addition, ensure that the failure for config generation on one router doesn't affect the rest of the routers."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1383"})," Plugin generated services do not work when module mode is not configured"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," The plugin will auto generate the application-identification module mode when possible to ensure the plugin generated services operate correctly."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1419"})," Invalid service config generated for the config director mode"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," The plugin correctly generates the application-name field for generated services to conform to the config director type validation."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1322"})," The plugin state command doesn't show correct information"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The plugin state command output was improved for both summary and detail mode to show correct information."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-301",children:"Release 3.0.1"}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-2",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1170"}),"  Config generation for the plugin failing in the Bonsai mode"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," Correctly handle the config generation for routers where the ICMP plugin is not enabled during bonsai config generation"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1088"}),"  ICMP plugin keeps pinging in the background even when disabled"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," When the plugin is disabled the relevant systemd services are stopped and the router components are uninstalled."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-201",children:"Release 2.0.1"}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-3",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1088"}),"  ICMP plugin keeps pinging in the background even when disabled"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution:"})})," When the plugin is disabled the relevant systemd services are stopped and the router components are uninstalled."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-300",children:"Release 3.0.0"}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-4",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-768"})," Support the ICMP Reachability Detection plugin in SSR versions ",(0,i.jsx)(n.code,{children:"5.1.0"})," and greater."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-611"})," Added support for plugin state. Plugin state information can be accessed on the PCLI using ",(0,i.jsx)(n.code,{children:"show plugins state [router <router>] [node <node>] [{detail | summmary}] 128T-icmp-reachability-detection"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},55292:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/icmp_probe_primary_path_failover_scenario-b1b1c4a782507bbe58bb85d1f65ea99c.png"},48209:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/icmp_probe_sunny_day_scenario-40506cf89f36cd2f0dcdf2ad5531118f.png"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);