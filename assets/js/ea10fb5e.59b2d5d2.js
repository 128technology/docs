"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[4040],{64845:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(74848),s=t(28453);const r={title:"Monitoring Agent Plugin",sidebar_label:"Monitoring Agent Plugin"},o=void 0,l={id:"plugin_monitoring_agent",title:"Monitoring Agent Plugin",description:"The monitoring agent plugin builds upon the monitoring agent application included as part of the SSR software. The monitoring application can be managed via various config files on disk which can be cumbersome and error prone. The plugin provides a better config management experience while providing a more user friendly way to configure the built-in application.",source:"@site/docs/plugin_monitoring_agent.md",sourceDirName:".",slug:"/plugin_monitoring_agent",permalink:"/docs/plugin_monitoring_agent",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1710939338,formattedLastUpdatedAt:"Mar 20, 2024",frontMatter:{title:"Monitoring Agent Plugin",sidebar_label:"Monitoring Agent Plugin"},sidebar:"docs",previous:{title:"M800 Watchdog",permalink:"/docs/plugin_m800_watchdog"},next:{title:"Mosh",permalink:"/docs/plugin_mosh"}},d={},c=[{value:"Installation",id:"installation",level:2},{value:"Plugin",id:"plugin",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Input Configuration",id:"input-configuration",level:3},{value:"Output configuration",id:"output-configuration",level:3},{value:"Agent Configuration",id:"agent-configuration",level:3},{value:"Router configuration",id:"router-configuration",level:3},{value:"Supported Inputs",id:"supported-inputs",level:2},{value:"Metric",id:"metric",level:3},{value:"Event",id:"event",level:3},{value:"Device Interface State",id:"device-interface-state",level:3},{value:"Peer Path State",id:"peer-path-state",level:3},{value:"Arp State",id:"arp-state",level:3},{value:"LTE",id:"lte",level:3},{value:"Top Analytics",id:"top-analytics",level:3},{value:"Top Sessions",id:"top-sessions",level:4},{value:"Top Sources",id:"top-sources",level:4},{value:"Top Applications",id:"top-applications",level:4},{value:"GraphQL",id:"graphql",level:3},{value:"GraphQL variables",id:"graphql-variables",level:4},{value:"Session Records",id:"session-records",level:3},{value:"SSR Processors",id:"ssr-processors",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Local Filesystem",id:"local-filesystem",level:3},{value:"Kafka",id:"kafka",level:3},{value:"Syslog",id:"syslog",level:3},{value:"Monitoring Agent Plugin Release Notes",id:"monitoring-agent-plugin-release-notes",level:2},{value:"Release 3.0.5",id:"release-305",level:3},{value:"New Features and Improvements:",id:"new-features-and-improvements",level:4},{value:"Issues Fixed",id:"issues-fixed",level:4},{value:"Release 2.2.0",id:"release-220",level:3},{value:"Issues Fixed",id:"issues-fixed-1",level:4},{value:"Release 2.1.0",id:"release-210",level:3},{value:"New Features and Improvements:",id:"new-features-and-improvements-1",level:4},{value:"Issues Fixed",id:"issues-fixed-2",level:4},{value:"Release 2.0.3",id:"release-203",level:3},{value:"New Features and Improvements:",id:"new-features-and-improvements-2",level:4},{value:"Release 2.0.1",id:"release-201",level:3},{value:"New Features and Improvements:",id:"new-features-and-improvements-3",level:4},{value:"Release 2.0.0",id:"release-200",level:3},{value:"New Features and Improvements:",id:"new-features-and-improvements-4",level:4}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The monitoring agent plugin builds upon the ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring",children:"monitoring agent"})," application included as part of the SSR software. The monitoring application can be managed via various ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#file-based-configuration",children:"config files"})," on disk which can be cumbersome and error prone. The plugin provides a better config management experience while providing a more user friendly way to configure the built-in application."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"plugin",children:"Plugin"}),"\n",(0,i.jsxs)(n.p,{children:["For deployments running SSR version ",(0,i.jsx)(n.code,{children:"5.1.0"})," or greater on the conductor, install the monitoring agent plugin for configuration management."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The instructions for installing and managing the plugin can be found ",(0,i.jsx)(n.a,{href:"/docs/plugin_intro#installation-and-management",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"With the plugin installed, the configuration for the monitoring agent application can be managed via the conductor. The general workflow for creating the configuration is as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Configure the inputs"}),"\n",(0,i.jsx)(n.li,{children:"Configure the outputs"}),"\n",(0,i.jsx)(n.li,{children:"Create an agent config profile"}),"\n",(0,i.jsx)(n.li,{children:"Reference the profile on the router"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"input-configuration",children:"Input Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The monitoring agent plugin allows the user to configure a set of inputs to be captured to monitor the routers. The configuration can be found under ",(0,i.jsx)(n.code,{children:"config > authority > monitoring > input"}),". The configuration will depend on the type of input selected and here are the common fields that apply to all the inputs"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"type"}),(0,i.jsx)(n.td,{children:"enumeration"}),(0,i.jsx)(n.td,{children:"The type of the input such as device-state, metrics etc"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"additional-config"}),(0,i.jsx)(n.td,{children:"multiline-toml-string"}),(0,i.jsx)(n.td,{children:"Additional telegraf configuration for the input not captured by the data model"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of tags to be included for this particular input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > tag"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the tag"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > node"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Use the node name of the router as tag value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > router"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Use the router name of the router as tag value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > value"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"User specified value for the tag"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Based on the selected type, additional type specific configuration will be configurable. Here's an example of a ",(0,i.jsx)(n.code,{children:"custom-input"})," which allows the user to create a TOML telegraf configuration."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"admin@node1.conductor1#\nadmin@node1.conductor1# configure authority monitoring input cpu\nadmin@node1.conductor1 (input[name=cpu])# type custom-input\n*admin@node1.conductor1 (input[name=cpu])# config\nEnter toml for config (Press CTRL-D to finish):\n[[inputs.cpu]]\n  ## Whether to report per-cpu stats or not\n  percpu = true\n  ## Whether to report total system cpu stats or not\n  totalcpu = true\n  ## If true, collect raw CPU time metrics.\n  collect_cpu_time = false\n  ## If true, compute and report the sum of all non-idle CPU states.\n  report_active = false\n\n\n*admin@node1.conductor1 (input[name=cpu])#\n"})}),"\n",(0,i.jsx)(n.h3,{id:"output-configuration",children:"Output configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The output configuration provides information about the various data sink for the inputs. The monitoring configuration provides specific output types for convenience as well as a ",(0,i.jsx)(n.code,{children:"custom-output"})," type for specifying any telegraf supported output definition. The common fields are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the output"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"type"}),(0,i.jsx)(n.td,{children:"enumeration"}),(0,i.jsx)(n.td,{children:"The type of the output such as Kafka, syslog etc"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"push-jitter"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"The amount of time to jitter sending of the data to the output"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"batch-size"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"The maximum number of rows of data to send at once"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"buffer-limit"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"The maximum number of unsent metrics in the buffer"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"data-format"}),(0,i.jsx)(n.td,{children:"enumeration"}),(0,i.jsx)(n.td,{children:"The output data format for telegraf such as influx, json"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"format"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"When the data-format is other, the name of the output format supported by telegraf"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"additional-config"}),(0,i.jsx)(n.td,{children:"multiline-toml-string"}),(0,i.jsx)(n.td,{children:"Additional telegraf configuration for the output not captured by the data model"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Based on the selected type, additional type specific configuration will be configurable. Here's an example of a ",(0,i.jsx)(n.code,{children:"custom-output"})," which allows the user to create a TOML telegraf configuration"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:'*admin@node1.conductor1# configure authority monitoring output http\n*admin@node1.conductor1 (output[name=http])# type custom-output\n*admin@node1.conductor1 (output[name=http])#\n*admin@node1.conductor1 (output[name=http])# config\nEnter toml for config (Press CTRL-D to finish):\n# A plugin that can transmit metrics over HTTP\n[[outputs.http]]\n  ## URL is the address to send metrics to\n  url = "http://127.0.0.1:8080/telegraf"\n\n\n*admin@node1.conductor1 (output[name=http])#\n'})}),"\n",(0,i.jsx)(n.h3,{id:"agent-configuration",children:"Agent Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"agent-config"})," can be leveraged to create a monitoring profile by referencing the various inputs and outputs configured in the previous steps. This allows multiple profiles to be created and applies to different routers. The various configuration options for the ",(0,i.jsx)(n.code,{children:"agent-config"})," as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the agent configuration profile"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"push-interval"}),(0,i.jsx)(n.td,{children:"interval"}),(0,i.jsx)(n.td,{children:"The frequency with which to send data to the output(s)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sample-interval"}),(0,i.jsx)(n.td,{children:"interval"}),(0,i.jsx)(n.td,{children:"The frequency with which to collect data from the input(s)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of tags to be included for this particular input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > tag"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the tag"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > node"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Use the node name of the router as tag value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > router"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Use the router name of the router as tag value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags > value"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"User specified value for the tag"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"variables"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of config variables which allows for customization on the running system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"variables > name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the variable"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"variables > query"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["The ",(0,i.jsx)(n.a,{href:"#graphql-variables",children:"GraphQL query"})," to be executed to determine the value of the variable"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of inputs to be included in the profile"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > name"}),(0,i.jsx)(n.td,{children:"reference"}),(0,i.jsx)(n.td,{children:"Reference to the input configured above"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > push-interval"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"Override the push-interval for the specific input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > sample-interval"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"Override the sample-interval for the specific input"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > include-all-outputs"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"Default; true. When enabled, the input will be sent to all configured outputs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > output"}),(0,i.jsx)(n.td,{children:"reference"}),(0,i.jsxs)(n.td,{children:["When ",(0,i.jsx)(n.code,{children:"include-all-outputs"})," is false, configure a set of outputs to be used as data sink"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"input > additional-config"}),(0,i.jsx)(n.td,{children:"multiline-toml-string"}),(0,i.jsx)(n.td,{children:"Additional Telegraf configuration not present in the datamodel such as preprocessors, aggregators etc"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example of the agent configuration looks as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        monitoring\n\n            agent-config  my-agent\n                name             my-agent\n\n                tags             custom\n                    tag    custom\n                    value  custom1\n                exit\n\n                tags             router\n                    tag     router\n                    router\n                exit\n                sample-interval  10s\n                push-interval    30s\n\n                input            device-state\n                    name                 device-state\n                    include-all-outputs  false\n                    output               syslog\n                exit\n\n                input            events\n                    name                 events\n                    push-interval        1s\n                    include-all-outputs  true\n                exit\n\n                input            graph\n                    name  graph\n                exit\n\n                input            metrics\n                    name                 metrics\n                    sample-interval      100s\n                    include-all-outputs  false\n                    output               kafka\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.h3,{id:"router-configuration",children:"Router configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Once all the inputs, outputs and agent-config are provisioned, the profile can be referenced on the individual routers. The monitoring config elements can be found under ",(0,i.jsx)(n.code,{children:"authority > router > system > monitoring"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"enabled"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"Enable or disable the Monitoring Agent"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"agent-config"}),(0,i.jsx)(n.td,{children:"reference"}),(0,i.jsx)(n.td,{children:"The agent-config that should apply to this router"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Here's an example of the router configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        router  router1\n            name    router1\n\n            system\n\n                monitoring\n                    enabled       true\n                    agent-config  my-agent\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.h2,{id:"supported-inputs",children:"Supported Inputs"}),"\n",(0,i.jsx)(n.p,{children:"The monitoring-agent comes pre-packaged with a set of collectors to assist in the monitoring of the SSR platform. Here are the various collectors and how to use them:"}),"\n",(0,i.jsx)(n.h3,{id:"metric",children:"Metric"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"metrics"})," input is responsible for collecting the configured metrics from a running system. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > metrics"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"use-default-config"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"Whether to use the set of builtin metrics as recommended by the SSR for monitoring"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metric"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of metrics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metric > name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The desired name of the metric to include in the telegraf"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metric > id"}),(0,i.jsx)(n.td,{children:"metric-id"}),(0,i.jsx)(n.td,{children:"The ID of the metric as it exists in the REST API"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"filter"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of parameter values that should be included in the output"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"filter > parameter"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the parameter being referenced"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"filter > value"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"The list of values to be included in the match"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example configuration of the metrics input looks as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  bandwidth-metrics\n                name     bandwidth-metrics\n                type     metrics\n\n                metrics\n                    use-default-config  false\n\n                    metric              internet-rx-bandwidth stats/aggregate-session/service/bandwidth-received\n                        name  internet-rx-bandwidth\n                        id    stats/aggregate-session/service/bandwidth-received\n                    exit\n\n                    metric              internet-tx-bandwidth stats/aggregate-session/service/bandwidth-received\n                        name  internet-tx-bandwidth\n                        id    stats/aggregate-session/service/bandwidth-received\n                    exit\n\n                    filter              service\n                        parameter  service\n                        value      internet\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#metric-collector",children:"metric collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"event",children:"Event"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"event"})," input can be used for collecting and pushing events for various categories such as admin, alarm, system, traffic and provisioning as they occur on the system. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > event"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"admin"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include admin events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"audit"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include audit events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"alarm"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include alarm events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"traffic"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include traffic events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"provisioning"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include provisioning events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"system"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Include system events generated by the system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"track-index"}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Enable best effort tracking of events generated while the output cannot be reached"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The events described above need to be enabled for the router under ",(0,i.jsx)(n.code,{children:"authority > router > system > audit"})," for the event input to be able to collect and push those events."]})}),"\n",(0,i.jsx)(n.p,{children:"An example configuration for events inputs is as below"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  events\n                name               events\n                type               events\n\n                event\n                    admin         true\n                    audit         false\n                    alarm         true\n                    traffic       false\n                    provisioning  false\n                    system        false\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#event-collector",children:"event collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"device-interface-state",children:"Device Interface State"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"device-state"})," input can be used for monitoring the admin, oper, provisional, and redundancy status of various device-interfaces configured on the node. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > device-interface"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"interface"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"Device interface names to be included in the collection. Empty list implies all configured interfaces are collected"})]})})]}),"\n",(0,i.jsxs)(n.p,{children:["The example configuration for ",(0,i.jsx)(n.code,{children:"device-state"})," input is as shown below"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  device-state\n                name              device-state\n\n                tags              my-tag\n                    tag    my-tag\n                    value  my-value\n                exit\n\n                type              device-interface\n\n                device-interface\n                    interface  wan1\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#device-interface-state-collector",children:"device interface state collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"peer-path-state",children:"Peer Path State"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"peer-path"})," input can be used for monitoring the up/down status of all the peer paths on the node. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > peer-path"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"network-interface"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"Network interface names to be included in the collection. Empty list implies all configured interfaces are collected"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"peer-router"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"Peer routers to be included in the collection. Empty list implies all configured peer routers are collected"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The example configuration for ",(0,i.jsx)(n.code,{children:"peer-path"})," input is as shown below"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  peer-paths\n                name       peer-paths\n                type       peer-path\n\n                peer-path\n                    network-interface  dpdk3\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#peer-path-state-collector",children:"peer path state collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"arp-state",children:"Arp State"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"arp-state"})," input can be used for monitoring the arp table status of a network interface configured on the node. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > arp"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"device-interface"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"Device interface names to be included in the collection. Empty list implies all configured interfaces are collected"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"network-interface"}),(0,i.jsx)(n.td,{children:"leaf-list"}),(0,i.jsx)(n.td,{children:"Network interface names to be included in the collection. Empty list implies all configured interfaces are collected"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The example configuration for ",(0,i.jsx)(n.code,{children:"arp"})," input is as shown below"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  arp-state\n                name  arp-state\n                type  arp\n\n                arp\n                    device-interface  dpdk3\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#arp-state-collector",children:"arp state collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"lte",children:"LTE"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"lte"})," input can be used for pushing the ",(0,i.jsx)(n.code,{children:"signal-strength"})," and ",(0,i.jsx)(n.code,{children:"carrier"})," information to the monitoring stack. It can be enabled by setting ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > type"})," as lte"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  lte-test\n                name  lte-collector\n                type  lte\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#lte-collector",children:"LTE collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"top-analytics",children:"Top Analytics"}),"\n",(0,i.jsx)(n.p,{children:"The top analytics input can be used for monitoring the top sources, top sessions and top applications on the router."}),"\n",(0,i.jsx)(n.h4,{id:"top-sessions",children:"Top Sessions"}),"\n",(0,i.jsxs)(n.p,{children:["The input type of ",(0,i.jsx)(n.code,{children:"top-sessions"})," can be used to enable the top-sessions configuration. An example of such configuration is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  top-sessions\n                name  top-sessions\n                type  top-sessions\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.h4,{id:"top-sources",children:"Top Sources"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"top-sources"})," input can be used to configure the various aspects of the top sources API on the system. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > top-sources"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"max-rows"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"10"}),(0,i.jsx)(n.td,{children:"The maximum number of rows to be collected per sample"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"category"}),(0,i.jsx)(n.td,{children:"enumeration"}),(0,i.jsx)(n.td,{children:"total-data"}),(0,i.jsxs)(n.td,{children:["Controls how the top sources are determined. Options are ",(0,i.jsx)(n.code,{children:"session-count"})," and ",(0,i.jsx)(n.code,{children:"total-data"})]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example configuration is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  top-sources\n                name         top-sources\n                type         top-sources\n\n                top-sources\n                    max-rows  10\n                    category  session-count\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.h4,{id:"top-applications",children:"Top Applications"}),"\n",(0,i.jsxs)(n.p,{children:["The monitoring agent ",(0,i.jsx)(n.code,{children:"top-applications"})," input can be used to configure various aspects of the API on the system. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > top-applications"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"max-rows"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"10"}),(0,i.jsx)(n.td,{children:"The maximum number of rows to be collected per sample"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"min-session-count"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"The minimum number of sessions for an application to be collected"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"application-filter"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Restrict the applications to be included in the collection"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example of the top applications configuration is as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            input  top-apps\n                name              top-apps\n                type              top-applications\n\n                top-applications\n                    max-rows           10\n                    min-session-count  5\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#top-analytics-collector",children:"top analytics collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h3,{id:"graphql",children:"GraphQL"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"graphql"})," input can be used to retrieve data from a GraphQL API. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > input > graphql"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"query-entry-point"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["The path to a point in the graphQL tree from which fields and tags will be extracted. This path may contain (",(0,i.jsx)(n.code,{children:"<key>:<value>"}),") graphQL arguments such as (name:'${ROUTER}')."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-field"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of leaf nodes to be collected from query response as fields"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-field > name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the field"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-field > value"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The graphQL query path from which to extract the value. The path can be relative to the entry-point or absolute. If the path is absolute, it cannot diverge from the entry point path and must exclude graphQL arguments"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-tag"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of leaf nodes to be collected from query response as tags"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-tag > name"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of the tag"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"extract-tag > value"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The graphQL query path from which to extract the value. The path can be relative to the entry-point or absolute. If the path is absolute, it cannot diverge from the entry point path and must exclude graphQL arguments"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example configuration using can be seen as below"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        monitoring\n\n            input  graph\n                name     graph\n                type     graphql\n\n                graphql\n                    query-entry-point  allRouters(name:'${ROUTER}')/nodes/nodes(name:'${NODE}')/nodes/deviceInterfaces/nodes\n\n                    extract-field      enabled\n                        name   enabled\n                        value  enabled\n                    exit\n\n                    extract-field      interface-count\n                        name   interface-count\n                        value  allRouters/nodes/nodes/nodes/deviceInterfaces/totalCount\n                    exit\n\n                    extract-tag        router-name\n                        name   router-name\n                        value  allRouters/nodes/name\n                    exit\n\n                    extract-tag        name\n                        name   name\n                        value  name\n                    exit\n\n                    extract-tag        type\n                        name   type\n                        value  type\n                    exit\n\n                    extract-tag        admin-status\n                        name   admin-status\n                        value  state/adminStatus\n                    exit\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#graphql-collector",children:"GraphQL collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h4,{id:"graphql-variables",children:"GraphQL variables"}),"\n",(0,i.jsx)(n.p,{children:"The new variable substitution scheme allows for GraphQL based queries to be executed on the router to obtain useful information to be included as tags. For example, the scheme can be used to periodically send the entitlements information or use a config description field as a tag for some inputs. The monitoring agent plugin provides a mechanism to configure such variables as shown in in the example below"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            agent-config  my-agent\n                name             my-agent\n\n                variables        entitlement\n                    variable  entitlement\n                    query     allRouters(name:${ROUTER})/nodes/entitlement/id\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.p,{children:"When configuring the variables on the file system, the agent configuration can include the variables as follows:"}),"\n",(0,i.jsxs)(n.p,{children:["Path: ",(0,i.jsx)(n.code,{children:"/etc/128t-monitoring/config.yaml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'enabled: true\nvariables:\n  - name: ENTITLEMENT\n    query: allRouters(name:"${ROUTER}")/nodes/entitlement/id\n  - name: DESCRIPTION\n    query: allRouters(name:"${ROUTER}")/nodes/nodes(name:"${NODE}")/nodes/deviceInterfaces(name:"10")/nodes/description\n'})}),"\n",(0,i.jsx)(n.h3,{id:"session-records",children:"Session Records"}),"\n",(0,i.jsxs)(n.p,{children:["The monitoring agent ",(0,i.jsx)(n.code,{children:"session-records"})," input can be used to generate session records on the system."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The session record input is only compatible with SSR >= 5.4.0."})}),"\n",(0,i.jsx)(n.p,{children:"The various configuration options available under authority > monitoring > input > session-records are as follows:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"include-all-records"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"true"}),(0,i.jsx)(n.td,{children:"Whether to include all the session records generated by the system."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"record-type"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"empty"}),(0,i.jsx)(n.td,{children:"List of valid session record type such as create, intermediate, modify, close, error"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#session-records-collector",children:"session-record collector"})," for more details about the input."]})}),"\n",(0,i.jsx)(n.h2,{id:"ssr-processors",children:"SSR Processors"}),"\n",(0,i.jsxs)(n.p,{children:["Processors are not currently exposed explicitly in the plugin config, but they can be achieved through an input's ",(0,i.jsx)(n.a,{href:"#input-configuration",children:"additional config"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to the ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#ssr-processors",children:"ssr processors"})," documentation for examples and sample config."]})}),"\n",(0,i.jsx)(n.h2,{id:"outputs",children:"Outputs"}),"\n",(0,i.jsx)(n.h3,{id:"local-filesystem",children:"Local Filesystem"}),"\n",(0,i.jsx)(n.p,{children:"Configuring the file output will write metrics to the local filesystem. This can be useful for testing or as a backup data source in case network connectivity issues prevent data from reaching the intended collection endpoint."}),"\n",(0,i.jsxs)(n.p,{children:["The file output is one of the built in available types for the monitoring agent plugin. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > output > file"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"file"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsxs)(n.td,{children:["Either ",(0,i.jsx)(n.code,{children:"stdout"})," or absolute path to file on disk"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rotation-interval"}),(0,i.jsx)(n.td,{children:"duration"}),(0,i.jsx)(n.td,{children:"The file(s) will be rotated at the specified interval"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rotation-max-size"}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"The file(s) will be rotated when it becomes larger than the configured size."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rotation-max-archives"}),(0,i.jsx)(n.td,{children:"unit32"}),(0,i.jsx)(n.td,{children:"The maximum number of archives to keep when the file(s) is rotated."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example configuration for file output looks as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            output  file\n                name  file\n                type  file\n\n                file\n                    file                   stdout\n                    file                   /tmp/foobar\n                    rotation-interval      12h\n                    rotation-max-size      100\n                    rotation-max-archives  5\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.p,{children:"The monitoring configuration corresponds to the following telegraf configuration."}),"\n",(0,i.jsxs)(n.p,{children:["Path: ",(0,i.jsx)(n.code,{children:"/var/lib/128t-monitoring/outputs/file.conf"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[[outputs.file]]\n  ## Files to write to, "stdout" is a specially handled file.\n  files = ["stdout", "/tmp/metrics.out"]\n\n  ## Use batch serialization format instead of line based delimiting.  The\n  ## batch format allows for the production of non line based output formats and\n  ## may more efficiently encode metric groups.\n  # use_batch_format = false\n\n  ## The file will be rotated after the time interval specified.  When set\n  ## to 0 no time based rotation is performed.\n  # rotation_interval = "0d"\n\n  ## The logfile will be rotated when it becomes larger than the specified\n  ## size.  When set to 0 no size based rotation is performed.\n  # rotation_max_size = "0MB"\n\n  ## Maximum number of rotated archives to keep, any older logs are deleted.\n  ## If set to -1, no archives are removed.\n  # rotation_max_archives = 5\n\n  ## Data format to output.\n  ## Each data format has its own unique set of configuration options, read\n  ## more about them here:\n  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md\n  data_format = "influx"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"kafka",children:"Kafka"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"kafka"})," output is one of the built in available types for the monitoring agent plugin. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > output > kafka"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"broker"}),(0,i.jsx)(n.td,{children:"list"}),(0,i.jsx)(n.td,{children:"List of Kafka broker(s) to communicate with"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"broker > host"}),(0,i.jsx)(n.td,{children:"ip-address or domain name"}),(0,i.jsx)(n.td,{children:"The address or domain name for the Kafka broker"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"broker > port"}),(0,i.jsx)(n.td,{children:"l4-port"}),(0,i.jsx)(n.td,{children:"The port number for the Kafka broker"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"compression-codec"}),(0,i.jsx)(n.td,{children:"enumeration"}),(0,i.jsx)(n.td,{children:"The compression codec to be used for communicating with Kafka"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"max-retry"}),(0,i.jsx)(n.td,{children:"unit32"}),(0,i.jsx)(n.td,{children:"The maximum number of times to retry before failing until the next push interval"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"topic"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The Kafka topic to produce messages for"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Here's an example monitoring config for ",(0,i.jsx)(n.code,{children:"kafka"})," output"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"config\n\n    authority\n\n        monitoring\n\n            output  kafka\n                name               kafka\n                type               kafka\n                data-format        json\n\n                kafka\n\n                    broker  192.168.1.7 9092\n                        host  192.168.1.7\n                        port  9092\n                    exit\n                    topic   test\n                exit\n                additional-config  (text/toml)\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.p,{children:"This example sends data to a Kafka broker:"}),"\n",(0,i.jsxs)(n.p,{children:["Path: ",(0,i.jsx)(n.code,{children:"/var/lib/128t-monitoring/outputs/kafka.conf"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[[outputs.kafka]]\n  ## URLs of kafka brokers\n  brokers = ["<ip>:9092"]\n  ## Kafka topic for producer messages\n  topic = "telegraf"\n  max_retry = 3\n  data_format = "json"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"syslog",children:"Syslog"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"syslog"})," output is one of the built in available types for the monitoring agent plugin. The various configuration options available under ",(0,i.jsx)(n.code,{children:"authority > monitoring > output > syslog"})," are as follows:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Element"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"address"}),(0,i.jsx)(n.td,{children:"uri"}),(0,i.jsx)(n.td,{children:"The URL to the syslog server. For example tcp://127.0.0.1:8094"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"default-severity-code"}),(0,i.jsx)(n.td,{children:"uint8"}),(0,i.jsx)(n.td,{children:"Default severity code to be used when severity_code metric field is not present"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"default-facility-code"}),(0,i.jsx)(n.td,{children:"uint8"}),(0,i.jsx)(n.td,{children:"Default severity code to be used when severity_code metric field is not present"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sdid"}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The default Syslog SDID to be used for fields and tags"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tcp-keep-alive-period"}),(0,i.jsx)(n.td,{children:"duration"}),(0,i.jsx)(n.td,{children:"Period between TCP keep alive probes"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Here's an example monitoring plugin config for ",(0,i.jsx)(n.code,{children:"syslog"})," output"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-config",children:"config\n\n    authority\n\n        monitoring\n\n            output  syslog\n                name    syslog\n                type    syslog\n\n                syslog\n                    address                tcp://localhost:514\n                    default-severity-code  3\n                    default-facility-code  20\n                exit\n            exit\n        exit\n    exit\nexit\n"})}),"\n",(0,i.jsx)(n.p,{children:"In this example data is sent via syslog:"}),"\n",(0,i.jsxs)(n.p,{children:["Path: ",(0,i.jsx)(n.code,{children:"/var/lib/128t-monitoring/outputs/syslog.conf"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[[outputs.syslog]]\n  address = "udp://<ip>:514"\n  default_sdid = "128T"\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:["For syslog output, not specifying the ",(0,i.jsx)(n.code,{children:"default_sdid"})," parameter can result in empty or truncated messages"]})}),"\n",(0,i.jsx)(n.h2,{id:"monitoring-agent-plugin-release-notes",children:"Monitoring Agent Plugin Release Notes"}),"\n",(0,i.jsx)(n.h3,{id:"release-305",children:"Release 3.0.5"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Release Date:"})," Dec 14, 2023"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Router Version"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"128T-monitoring-agent-plugin-router-1.1.10-2"}),"\n",(0,i.jsx)(n.li,{children:"128T-monitoring-agent-3.8.9-1"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"new-features-and-improvements",children:"New Features and Improvements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-630"})," Report additional LTE metrics"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/concepts_monitoring#lte-collector",children:"LTE collector"})," now includes additional information such as ",(0,i.jsx)(n.code,{children:"carrier"}),", ",(0,i.jsx)(n.code,{children:"connection-status"}),", ",(0,i.jsx)(n.code,{children:"active-band-class"}),", ",(0,i.jsx)(n.code,{children:"apn"}),", ",(0,i.jsx)(n.code,{children:"service-mode"})," and ",(0,i.jsx)(n.code,{children:"service-status"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-2275"})," Introduced ",(0,i.jsx)(n.code,{children:"timeout"})," argument for ",(0,i.jsx)(n.code,{children:"run-once"})," command"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["A new ",(0,i.jsx)(n.code,{children:"timeout"})," argument is added for the ",(0,i.jsx)(n.code,{children:"run-once"})," testing tool provided by ",(0,i.jsx)(n.code,{children:"monitoring-agent-cli"})," to control how long the input waits to complete its data completion."]}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"PLUGIN-2069 Disabling monitoring agent does not stop the collection services"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The various monitoring agent services are now correctly stopped when the plugin is disabled or uninstalled."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["PLUGIN-2274 Monitoring Agent Plugin incorrectly allows the ",(0,i.jsx)(n.code,{children:"data-format"})," option on some outputs."]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," For syslog output, the ",(0,i.jsx)(n.code,{children:"data-format"})," option will no longer be allowed to avoid user confusion."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"I95-52139 High memory reported when using the cpu collector"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The underlying memory leak for the CPU collector has been fixed to resolve the high memory condition."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["PLUGIN-2272 The ",(0,i.jsx)(n.code,{children:"include-output"})," configuration causes duplicated config to be added to the generated config"]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The code generation logic handles multiple ",(0,i.jsx)(n.code,{children:"include-output"})," requests correctly and resolves the duplication in the generated config."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"I95-53604 Router syslog output is sometimes malformed"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," When an input uses multiple syslog outputs, the data corruption caused by message serialization code has been addressed."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"WAN-1714 Dataplane CPU shows incorrect data for core utilization on node0"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The cpu collector handles various edge cases with missing data, IDP enabled, etc., when reporting the core utilization statistics."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"I95-43137 Session Records not sent correctly in syslog output"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The syslog message parsing was improved to correctly handle the JSON output format produced by session records input."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-220",children:"Release 2.2.0"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Release Date:"})," Oct 25, 2022"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Router Version"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"128T-monitoring-agent-plugin-router-1.1.0-4"}),"\n",(0,i.jsx)(n.li,{children:"128T-monitoring-agent-3.7.3-3"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-1",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1902"})," Monitoring agent plugin fails to generate the metric input"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," Improved the handling of default values when processing the monitoring agent metrics input configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1903"})," Monitoring configuration does not work for milliseconds sampling and push interval"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The validation for the sampling and push interval no longer allows the invalid interval values in milliseconds, microseconds and nanoseconds"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"WAN-1449"})," The cpu state collector does not report correct values for IDP data core"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The query for retrieving the IDP data core usage is corrected to handle some errors more gracefully"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-210",children:"Release 2.1.0"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Release Date:"})," Jun 24, 2022"]}),"\n",(0,i.jsx)(n.h4,{id:"new-features-and-improvements-1",children:"New Features and Improvements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MON-391"})," Add support for tech support info collection for all monitoring agent components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MON-389"})," Add support for adjacent hostname in the peer-path collector"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"issues-fixed-2",children:"Issues Fixed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1729"})," Monitoring agent service stopped sending metrics"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Resolution"})})," The monitoring agent service will now be stopped gracefully before upgrades and will automatically restart after upgrade"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-203",children:"Release 2.0.3"}),"\n",(0,i.jsx)(n.h4,{id:"new-features-and-improvements-2",children:"New Features and Improvements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-1163"})," Updated the plugin to use the latest monitoring agent version."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-201",children:"Release 2.0.1"}),"\n",(0,i.jsx)(n.h4,{id:"new-features-and-improvements-3",children:"New Features and Improvements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MON-352"})," Updated the plugin to use the latest monitoring agent version."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"release-200",children:"Release 2.0.0"}),"\n",(0,i.jsx)(n.h4,{id:"new-features-and-improvements-4",children:"New Features and Improvements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PLUGIN-667"})," Introduce a new monitoring agent plugin to better manage the monitoring agent through the GUI and PCLI. Some key highlights are:"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Support all the SSR developed collectors such as metrics, events, top-sessions, etc."}),"\n",(0,i.jsxs)(n.li,{children:["Support the most commonly used outputs such as file, syslog, ",(0,i.jsx)(n.code,{children:"Kafka"}),", etc."]}),"\n",(0,i.jsx)(n.li,{children:"Support multi-line input fields for generic telegraf configuration with TOML syntax validation."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);