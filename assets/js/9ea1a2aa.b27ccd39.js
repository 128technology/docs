"use strict";(self.webpackChunk_128t_docs=self.webpackChunk_128t_docs||[]).push([[7925],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},60046:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],c={title:"Programmable Command Line Interface (PCLI)",sidebar_label:"PCLI"},s=void 0,l={unversionedId:"concepts_pcli",id:"concepts_pcli",title:"Programmable Command Line Interface (PCLI)",description:"About the PCLI",source:"@site/docs/concepts_pcli.md",sourceDirName:".",slug:"/concepts_pcli",permalink:"/docs/concepts_pcli",draft:!1,tags:[],version:"current",lastUpdatedAt:1693340537,formattedLastUpdatedAt:"Aug 29, 2023",frontMatter:{title:"Programmable Command Line Interface (PCLI)",sidebar_label:"PCLI"},sidebar:"docs",previous:{title:"Machine Communication",permalink:"/docs/concepts_machine_communication"},next:{title:"Session Timers",permalink:"/docs/concepts_session_timer"}},p={},u=[{value:"About the PCLI",id:"about-the-pcli",level:2},{value:"The PCLI Prompt",id:"the-pcli-prompt",level:2},{value:"Shortcuts",id:"shortcuts",level:2},{value:"<code>&lt;ctrl&gt;+z</code>",id:"ctrlz",level:3},{value:"<code>!</code> (run previous command)",id:"-run-previous-command",level:3},{value:"Features",id:"features",level:2},{value:"Paste Config",id:"paste-config",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"about-the-pcli"},"About the PCLI"),(0,i.kt)("p",null,"The Programmable Command Line Interface (PCLI) is one of the two primary human interfaces for the SSR; this document uses the terms PCLI and CLI interchangeably. This document describes how to use the PCLI commands supported by the SSR. "),(0,i.kt)("p",null,"Note that all of the examples in this document are run as the ",(0,i.kt)("em",{parentName:"p"},"admin")," role (as denoted by the prompt in this and other examples); however, each command also indicates which user roles \u2013 either ",(0,i.kt)("em",{parentName:"p"},"user")," or ",(0,i.kt)("em",{parentName:"p"},"admin")," at the time of this writing \u2013 are eligible to run the command based upon that command's privileges. Note that unprivileged ",(0,i.kt)("em",{parentName:"p"},"user"),' accounts are not only unable to execute these commands, they do not "see" them in the PCLI as part of the help text, etc.'),(0,i.kt)("p",null,"Optional arguments are written in brackets (",(0,i.kt)("inlineCode",{parentName:"p"},"[")," ",(0,i.kt)("inlineCode",{parentName:"p"},"]"),"), and users may include or omit them as needed. Variable arguments (where users need to supply a value, rather than entering in the literal string shown in the syntax) are written in angle brackets (",(0,i.kt)("inlineCode",{parentName:"p"},"<")," ",(0,i.kt)("inlineCode",{parentName:"p"},">"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"show stats packet-processing action failure [core <core>]\n")),(0,i.kt)("p",null,"In this example, a user may include core information",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),'. If including core, the user must supply the literal string "core" and a value for the core, such as "0".'),(0,i.kt)("p",null,"Braces, brackets, and pipes are often combined and nested to describe the complete grammar of the command line syntax for any given command."),(0,i.kt)("h2",{id:"the-pcli-prompt"},"The PCLI Prompt"),(0,i.kt)("p",null,'The PCLI will indicate when there are uncommitted configuration changes via a change to the prompt. When uncommitted changes exist, the prompt is prefixed with an asterisk ("',"*",'"):'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"*admin@labsystem1.fiedler#\n*admin@labsystem1.fiedler# validate\nCandidate configuration is valid\n*admin@labsystem1.fiedler# commit\nAre you sure you want to commit the candidate config? [y/N]: y\nConfiguration committed\nadmin@labsystem1.fiedler#\n")),(0,i.kt)("h2",{id:"shortcuts"},"Shortcuts"),(0,i.kt)("h3",{id:"ctrlz"},(0,i.kt)("inlineCode",{parentName:"h3"},"<ctrl>+z")),(0,i.kt)("p",null,"This command is the equivalent to the following two actions:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"<enter>"),": Execute what is currently on the prompt line (if any)."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"top<enter>"),": Exit the current menu and go to the root of the PCLI tree.")),(0,i.kt)("p",null,"When the buffer is empty:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"admin@node1.router1# configure authority router router1 <enter>\nadmin@node1.router1 (router[name=router1])# <ctrl-z>\nadmin@node1.router1#\n")),(0,i.kt)("p",null,"With a valid command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"admin@node1.router1# configure authority router router1 <enter>\nadmin@node1.router1 (router[name=Fabric128])# validate <ctrl-z>\n\u2714 Validating...\nCandidate configuration is valid\nadmin@node1.router1#\n")),(0,i.kt)("p",null,"With an invalid command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"admin@node1.router1 (router[name=router1])# bad <ctrl-z>\nCommand 'bad' not found (use '?' for help)\nadmin@node1.router1#\n")),(0,i.kt)("h3",{id:"-run-previous-command"},(0,i.kt)("inlineCode",{parentName:"h3"},"!")," (run previous command)"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"!")," can be used to execute a previously executed command from the PCLI's history."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"PCLI history can be seen by running ",(0,i.kt)("inlineCode",{parentName:"p"},"show history"),".")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"!")," command offers three options:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"!!"),": Re-run the last command."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"!<number>"),": Re-run a specific command from the PCLI history. Negative numbers are supported to perform a reverse search of the history (i.e., ",(0,i.kt)("inlineCode",{parentName:"li"},"!-1")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"!!"),")."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"!<string>"),": Re-run the most recent substring match from the PCLI history (reverse search of history).")),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("h3",{id:"paste-config"},"Paste Config"),(0,i.kt)("p",null,"When working across multiple systems, it is convenient to copy snippets of one configuration and paste them directly into another SSR configuration. The PCLI detects configuration entered in bulk and accepts input in either ",(0,i.kt)("inlineCode",{parentName:"p"},"show config")," native format or flat format. Invalid configuration is handled as if it were entered line by line."),(0,i.kt)("p",null,"An example of copying a service from one system and pasting it to another is shown below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"admin@tp-colo-primary.tp-colo# show config running authority service internet_service\n\nconfig\n\n    authority\n\n        service  internet_service\n            name                  internet_service\n            enabled               true\n            scope                 private\n            security              no_encryption\n            address               0.0.0.0/0\n\n            access-policy         _internal_\n                source      _internal_\n                permission  allow\n            exit\n\n            access-policy         t128\n                source      t128\n                permission  allow\n            exit\n            service-policy        data-best-effort\n            share-service-routes  true\n        exit\n    exit\nexit\n\n...\n\nadmin@tp-colo-secondary.tp-colo# config\n(config)> authority\n(authority)> service internet_service\n(service)> name internet_service\n(service)> enabled true\n(service)> scope private\n(service)> security no_encryption\n(service)> address 0.0.0.0/0\n(service)> access-policy linux\n(access-policy)> source linux\n(access-policy)> permission allow\n(access-policy)> exit\n(service)> access-policy t128\n(access-policy)> source t128\n(access-policy)> permission allow\n(access-policy)> exit\n(service)> service-policy data-best-effort\n(service)> share-service-routes true\n(service)> exit\n(authority)> exit\n(config)> exit\n")),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"forwarding plan metrics are stored uniquely per worker ",(0,i.kt)("inlineCode",{parentName:"li"},"forwarding-core-count"),".",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}d.isMDXComponent=!0}}]);